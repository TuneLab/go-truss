// Code generated by go-bindata.
// sources:
// NAME-service/cmd/NAME/main.gotemplate
// NAME-service/cmd/NAME-server/main.gotemplate
// NAME-service/handlers/handlers.gotemplate
// NAME-service/handlers/hooks.gotemplate
// NAME-service/middlewares/endpoints.gotemplate
// NAME-service/middlewares/service.gotemplate
// NAME-service/svc/client/cli/handlers/handlers.gotemplate
// NAME-service/svc/client/grpc/client.gotemplate
// NAME-service/svc/client/http/client.gotemplate
// NAME-service/svc/endpoints.gotemplate
// NAME-service/svc/server/cli/cli.gotemplate
// NAME-service/svc/server/run.gotemplate
// NAME-service/svc/transport_grpc.gotemplate
// NAME-service/svc/transport_http.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x56\x51\x6f\xdb\x38\x12\x7e\x96\x7e\xc5\x54\x68\x00\xa9\x70\xa5\xf4\x70\xf7\x62\x9c\x1f\xda\xa4\xbd\x0b\x70\x6d\x83\x24\x87\x3e\xb4\xc5\x82\x26\x47\x12\xb7\x14\xa9\x25\x29\x3b\x81\xe0\xff\xbe\x18\x52\x96\x9d\x36\x69\xb6\xd8\x02\x8d\xed\xd1\xcc\x37\xc3\x99\x6f\x3e\xaa\xaa\xe0\xcc\x08\x84\x06\x35\x5a\xe6\x51\xc0\xfa\x0e\xbc\x1d\x9c\x2b\xd3\xaa\x82\x2b\xb4\x83\xd6\x52\x37\xd1\x06\x5b\xa9\x14\x98\x0d\xda\xad\x95\x1e\xc1\xb7\xd2\x41\x2d\x15\x06\xe7\xf3\x8f\xf0\xe1\xe3\x0d\xbc\x3d\xbf\xb8\x79\x96\xa6\x3d\xe3\xdf\x58\x83\xd0\x31\xa9\xd3\x54\x76\xbd\xb1\x1e\xf2\x34\xc9\x50\x73\x23\xa4\x6e\xaa\xdf\x9d\xd1\x59\x9a\x64\xb5\x62\x4d\xf8\xec\x3c\x7d\x18\x47\x7f\x9d\xb7\xdc\xe8\xcd\xf4\x55\xea\x26\x58\xbd\xec\x30\x4b\xd3\x24\x6b\x8c\x62\xba\x29\x8d\x6d\xaa\xdb\x4a\xa3\xaf\xb8\xd1\x1e\x6f\x03\x40\x63\x4c\xa3\xb0\x3c\x72\x69\x6c\xcf\x63\x98\xf4\xed\xb0\x2e\xb9\xe9\xaa\xfe\x5b\x53\xa1\xb5\xc6\x3a\x7a\x52\x55\x70\x43\x87\xb9\x46\xbb\x91\x1c\xd3\x24\x1b\xc7\xf2\x22\x14\x7d\xc9\x7c\x0b\x2f\x77\x3b\xa8\xdc\x86\x57\x5c\x49\xd4\x9e\x3e\xaa\x96\x69\xa1\x90\xe2\x13\x4a\x10\x9f\xc0\x13\x81\xb1\x94\xa4\xf5\xbe\xff\x6b\x01\xe4\x99\xa5\x49\xbf\x0e\x8e\x97\x6f\xee\xbb\x66\x69\x91\xa6\x1b\x66\xa9\xb3\xbf\xc1\x0a\xa6\xb6\x95\x97\xcc\x3a\xbc\xd0\x7e\xb6\x52\x07\xcb\xeb\x5e\xc9\xc9\x44\xcd\x2f\xcf\x4c\xd7\x33\x3e\x59\x62\x33\xca\x4f\x96\xf5\x75\xb4\xf4\xeb\xf2\x0a\x1b\xe9\x3c\xda\x71\x2c\xa7\xd6\x94\x1f\x58\x87\xbb\x1d\xfd\x42\x4b\xd9\xeb\x41\xf3\x30\xe5\xbc\x80\x31\x4d\x8c\x2b\xdf\xde\x4a\x9f\xbb\x61\x1d\x8d\x45\xba\x4b\x89\x1e\x93\x01\xf0\x56\x3a\xef\xc0\x1b\x60\xdc\x03\x73\xe0\x5b\x04\x02\xf1\xd2\x68\xa6\x02\xd4\x02\xd6\x83\x8f\x6c\xb3\xe8\x07\x1b\xa2\x3c\x70\x23\x90\x22\x09\x8e\xa2\x18\xf7\xc3\x14\x01\x52\x3b\x8f\x4c\x80\xa9\x81\x33\xa5\x88\xb3\x53\x29\x20\xa4\x45\xee\xd5\x5d\x19\x67\x2c\x1d\x08\xa3\x31\x54\xa0\x94\xd9\xee\xd1\x04\xd6\x68\x51\xcc\xb5\x84\x1a\xd7\x18\xe0\x50\x2c\xc0\x49\xcd\x11\x64\x3d\xe3\x6e\x5b\xb4\xfb\xc7\x73\x12\x42\xab\xad\xe9\xa6\xe5\x98\xb0\x16\xa0\x29\xa5\xa9\x1f\xc9\xe4\xd0\xc3\xd0\x87\xe5\x3b\x0e\x23\xb0\xad\x19\x94\x38\xd4\x51\xc6\x86\xcf\xed\x05\xa9\x3d\xf5\x7d\x22\x41\x60\xd6\x6b\x21\x2c\xc4\x7f\x2b\xa0\xf5\x2a\xaf\x03\x03\xf2\x8c\x9e\x96\x4c\x08\x9b\x2d\x20\xa3\xff\xff\xbd\xb9\xb9\x04\x32\xa0\x73\x54\x1e\x13\xc2\x6d\x78\x56\xa4\x49\x20\xf5\xe3\x48\xf4\x74\x46\x5a\xfe\xeb\xf4\x9f\xa7\xf4\xa5\xb9\xba\x3c\x83\x9c\x40\x8b\x87\x51\x8b\xfd\xb2\x21\x19\xb9\x92\xd0\x5b\x74\x43\x87\x0e\xb4\x01\x17\x39\x06\x42\x3a\x4e\x32\x73\x07\xee\xce\x79\xec\x16\xc0\xb4\x00\xbc\xed\x91\x7b\x07\x83\x43\x1b\x68\x40\x48\xbd\x35\x1b\x29\x30\xf6\x35\xcc\xe0\x5e\x62\xbd\xc7\x9c\x86\x1f\xb3\xf5\xd4\x5c\x22\x82\xc5\x5a\x21\x27\xdd\x93\x3a\xc0\x11\x0c\x55\xb5\x96\x9a\xd9\xbb\x90\x96\x4c\x93\x99\xf6\x75\x12\x36\xb7\x0c\xc6\x97\xde\x32\xed\x68\x25\x43\x33\x42\x8f\x5c\x40\xa2\xd0\x0d\xb3\xd2\x0c\x6e\x1f\xca\x8d\x76\xde\x0e\xdc\x1b\xeb\x60\x6d\x7c\x3b\x1d\x09\x5a\xe3\xfc\x32\x28\xe4\x7e\x55\xd3\x34\x19\x47\xb0\x4c\x37\x08\xcf\x3b\xf4\xed\x02\x9e\x33\xdb\x38\x58\xae\xa0\x3c\x0b\x70\xaf\x6d\xe3\xca\xf7\xe8\x5b\xfa\x02\xbb\x5d\x9a\x24\xb5\x1b\xc7\xe0\xbd\xdb\x91\x63\x18\xd8\x07\xdc\xbe\x53\xac\xb9\x46\x9f\x67\xe3\x78\x63\xfe\x67\xb6\x68\x61\xf2\xca\x16\xd1\x89\xf8\xfc\x51\xbf\x25\x09\x28\x28\x33\x6a\xb1\xdb\xa5\x07\x56\x8d\xe3\x71\xd2\xd7\x4a\x11\xa4\xa3\x9c\x34\xd0\x00\xf1\x7f\x47\x72\xbf\x0a\xdc\x8d\x52\x90\xd4\x9d\x2f\xdf\xf5\x56\x6a\x5f\xe7\xc6\x95\xd7\x5e\xa0\xb5\x0b\xc8\xa2\xab\xa9\xe1\xc4\x2d\xbf\xe8\x6c\x41\x1b\x45\xc0\x9f\x4f\xbf\x12\xf1\x02\xdc\x25\x85\x9d\x63\xcd\x06\xe5\x5d\x5e\xfc\x04\xed\x8b\xce\x7e\xf6\xf8\x7a\x58\x73\xd3\x75\x4c\x8b\x90\xac\x08\xa7\xf9\x85\xc6\xbe\x0c\x9d\x7d\x14\x1e\xe0\xc4\x85\x33\x3c\xd0\xdc\x98\x0b\xb5\x88\x20\xbb\x34\x91\x35\x28\xd4\xf9\x74\xde\x02\xfe\x0d\xff\x88\x9d\x9a\x3b\x18\x8e\x3a\x89\xde\x2b\x8a\x99\xda\x1b\x14\x3d\x2f\x8e\x66\xb2\x5f\x96\x7e\x5d\x8e\xe3\x7f\x0c\xe9\x32\x3c\xac\xd2\x49\x82\x36\xae\x71\x10\xf9\x38\x34\x59\xc3\x8b\x59\x2c\x9e\xad\x20\xcb\x42\x25\x13\xea\x82\x5c\x61\x05\x87\x8b\x8a\x88\x94\xcf\x11\x45\x9a\xec\x00\x95\x0b\x82\xf8\x62\x96\x8a\x03\x0e\x37\x5a\x47\x90\xe5\x0a\x82\x58\x9c\x4b\xa6\xf2\xd9\x75\x11\x8d\x9f\xa4\x6f\x2f\xb4\x43\x3e\x58\xcc\x8b\x23\xe3\x8d\xec\xd0\x0c\x3e\xa7\x2b\xbf\xbc\x46\x6e\xb4\x28\xa8\x35\xb2\x0e\xa0\xcf\x56\xa0\xa5\x0a\x99\x1e\x1d\x4d\xa0\x33\x6c\x5b\xa9\x48\x1a\x58\xb8\x13\x08\x9f\xf6\x50\x63\x10\xd8\x25\x9c\x6c\xb2\x50\x26\x61\x1f\xf5\x9d\x86\x95\x04\x9d\x0e\xde\xe5\x99\x32\x2e\xce\xe6\xbb\x06\x1d\xae\xfe\xd0\x20\x72\x3e\xf4\xe6\x67\x4b\x10\x46\xb1\x24\xd5\xb3\xd8\x19\x8f\xb3\x6c\xb9\x1e\xb9\xac\x25\x8a\x89\xad\xc7\x64\x78\xe0\xf8\x4f\xe0\x9f\x6c\x02\x3b\xa7\x13\xde\x23\x56\x9a\xb8\xad\xf4\xbc\x8d\x12\x40\x84\xcc\x8b\xcf\xa7\x5f\x09\xf5\x57\x36\x24\xec\x07\x67\x0e\x1f\x5a\x81\x65\x18\xd0\x41\x96\x26\x1e\x1f\x67\x7c\xb5\xfc\x4a\x7c\xa4\x55\x09\x79\xca\xf7\xcc\xba\x96\xcd\x12\x13\x07\xf3\xc7\x80\xce\xcf\x84\xda\xbf\x7b\x95\x33\x70\xbe\x8f\x3e\x63\x4a\xc5\xb2\xc2\x48\x1f\xe0\xcb\x13\x84\xd9\xbf\x3e\xfc\x98\xe3\xfb\x6e\xde\x23\x4c\x12\x2b\xdd\xcc\x35\xee\x2f\x9e\x43\x89\xd3\x4b\x6a\xf9\x86\xf1\x6f\x8d\x35\x83\x16\x44\xf9\xe9\x6c\x7f\xb3\xda\x1f\xb2\x3d\x55\xec\x84\x1c\x74\x56\xe9\x3c\x8b\x93\x85\xab\x58\x0d\x0a\xd8\x4a\xdf\x2e\x03\x03\xef\x39\x3e\xd2\xe7\x7b\x58\x51\x77\xe0\x0a\x5d\x6f\xb4\x78\x1c\x6b\x73\x74\xd9\xd0\xb6\x91\xd8\x2f\x9f\x92\xc3\xe9\xd7\x69\xba\x4b\xff\x0c\x00\x00\xff\xff\xc5\x12\x86\x7a\xbf\x0c\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 3263, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\x41\x6b\xdc\x30\x10\x85\xcf\x9a\x5f\x31\xd5\xc9\x86\x44\xfa\x05\x3d\x79\x4b\x09\x5d\x92\x90\x38\xf4\xac\xb5\xc7\xb2\x88\x2c\x2d\xd2\xd8\xdb\xb0\xf8\xbf\x17\xcb\x4b\xa1\x50\x68\x0e\x66\xcc\xd3\xc7\x7b\x33\x4f\x6b\x6c\x62\x4f\x68\x29\x50\x32\x4c\x3d\x9e\x3e\x90\xd3\x9c\xb3\x02\xad\xf1\x85\xd2\x1c\x82\x0b\x76\xd7\xf0\xe2\xbc\xc7\xb8\x50\xba\x24\xc7\x84\x3c\xba\x8c\x83\xf3\x54\xe0\xc3\x13\x3e\x3e\xb5\xf8\xed\xf0\xd0\x7e\x01\x38\x9b\xee\xdd\x58\xc2\xc9\xb8\x00\xe0\xa6\x73\x4c\x8c\x15\x08\x39\x78\x63\x25\x08\x19\xb3\x04\x10\x5a\xe3\xf7\x88\x3f\x1c\x83\x90\xd6\xf1\x38\x9f\x54\x17\x27\x6d\xe3\xfd\xbb\x63\xbd\x7d\x3e\xda\x1b\xd8\x6e\x71\xaf\x94\x16\xd7\x11\x08\x79\xbd\xaa\x87\x62\xfb\x6c\x78\xc4\xfb\x75\x45\x9d\x97\x4e\x67\x4a\x0b\x25\xf9\x3f\x40\x77\xde\x49\xa8\x01\x86\x39\x74\x65\xcb\xaa\xc6\x6b\xc9\x79\x3b\xf7\x86\x09\x4d\xdf\x27\xca\x99\x32\xba\x01\x79\xa4\x0f\x1c\xcd\x42\x78\x22\x0a\x7f\x3a\x60\x0a\x5b\x63\xdb\x4d\x19\xc4\x36\xd4\xb3\x49\x99\xaa\x7a\x5f\xf9\x18\xad\xdd\xea\xeb\xe3\x96\xa0\x40\x2c\x26\xa1\x8f\xd6\x52\x19\xea\x58\x7e\x41\x5c\x41\x88\x9b\xfc\xb5\x3c\x3c\xd2\xe5\x18\xed\x30\xf1\x4e\x54\x31\xab\x57\xee\xe3\xcc\xf5\x3f\xc8\x26\x06\xa6\x5f\x5c\xed\x7a\xad\x7e\x3a\x1e\x2b\xc9\x59\xde\x15\xe2\x40\x83\x99\x3d\xb7\x6e\xa2\xcc\x66\x3a\xbf\xb5\xcd\xe7\x5d\x3a\xe3\x3d\xa5\xbf\x9d\x9a\xa2\xd5\x20\x56\x10\x7b\x9b\xea\x65\x0e\x55\xe7\x9d\x6a\x62\x18\x9c\xbd\xbb\xdd\x58\xc3\x0a\xbf\x03\x00\x00\xff\xff\xa4\x86\x5a\xa1\x63\x02\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 611, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresEndpointsGotemplate,
		"middlewares/endpoints.gotemplate",
	)
}

func middlewaresEndpointsGotemplate() (*asset, error) {
	bytes, err := middlewaresEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/endpoints.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresServiceGotemplate,
		"middlewares/service.gotemplate",
	)
}

func middlewaresServiceGotemplate() (*asset, error) {
	bytes, err := middlewaresServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/service.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcf\x6e\xdb\x30\x0c\xc6\xcf\xd2\x53\x70\x85\x51\xc4\x43\x2a\xdf\x0b\xec\xd0\x7f\x2b\x72\x58\x5b\x64\x79\x01\x25\x66\x6c\x61\x36\xe5\x49\x74\xb3\x42\xd0\xbb\x0f\x52\xdc\x78\xdd\x25\xbd\x24\xf4\xc7\x1f\x3f\x51\xa4\xaa\x0a\xee\x6c\x8d\xd0\x20\xa1\xd3\x8c\x35\x6c\xdf\x80\xdd\xe8\xbd\x92\x55\x05\x6b\x74\x23\x91\xa1\xe6\xa8\xc1\xc1\x74\x1d\xd8\x57\x74\x07\x67\x18\x81\x5b\xe3\x61\x6f\x3a\xcc\xf0\xfd\x33\x3c\x3d\x6f\xe0\xe1\x7e\xb5\xf9\x22\xe5\xa0\x77\xbf\x74\x83\xd0\x6a\xaa\x3b\x74\x5e\x4a\xd3\x0f\xd6\x31\x2c\xa4\x18\xb6\x70\x11\x42\xa1\x5e\x6e\x57\x59\x7b\xd1\xdc\xc2\x55\x8c\x17\xb2\x94\x32\x04\x38\x18\x6e\xa1\x60\x84\xeb\x6f\xa0\x62\x94\x22\x04\xa7\xa9\x41\x28\x4c\x92\x0a\x46\xf5\x13\xdd\xab\xd9\xa1\xfa\x81\xdc\xda\xda\x27\xa8\xaa\x20\x84\xc2\xa8\x27\xdd\x63\x8c\x60\xfa\xa1\xc3\x1e\x89\x3d\xbc\xc3\x52\xec\x47\xda\xfd\x4b\x2d\x42\xc8\x87\x19\xaa\xf1\x4f\x36\xbe\xeb\x0c\x12\xdf\xb8\xc6\x67\xef\x14\xc0\x09\x0f\xe1\xd1\xa6\x08\xd4\xf7\x91\x76\x6c\x2c\xa5\x7c\xd2\x91\xea\x18\x4b\x58\x7c\x1d\xb6\xea\x44\x15\x46\xad\xf1\xf7\x88\x9e\x37\x6f\x03\x4e\x1e\x4b\x40\xe7\xac\x2b\x83\x14\xc2\x1d\xb3\xe9\x52\x67\xeb\x12\x1f\xc2\xd5\x34\x9c\x1e\xb9\x4d\x65\x9f\x6a\x3c\xcd\x56\x0a\x31\x8f\x71\xd0\x4e\xf7\x79\x94\xc9\x47\x65\x76\x62\xf2\x19\x66\x0f\x9a\x6a\x58\xe4\x1f\xb2\x3c\x55\xa8\x95\xbf\xd5\x1e\x53\x53\xe5\x07\x7d\x8d\x03\xa6\xd7\x53\x7e\x94\x1f\x68\xec\xcb\xc9\x56\xcc\xb7\x3b\x26\xa7\x35\x5d\xc3\xe5\xff\x99\x47\x7b\xe3\x9a\x18\x97\xa7\x76\xb0\xf3\x08\x67\x7d\xce\xdb\x50\x3d\x4f\x62\xfe\x98\x52\x39\x8e\x79\x29\x3c\x3a\x82\xcb\x69\x39\x4b\x20\xd3\x49\x91\x5f\xe1\x11\x7b\xff\xff\x1b\x00\x00\xff\xff\x42\xe2\xbc\x65\x3d\x03\x00\x00")

func svcClientCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientCliHandlersHandlersGotemplate,
		"svc/client/cli/handlers/handlers.gotemplate",
	)
}

func svcClientCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcClientCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/cli/handlers/handlers.gotemplate", size: 829, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x4d\x6f\xdb\xba\x12\x5d\x4b\xbf\x62\x6a\x04\x0f\x52\xa0\x50\xfb\x3c\x78\x53\xa7\xaf\xe8\xc3\x6d\x6a\xa4\xc1\xbd\x8b\xa2\x28\x18\x6a\x24\x13\x96\x49\x95\xa4\x9d\x18\x82\xfe\xfb\xc5\x90\x94\x23\xbb\x8e\xdb\x45\x10\x8b\x3c\xf3\x75\xce\x90\xc3\xb2\x84\x85\xae\x10\x1a\x54\x68\xb8\xc3\x0a\x9e\xf6\xe0\xcc\xd6\x5a\x96\x96\x25\x3c\xa0\xd9\x2a\x25\x55\x13\xd6\xe0\x59\xb6\x2d\xe8\x1d\x9a\x67\x23\x1d\x82\x5b\x49\x0b\xb5\x6c\xd1\x83\xef\xbe\xc0\xfd\x97\x47\xf8\x70\xf7\xe9\xf1\x5d\x4a\x0b\x4b\x2e\xd6\xbc\x41\x68\x4c\x27\xa0\x33\x7a\x27\x2b\xb4\xc0\xa1\x79\x58\x2e\x40\xb4\x12\x95\x83\x5a\x1b\x70\x2b\x84\xbe\x67\x5f\xd1\xec\xa4\x40\x76\xcf\x37\x38\x0c\x60\xe3\x67\xda\x4d\xdc\xa4\xa9\xdc\x74\xda\x38\xc8\xd2\x64\xd6\xe8\x96\xab\x86\x69\xd3\x94\x2f\xa5\x42\x57\x0a\xad\x1c\xbe\xb8\x99\xdf\xd3\x4d\x8b\x6c\x02\x21\xf3\xb7\x77\xca\x0d\x3a\x5e\x71\xc7\x3d\x44\xba\xd5\xf6\x89\x09\xbd\x29\xbb\x75\x53\xa2\x31\xda\xd8\x59\x7a\xbc\xd3\xe8\x9b\xb5\x74\x25\xfd\xa1\xaa\x3a\x2d\x15\x05\x26\x5f\xce\x70\x65\x7d\x96\x6f\xe0\x0f\x80\x98\x54\x9a\x94\x25\x3c\x12\x99\x91\x83\x34\x99\xf5\x3d\xfb\xe4\x4b\x5d\x72\xb7\x82\x9b\x61\x80\xd2\xee\xa8\x80\xee\x09\x68\x73\xf9\xfe\x78\x7b\x96\xe6\x9e\xf4\x7b\x7c\x06\x83\x6e\x6b\x94\x05\xae\x46\x16\xe1\x89\x8b\x75\x50\xf7\x98\x7f\xa1\x95\x42\xe1\xa4\x56\x0c\x3e\x39\x90\x96\xd4\x20\x3f\x06\x6d\xa7\x95\x95\x4f\xb2\x95\x6e\x0f\xba\xf6\x32\x09\xde\xb6\x68\xc0\x69\xa8\x24\x6f\x0b\xe0\xaa\x82\x96\x3b\x34\x20\x5a\x6d\xb1\x08\xa0\x57\x9f\x69\xbd\x55\x82\x72\xca\x68\x11\xae\xa9\x5e\xb6\xf0\xa1\x17\x5a\xa9\x02\x74\x47\x38\x0b\x8c\xc5\xe5\x2f\x7e\x21\x87\xac\x7b\x62\x7d\xff\x51\x53\x37\xc0\x49\x6f\xd0\x17\x9a\x02\xbc\x30\x39\xf4\x69\xb2\xe3\x06\x84\x88\x45\x2d\xb4\xaa\x65\x93\xa6\x09\x35\xd7\x8f\x02\x6a\xb8\x9d\x83\xe1\xaa\xc1\x43\xb8\x3e\x4d\x12\x34\x86\x36\xea\xec\x3f\x42\xe4\x69\x92\xc8\x9a\x1c\xc2\xbb\x39\x28\xd9\x7a\x44\x12\x88\xa4\xef\x18\xcc\xb2\x7f\x0c\xef\x32\x34\xa6\x80\x99\xe0\x4a\x69\x07\xbc\xeb\xda\x7d\xf4\x3c\x23\x47\x43\x9a\x0c\x69\x9a\x88\x49\x3d\x96\x22\x7d\xfb\x7e\xd4\x1d\x47\x05\x53\xb8\x73\xbb\xef\xb1\xd6\x06\x33\x4a\x26\x76\xf7\xdf\xbc\xdd\xa2\x7d\xd4\x1f\x1f\x96\x8b\xcf\xb1\x69\x33\x21\xd8\x0a\x79\x85\xc6\xe6\x79\x41\xe1\x93\xbe\xbf\x81\x67\xe9\x56\x70\xe5\x90\x82\xb3\x61\x48\x93\xc9\x6a\xb7\x6e\x3c\xb5\xb7\x73\x42\xb0\x78\x56\x03\xbf\x14\x8d\x90\x81\xb3\x2b\x39\x82\x46\x15\x3e\xa3\x5b\xe9\xca\x06\xa0\xe7\xbe\xef\x1f\xf5\x5f\xfa\x19\x0d\x5c\xc9\x28\xd2\x87\x78\x28\x60\x3c\x1d\x6c\x5c\xf1\x56\x9e\x5f\x0a\xf3\xb6\xe1\x1c\x8e\x19\xb9\xc7\xe7\x40\x4a\x16\x6c\x89\x11\x55\xc4\xdf\xb3\xbe\x1f\x6b\x1a\x06\xd6\xf7\xd3\x7c\xc3\xe2\x6c\x0a\x95\xa7\x8b\x1f\x94\xd0\x15\x12\xa9\x93\xdd\x07\xfc\xb9\x45\xeb\x46\xcc\x1d\x9e\xc5\xf8\x83\x82\x23\x68\xda\xb7\x57\x92\x8d\xdb\x8f\xfb\x6e\x4c\xa4\x1f\x46\xec\x51\x8b\x30\xc6\xe2\x7a\x7e\xa0\x2a\xcb\xfd\x4a\x54\x04\x55\x15\x55\x8c\xbf\xc6\x1f\xe9\xd8\xa9\x76\x27\x0e\xb6\xb6\x27\xc0\x54\xc3\x53\x01\xe9\xde\xf0\xee\x7e\xe1\xfe\x16\x00\x2e\x89\x5a\xbc\xc6\x4e\x86\x82\x0e\x48\x3a\xf8\xeb\x87\xc8\x81\xa0\x12\x04\xba\xd2\xcb\x39\x0c\x83\x9f\x1d\x97\x98\xa5\x5b\x89\xc3\xf1\xa5\xc9\x82\xc5\x08\xf9\x1f\x5d\x33\x6e\xc5\xfd\x85\xb6\x43\xe3\x2c\x70\xf2\xeb\xaf\xba\x33\x75\x80\x41\x3a\xb4\x4e\x03\x87\xad\x45\x73\x53\xe9\x0d\x97\xea\x0d\x68\x88\xc1\x60\x69\xe4\x86\x1b\xd9\xee\xc9\xa6\xde\xb6\x20\x15\xf0\x78\xe9\xc4\xab\xee\x62\x21\xd9\x0f\x88\x87\x98\x2d\xc2\xff\xc2\xb7\xf8\x83\x4f\x46\x2a\x87\xa6\xe6\x02\xfb\x21\x87\x6c\xf2\x35\xbd\xe8\x42\xde\xb7\xf3\x57\x3b\x96\x5d\xff\xbe\xe5\xf2\x43\x87\x78\x07\xa3\x62\x87\xfe\x39\x51\x2e\x1c\x86\x3f\x52\xee\xd2\xb9\x39\x2b\x5c\x30\x88\x88\xb7\x74\xfb\xbd\x26\x21\x80\x17\xf0\x82\xc8\x1e\xf5\x47\xc2\x5d\xaa\xe3\x9c\x6e\x63\x06\x7f\xa8\xda\x4f\x3f\x83\x62\x3e\x67\x14\xf3\x1b\x6f\x08\xf6\xf3\x17\xb9\x52\xb7\xef\xf0\x68\xda\x81\x75\x66\x2b\x1c\x05\x8b\x83\x00\xbe\x7d\xb7\xce\x48\xd5\xc4\x93\x39\x9d\x36\x41\x18\xaa\xdb\x7f\x79\x01\x36\xba\x92\xb5\x44\x1b\x46\xf8\xe1\x75\x40\x93\xd4\x47\x3b\xb2\x27\xd3\xec\x7a\x9a\x40\x1e\xca\x4d\x03\x9b\x0b\xf7\x32\xce\xa9\xaf\xa8\xaa\x6c\x8d\x7b\x3f\xe3\x43\x46\xf9\xb1\xb3\xfe\x50\xab\x77\xab\xe1\x9c\x63\x3f\x90\xf5\x38\xe5\x60\x0e\xe4\x32\x9d\x8e\x68\x1a\x7b\x43\x8c\x7f\x69\x56\xfa\x5c\x46\x72\xf2\x93\x19\x33\xed\xcb\x93\xbc\x84\x7b\xf9\xb5\x0d\x36\x15\x5c\x8f\x4f\x47\xf6\xf9\x2e\x3f\x45\xf8\xb4\x69\x42\x76\x5c\x4e\x35\x49\xc6\xc7\xc9\xfa\xf5\x71\xe2\x13\xf3\x73\x51\xd6\xb0\x2b\x40\xfb\x3d\xe1\x5e\x98\xaf\x23\x5b\xe7\x2c\x8b\x59\xff\x97\x36\xc3\x08\x0d\x8e\xe7\xf4\x0c\x21\xa6\xfd\x67\x01\xeb\x02\x76\x7e\x76\x0c\xfe\x41\x12\x9e\x37\x01\x3a\x7d\xe0\x5c\x6f\x2a\x98\xc3\xa1\x80\xff\x6b\xa9\xb2\xeb\x4d\x55\xbc\x2e\x2d\xc9\x26\x78\x65\x8c\xe5\xf9\xe8\x2e\x32\x23\xdc\x4b\xe0\xfd\xdf\x00\x00\x00\xff\xff\x7d\xb8\xdb\x01\x4a\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3146, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x4d\x8f\xdb\x36\x10\x3d\x4b\xbf\x62\x62\x6c\xb1\x76\xa0\x95\xef\x09\xf6\xd0\x26\xdb\x76\x81\xe6\x03\xd9\x2d\x7a\x08\x82\x80\x96\x46\x12\xb1\x14\xc9\x90\x94\x3f\x2a\xf8\xbf\x17\x43\x52\xb2\x5c\x2b\x69\xd0\x63\xd1\x43\xe0\x2c\x3f\x1e\x67\xde\x9b\x79\xa4\xd6\x6b\x78\xa5\x4a\x84\x1a\x25\x1a\xe6\xb0\x84\xcd\x01\x9c\xe9\xac\xcd\xd3\xf5\x1a\x3e\xa0\xe9\xa4\xe4\xb2\x0e\x63\xb0\xe3\x42\x80\xda\xa2\xd9\x19\xee\x10\x5c\xc3\x2d\x54\x5c\xa0\x5f\xfc\xfa\x1d\xbc\x7d\xf7\x08\x77\xaf\xef\x1f\x9f\xa5\xa9\x66\xc5\x13\xab\x11\xec\xb6\x48\x69\xf6\x71\x58\x0b\x85\x92\x8e\x71\x69\xa1\x45\xd7\xa8\xd2\x82\x53\xd0\xb2\x27\x04\x2e\x4b\xbe\xe5\x65\xc7\x04\xa0\x2c\xb5\xe2\xd2\x59\xa8\x8c\x6a\xc1\xa2\xd9\xf2\x02\x6d\x46\x48\x06\xbf\x74\x68\x1d\x30\x59\x82\x41\xab\x95\xb4\x08\xee\xa0\xd1\x23\xd1\x52\x8a\x4c\x59\x3c\xa1\x64\xc0\x2c\xec\x50\x08\xfa\x45\x59\xa8\x12\x8d\x25\x00\xc2\x2b\x31\xfe\x5d\x29\x13\x37\x7a\xb4\xcc\x0f\x30\xca\xb8\x02\xd5\x19\xb0\x9d\xd6\xca\x10\x49\xce\x30\x69\xe9\xff\x74\x1c\x67\x82\xff\xc9\x1c\x57\x92\xd0\x2a\x65\x5a\xe6\x6c\x0e\xf7\x0e\x98\xb0\x0a\xb8\x2c\x44\x57\xa2\x1d\xa3\x81\x96\x97\xa5\xc0\x1d\x33\x68\xf3\x34\xe5\xad\x07\x5a\xa6\xc9\xa2\x6a\xdd\x22\x4d\x16\xb5\x12\x4c\xd6\xb9\x32\xf5\x7a\xbf\x96\xe8\xd6\xc4\x18\xee\xdd\x22\xa5\x49\xee\x9a\x6e\x93\x17\xaa\x5d\xd7\xea\xe6\x89\xbb\x35\xfd\x1b\xb0\x69\x89\xde\xc0\xa2\xef\xf3\xf7\x3f\xdd\x7b\xe4\xf7\xcc\x35\x70\x73\x3c\x2e\xd2\x95\x17\xe2\x6e\xa4\xb6\x50\x42\x60\xe1\xec\x90\xa3\x6b\x26\x94\x81\x6b\x98\x83\x42\xb5\x9a\x08\x61\x12\x58\x59\x0e\x3a\x50\x72\xd7\x96\xc0\x5a\x64\xd2\x11\xed\x1b\x84\xce\x62\x49\xfc\x32\x68\x50\x68\x34\x60\x9d\xe9\x0a\x97\xd1\x74\x3c\x6a\xfe\x24\x2e\x9d\x02\x46\x70\x96\xcb\x5a\x20\x68\x66\x58\x8b\x0e\x0d\xd5\x15\x8d\xdf\x4b\x60\x41\x59\x93\x01\x77\xd7\x96\x0e\xab\x3a\xe1\x15\xaa\x3a\x59\x10\xfb\x31\x64\x89\x24\x90\x02\xa5\x7d\x45\x83\xa2\xbd\x1a\xcd\xcd\x70\x20\x01\x6e\x98\xe5\x36\x87\x9f\x95\x01\xdc\xb3\x56\x0b\xcc\xe0\xa0\x3a\x68\x79\xdd\x38\xd0\xcc\x52\x75\x4c\xa8\xa2\x00\xc7\x83\xc2\x39\xda\xa8\xb2\x2b\xd0\xd3\xc0\x24\x34\xce\xe9\xfc\x57\x26\x4b\x41\x31\xee\xb8\x6b\x00\x59\xd1\xc4\x22\x87\xe5\x70\xfa\x0a\x76\xdc\x60\x09\x9d\x0e\xa0\x56\x63\xc1\x2b\x5e\x80\x66\xae\xc9\x61\x79\xef\xe3\xe3\x96\xf0\x37\x6c\x23\x0e\xc0\xa0\xe5\xd6\x85\x06\x81\x12\x2d\xaf\x25\x6d\xe5\x72\xab\x9e\xd0\x53\xf9\x10\x64\x19\x1b\xca\x87\x88\xe7\x62\x07\x31\x08\x62\x60\x32\x5f\x4d\xd9\x2d\x04\x47\xe9\xce\xd9\x9d\x08\x77\xea\x4d\x71\xa0\x0e\x0e\x70\x58\x7e\x4b\x46\xea\xa2\xc0\x15\x27\x86\x5b\x0c\x65\x75\x8a\x97\x4b\x87\xa6\x62\x54\x50\xf3\x4a\x10\xd8\x78\xd8\xbc\x3f\x74\x36\xd8\x53\x6c\xc8\xb5\xd7\xe1\x2d\xee\x5e\xc5\x7c\x0a\xd5\x6e\xb8\xf4\x3c\xb5\x31\xc4\x89\xb0\x59\x74\x11\xd7\x19\x09\xdc\x57\x32\x05\x58\x30\x21\xd0\x84\x62\x8e\xc1\xe6\xa9\x4f\xe7\x82\xd0\x3e\xed\x7b\xc3\x64\x8d\x70\xc5\xe1\xc5\x2d\xe4\xc3\xfa\x37\x41\x8c\xe3\x31\x4d\xfa\xfe\x8a\xe7\x6f\x59\x8b\xc7\xe3\xb0\x1f\x00\xc6\x24\xf2\x61\x30\xed\xfb\x1b\x1a\x3d\x1e\xd3\xe3\x79\xaf\x7e\xc7\x21\x54\x9d\xb0\x9c\x44\xb8\x82\xc9\xb9\xcb\xc2\xed\x21\xfa\x48\xfe\x2a\xfc\x66\x54\x0d\xcf\xf5\x26\xef\xfb\x5f\x14\x2d\x83\x2b\x9e\x7f\x08\xee\xfa\x78\xd0\x18\xb7\xae\x60\x79\xb9\x28\xd8\xee\x64\x55\x06\x68\x8c\x32\x2b\xe8\xd3\x24\x19\x6c\xd9\x0f\x52\xc0\x98\xcf\x70\x40\x31\x51\x0c\xab\x34\x49\x78\xe5\x97\x3e\xbb\x05\xc9\x85\xc7\x48\xa2\x2a\x92\x0b\x0f\x93\x26\xc9\x31\x1d\x47\x87\x13\xf2\xef\x89\x6d\x95\x11\x4a\x9a\x1c\xd3\xbe\x0f\xf4\x12\xb9\x6f\xa8\xa5\xa6\x0c\xfb\xa6\xbd\x72\xe8\x19\x0e\xba\x4d\x49\xbf\x72\x38\xc7\x7b\x20\x9e\xc0\xe6\x52\xb4\xe0\xc3\x9b\xee\x0d\x2b\x1e\x7c\x0f\xae\x2e\x8b\xe0\x2c\x79\xc2\x9e\x97\x6e\xb8\x05\xc7\x1e\xea\x49\xa8\xf1\x3e\x9c\x0c\x07\x11\x26\xea\x10\xfa\x17\xca\x28\x62\xcc\x71\x78\x51\x04\x7e\xdf\x76\x14\xd4\xe6\x7f\x2b\x2e\x1f\x51\x58\x35\xa3\xe5\x9c\x9a\x41\xcf\x71\x66\x1b\x45\x0a\xc3\x9e\xfd\xa0\xd5\x54\xb3\x3f\x0c\xd3\x3f\x0a\x71\xb7\x2f\x50\x3b\xd8\x19\xa6\x6d\xb0\xd9\x91\xbd\x8a\xa3\x28\xe9\x8e\x89\xfd\x79\x6a\x58\x2f\xaf\xf7\xa7\x99\x8b\x33\x7f\x33\x5e\xca\xfe\x31\xf3\xbb\x1d\x9e\x37\xf4\x06\xd0\x5a\x1c\xc8\x66\xc8\x3a\x1d\x81\x4f\xae\x70\xf2\x0c\xdc\xa2\x39\x9c\x2e\x78\xee\xfd\x77\xbc\x2d\x09\xef\x9d\xa6\x9b\x83\xdc\x33\x9b\x98\x57\xc1\x24\xdd\x9c\x74\xdf\x60\x49\xdb\x36\x07\x90\xa4\x41\xb8\x51\x71\xef\x9f\x0e\x65\x78\x04\x6d\x90\x42\xa0\x9c\x35\x96\xf9\x05\x1b\xcb\x53\x4c\x19\x2c\x1e\x1c\x73\x9d\x5d\x64\xb0\x78\xcf\x65\xbd\x58\xa5\x83\x3d\x3c\x9f\xf8\xc3\xd7\xf6\xc3\x0c\x2b\xd9\x29\x9a\x3c\xcf\xad\x33\x5c\xd6\xbe\x9c\xe2\xfb\xa6\xa4\xaa\x68\x99\xfe\x18\xa6\x3e\x05\xfa\xfb\x23\xc9\x4f\xb6\xf6\x4f\xf6\x95\x24\x8b\x49\x45\x2d\x5e\xc0\x08\x70\xcc\x22\x44\x28\x83\xe4\x98\xa6\x09\xa9\xf2\x99\x42\xf2\x65\xec\xa1\xc7\xf0\xfa\x60\x27\x9f\x33\x50\x4f\x34\x3d\x04\xf8\x11\xf7\x9f\x5e\xc2\x33\xf5\x14\x4a\x52\x33\xc9\x8b\x65\xd5\xba\xfc\x41\x1b\x2e\x5d\xb5\x5c\xdc\x0d\x10\xa3\x92\xd7\x3f\xd8\x6b\x28\x15\x5a\x90\xca\x01\xee\xb9\x75\x2f\xc1\x22\x4e\x0b\x60\xac\x21\x9b\xd7\x6a\x41\x41\xad\x56\xd1\xac\x4a\x14\xe8\x70\x39\x44\xe0\xe7\x4e\x09\x70\x59\x64\xf0\xf9\x94\xc1\xc8\xe4\xf7\x73\xc6\x2b\xda\x05\xb7\xb7\x70\xc6\x5e\x6c\xba\x59\xd7\x85\xdb\x49\xf0\xcb\xd9\x25\xab\xa1\x0b\xcf\x58\x0f\x1d\xf8\x1b\xdb\xa0\xc0\xf2\x54\x18\xe1\xa3\xa0\x46\x37\x94\x31\x95\x7e\x13\x1e\x42\xa1\x98\x77\x0d\xca\x71\x52\x4d\x0a\x37\x62\x85\xfa\xcb\x42\xbf\xc5\x96\xe8\xc2\x62\x08\x1f\x1a\x2c\x7c\xa0\xf0\x82\x9e\x38\x86\x17\xe1\xed\x39\x09\xa1\xe1\x45\xe3\xb7\x5a\x94\x33\x11\xc4\x6b\x3d\x6e\x1e\x1e\x35\xca\xc4\x4b\xfd\x32\x27\xef\xbb\xa1\x92\xb3\x4b\x8b\x9e\x71\xed\xf4\x6b\x69\xfd\x6b\x93\xba\x08\x2a\x8b\x69\x7a\xbe\x0d\x16\xc8\xb7\xe1\xf9\xe7\x53\x8c\xaf\xea\x98\x76\x0e\x0f\x88\x23\xca\x04\xc4\x4f\x0c\x8f\xd2\xb1\xff\x29\x4e\xaa\xc8\x12\x1d\xe3\xc2\x3f\x20\x87\x76\xf2\xdf\x34\xf1\xe1\xcb\x04\x77\x87\xfc\x5b\x56\x72\x96\xfa\xd4\x51\x66\xb2\xf9\xdf\x4f\xfe\x83\x7e\x72\xb6\x2d\x9b\x7f\xf7\x7d\xcd\x5e\xfe\x0a\x00\x00\xff\xff\xf2\x10\x9d\xb4\x8d\x10\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4237, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerCliCliGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\x8f\xd3\x30\x10\x85\xcf\xf1\xaf\x18\x2c\x81\x12\xa9\x24\x7b\x60\x39\x14\xf5\xb0\xb4\xa5\x70\x81\xa8\xdb\xdd\x2b\x72\x93\x49\x3a\x22\xb1\x23\x7b\x9a\xd5\x52\xf5\xbf\x23\x3b\x1b\x11\xd8\x45\xe5\x64\x47\x7e\xef\x9b\xd1\x7b\xe9\x54\xf1\x43\xd5\x08\x45\x43\x42\x50\xdb\x19\xcb\x10\x8b\x48\x56\x2d\x4b\x7f\x34\xaa\xf6\xa7\x71\x52\x88\x48\x9e\x4e\xe9\x97\xa0\xc9\x15\x1f\xe0\xed\xf9\x0c\x99\xeb\x8b\xcc\xa1\xed\xd1\x4a\x91\x08\x91\x65\xb0\x34\xba\xa2\x1a\x1e\xa8\x69\x60\x8f\xd0\x99\xee\xd8\x28\xc6\x12\xf6\x8f\xb0\xfe\x7a\x0f\xbd\xb2\x0e\x8c\x06\xd2\xc4\xd4\xd0\x4f\xc5\x64\xb4\x37\xfa\x61\x6e\xf0\x99\x1e\xed\x83\x25\xc6\xdf\x0e\xd2\x23\xd9\xe8\x20\x4d\x73\x65\x1d\xc6\x89\xe8\x95\x1d\x9f\x86\x4d\xd2\xe1\x4b\x88\xea\xa8\x8b\x30\x27\x4e\xe0\x24\xa2\xe0\xba\x65\x4b\xba\xbe\x57\x36\x7e\x33\xc8\xd2\x15\xee\x8f\xf5\x4d\x59\xda\x19\xc8\xd2\xdf\x53\x55\x96\x56\xce\x40\xce\xaf\xaf\xde\x5f\xf9\x4b\x90\x80\xd2\x25\xb4\xc8\x96\x0a\x07\x0d\x39\x46\x0d\x5e\x89\xce\xc9\xe4\x9f\xf4\xcf\xbb\x5d\xfe\x04\x3f\x30\x77\x53\xf6\x75\x60\x7b\xc1\xff\xe3\x36\xdb\x7c\xf9\x84\xab\x6d\x57\x4c\x71\xef\x02\xae\xde\xe6\x4b\x88\x3d\x34\x79\x4e\x15\x51\x96\xc1\x9d\x43\x40\xdd\x93\x35\xba\x45\xcd\x3e\x5e\x52\xfb\x06\xdd\x0c\xa8\x02\x87\x9c\xc2\xa7\x50\xc5\x41\xf5\x08\x9d\x25\x63\x89\x1f\x43\x27\xb0\xd6\x7d\xa8\x23\x15\x11\x55\x01\x0c\xf3\x05\x18\x97\x6e\x90\x51\xf7\xb1\x5c\xad\x3f\xde\x6d\xbe\xdf\xac\x56\x5b\x99\x7c\x18\x04\xaf\x16\x20\xa5\xcf\x3f\xfa\x3b\x70\x58\x04\x85\x88\xce\x01\x17\xfe\xbe\x3f\x71\xf9\xb7\xed\xce\x83\xc2\xd3\x33\xd0\x98\x2d\x2c\xa0\x6a\x39\xbd\xed\x2c\x69\xae\x62\x39\x7f\xed\xe4\x2c\x78\x92\x91\xfd\xc2\xaa\xde\x7d\x61\xd3\xc9\x80\xe9\xa2\x2f\xc0\x7c\x2f\x17\x60\x63\x75\x13\xd8\x59\xfc\x0a\x00\x00\xff\xff\xff\xc3\x80\x0c\x81\x03\x00\x00")

func svcServerCliCliGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerCliCliGotemplate,
		"svc/server/cli/cli.gotemplate",
	)
}

func svcServerCliCliGotemplate() (*asset, error) {
	bytes, err := svcServerCliCliGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/cli/cli.gotemplate", size: 897, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4d\x6f\xdb\x38\x13\x3e\x93\xbf\x62\x2a\xf4\x20\x03\x8a\x74\x78\x6f\x45\x73\x68\xf3\xee\xa6\xc1\x26\x81\x91\x04\xe8\x99\x16\xc7\x14\x11\x89\xd4\x92\x94\xed\x40\xf0\x7f\x5f\x0c\xf5\x11\xb9\x69\x8c\x1c\x7a\x48\x24\x71\x9e\x79\xe6\x7b\xe8\x56\x94\xcf\x42\x21\x78\x74\x3b\x74\x9c\xeb\xa6\xb5\x2e\x40\xca\x59\x62\x30\x24\xc3\xa3\xa8\x42\x68\x97\xef\x45\xdb\x3a\xbb\x4d\x38\x67\x45\x01\xff\x93\xb0\x16\x2e\xbc\x70\x96\x28\x5b\x0b\xa3\x72\xeb\x54\x71\x28\x08\x5c\x5a\x13\xf0\x10\x79\x94\xb5\xaa\xc6\x7c\x01\x51\xae\x2d\x47\x8e\x6b\x0b\xff\xe8\x40\x28\x1d\xaa\x6e\x93\x97\xb6\x29\x94\xbd\x78\xd6\xa1\xa0\xbf\xda\xaa\x11\xf8\x54\x69\x0f\x8f\xe8\x76\xba\x44\xce\x92\xbe\xcf\x6f\xa2\xc7\x6b\x11\x2a\xb8\x38\x1e\xa1\xa8\x84\x91\x35\x3a\x9f\x70\xd6\x6e\x80\x10\xeb\xef\xa7\x98\xe4\xf7\x8a\x7e\x57\xbe\x23\x69\xb4\x94\x35\xee\x85\x43\x9f\xf0\x15\xe7\x45\x01\x57\xd6\x6c\xb5\x02\x8a\x4f\x68\xe3\x21\x54\x08\x0e\xff\xed\xb4\x43\x09\x5b\x8d\xb5\xf4\xb0\xb5\x0e\x5c\x67\x8c\x36\x0a\xc4\x94\xe1\xf0\xd2\xe2\xa4\xed\x83\xeb\xca\x00\x3d\x67\x3f\x9e\x9e\xd6\xdf\xa4\x74\x74\xa4\x8d\xe2\xec\xff\xb8\xe9\xd4\xc9\xc9\xf5\xc3\xfa\x6a\x79\x70\x8c\x7e\x3c\x74\x06\x7c\x10\x2e\x78\x10\x60\x70\x0f\x54\x9e\xd1\x56\x06\xea\x61\x7d\x35\x7f\x08\x23\x41\x80\x24\xe2\xf1\x0c\xf6\x3a\x54\xe4\x3a\x31\xb5\xc2\x7b\x94\x14\x11\xb9\x46\xe0\xda\x2a\x85\x8e\x6f\x3b\x53\x92\x9d\xb4\xdc\xaa\xd1\xf3\x6c\x94\xd1\x23\xbf\x8d\xaf\x2b\x0a\x63\x38\xa5\x93\x34\x69\xbc\x4a\x32\x48\x2a\xac\x6b\x9b\xac\x38\x93\xb8\x1d\x14\x7e\x45\x28\x6b\xe5\xe6\x05\x93\xd5\x50\xe1\xef\x9d\xd7\x06\xbd\x07\x69\x1b\xa1\x4d\xce\xd9\x4e\xb8\xe8\xb0\x2e\x11\xda\x4d\xde\xf7\xd7\xf6\x5e\x34\x08\xf9\xd8\x07\x39\x7d\x1d\x8f\x8f\x43\x82\x59\xcf\x19\x9b\xe0\x97\x30\xb5\x43\x7e\x8f\xfb\x11\x9f\xae\x38\x23\x4b\x3f\x9d\x68\xa7\x5e\x1a\x52\xb1\x28\x74\x0e\x8f\x88\xcb\x83\x62\xe4\xcc\x95\x3d\x31\xb0\xd4\x21\xc6\xc9\xc8\x88\x58\x71\x76\x1c\x02\xfb\xcb\xc8\xd6\x6a\x13\x4e\x03\x4b\x39\xeb\x7b\x27\x8c\x42\xf8\xac\xe1\xcb\xe5\x6b\x54\x77\x18\x2a\x2b\x3d\xb5\x20\x67\xac\xef\x9f\xec\xad\xdd\xa3\x83\xcf\x7a\x0c\x78\x26\xbc\x04\xbf\x2b\xf3\x3b\xf1\x8c\x7d\xff\x46\xba\x70\xa4\xef\xd1\x48\x62\xa3\x54\xe3\x28\xf7\x64\x94\xf4\x27\x05\xdf\x7f\xd8\xa5\x37\xc6\xbe\x00\x00\x9c\x71\x35\x5b\x38\x31\xa6\x25\x56\xc1\x63\x8d\x65\x40\x39\x27\xc9\x7f\xa0\x20\x73\x04\xb1\x24\xaf\xf1\xbc\xad\xc9\xcc\x9a\xce\xa8\xb1\xdb\xee\xb0\xac\x84\xd1\xa5\xa8\x5f\xcb\x82\xce\x95\x14\x76\x23\x9e\x31\x25\x31\xa0\x73\xd6\xad\x38\x2b\xc3\x81\x04\xe3\x56\xcb\xbf\x8b\xf2\x59\x39\xdb\x19\x99\x8e\x74\x37\x26\xa0\x73\x5d\x1b\xa6\xbe\xcb\x39\x53\xf6\xb5\x09\x67\xf9\x8f\xe1\x24\x25\x5b\xa3\x6e\x1c\x79\xa8\xb5\x0f\x68\x26\x45\x9a\xbd\x34\x8e\xd6\x38\x5b\x64\x9e\x86\xee\x1e\xf7\x57\x83\x17\xe9\x20\x58\xe5\x3f\x75\xa8\xd2\x24\x38\x61\x3c\xad\x2f\x1a\xad\x38\xec\x71\xb0\x58\x43\x9a\xb4\x1c\xa6\x41\xc0\xbb\xee\x10\x27\xa1\xc9\x07\x67\xd2\xa4\x88\xf8\x61\xb9\x17\x49\x36\xc0\x47\x4f\xff\x26\x4f\xa2\x24\xbf\x31\x12\x0f\xab\x33\xaa\x65\x23\x6b\x6d\xf0\x7d\x86\xab\x01\x70\x8e\x83\xfe\xe9\xfa\x0c\xc7\x7a\x00\x9c\xe3\xf0\x2f\xcd\xc6\xd6\xef\x53\x3c\x46\xf9\x39\x86\xe0\x44\x79\xc6\x87\x27\x12\xaf\x62\x7e\x97\x8b\x4d\x48\xe9\x92\x0c\xca\xad\xca\xe7\x3d\x4e\x46\x62\x63\x7d\xbd\x18\xd8\x6e\x63\xa1\xbf\x19\x19\x8b\x91\x9e\x80\x33\x68\x68\x6f\x4c\x5d\x45\xb7\x03\xcc\x85\xfd\x23\x9d\x41\x94\xb4\x95\x59\x35\x8d\x3f\xad\x0f\x3a\x9d\x3a\xb3\x0c\x87\x0c\xe6\x71\x99\x36\xfe\xea\xfd\x50\xa7\x3b\xec\x23\x91\x4e\xd8\x0c\xaa\x65\xa0\xf1\xbe\xfa\xb3\x81\x12\xe5\x30\x01\xb5\xc9\x68\x90\x49\xdd\x60\x18\xbd\x4a\x93\x50\xb6\x63\x00\xd3\x0d\x4b\x01\xe8\x6d\xc4\x7e\xba\x04\xa3\xeb\x68\x7c\x8e\x09\x9d\xa3\x4f\x87\xa1\x73\x86\xb3\xb8\xc7\x98\x77\xbb\x65\x22\x89\x6a\xb8\x8f\x7e\xc9\x23\x71\xc7\x8d\x4b\x3f\x7e\xe6\x51\x74\x71\x10\xdb\x4d\xfe\x80\x8a\xdc\x72\x7d\xff\xdb\xcb\x2d\xf5\x19\x78\xb7\x3b\xd7\x70\xcb\x20\x26\x8f\x7d\x3e\x64\xbe\x36\xcb\x64\x3f\x74\xe6\xd3\xe9\x95\x8d\x07\x4d\x39\xfb\x7a\x31\x6c\xa5\x23\xff\x2f\x00\x00\xff\xff\x27\xd6\x2e\x55\x1e\x0a\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 2590, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\xd6\x08\x0a\x3b\x70\xa4\x9e\x03\xe4\xb2\x49\xba\x09\xda\x7c\x20\x35\xda\xc3\x62\xb1\xa0\xa5\xb1\x44\x98\x22\x15\x92\x72\xe2\x12\xfa\xef\xc5\x50\x92\xad\xc4\x5e\xdb\x87\x45\xd6\xe2\x9b\x99\x37\xef\x0d\x47\x4a\x12\xb8\xd6\x19\x42\x8e\x0a\x0d\x77\x98\xc1\x7c\x0d\xce\xd4\xd6\xc6\x2c\x49\xe0\x05\x4d\xad\x94\x50\x79\xfb\x0c\xde\x84\x94\xa0\x57\x68\xde\x8c\x70\x08\xae\x10\x16\x16\x42\x62\x00\xdf\x3c\xc1\xe3\xd3\x0c\x6e\x6f\xee\x67\x5f\x18\xab\x78\xba\xe4\x39\x82\x5d\xa5\x8c\x4e\x67\x3d\x16\x2a\xa3\x57\x22\x43\x0b\x16\xcd\x0a\xcd\x85\x15\x19\xc2\x5c\xa8\x4c\xa8\xdc\xc2\x42\x1b\x70\x05\x42\xfe\xf2\x7c\x0d\xce\x70\x65\x2b\x6d\x5c\x28\x70\xef\xa0\x76\x42\x8a\xff\xd0\x06\xc8\xe6\x34\xc9\x4d\x95\xc6\x7f\x87\x74\x31\x63\xa2\xa4\x87\x30\x66\xd1\x48\xa1\x4b\x0a\xe7\xaa\x11\x63\xd1\x28\xd7\x92\xab\x3c\xd6\x26\x4f\xde\x13\x3a\x49\xb5\x72\xf8\xee\x46\xe1\x4c\xe7\x12\xe3\x01\x84\x72\x26\x25\x3a\x9e\x71\xc7\x29\x9e\x1e\x6c\x4a\xc2\x28\x17\xae\xa8\xe7\x71\xaa\xcb\x24\xd7\x17\x4b\xe1\x12\xfa\xf7\x91\x13\x85\xf5\xbd\x13\x3d\x91\x22\x8b\xaa\x39\x8c\xbc\x8f\x9f\xbf\xde\x07\x9e\xcf\xdc\x15\x70\xd1\x34\x23\x36\x61\x41\xa9\x07\xbe\xc4\x6f\x2f\xcf\xd7\x6d\x3f\x50\xf2\x25\x5a\xe0\x60\xd1\x81\x5e\x00\xaa\xac\xd2\x42\x39\x0b\x7c\xc5\x85\xe4\x73\x89\xc0\xe9\x3c\x08\xe6\xfd\x37\xfd\xc8\x4b\x84\xb8\x2b\x17\xd3\xaf\xa6\xe9\xb5\x59\xd4\x2a\xfd\x54\x60\x9c\xba\x77\xe8\x94\x88\xaf\xdb\xbf\xd3\x41\x99\xdb\xfe\x7f\x13\xa8\xe6\xf1\xe1\x02\xe0\x59\xd4\xba\xfa\x54\x39\xa1\x95\x85\xcb\x2b\xf8\xfe\xe3\x83\x72\x9d\x4f\x2d\xc0\xb3\x28\x82\x7d\xc7\x5f\x71\xa1\x0d\x8e\x7b\xfd\x67\xba\x63\x36\x99\xb2\xa8\x61\x91\x41\x57\x1b\x05\xbf\x51\x68\x1b\xe0\x83\xd2\xde\xc3\x4c\xff\xa5\xdf\xd0\x7c\x24\x08\x4d\xc3\x22\xef\x0d\x57\x39\xc2\x99\x20\x5a\x9b\xf3\x07\x74\x85\xce\x2c\x21\x22\xef\xfb\xf0\x33\xd1\x75\x76\xf9\x89\xdf\x23\xbe\x75\xc2\xb1\x28\x8a\x52\xf7\x3e\xa5\xbf\x1b\xbd\x62\xef\x37\xa1\xbd\x74\x01\x71\x83\xa9\xce\x82\xee\x03\xc4\x0b\xbe\xd6\x68\x5b\xc0\xad\xda\x0b\xb0\x95\x56\x16\x03\xe2\x83\xb4\x71\x1c\xd3\x43\x12\xc4\xfb\x0b\x32\x8c\x3a\x68\x58\x13\x86\x68\x2b\x0c\x88\xb2\x92\x58\x22\x79\x49\xb7\xe6\x88\x83\x42\x39\x34\x0b\x9e\x22\x73\xeb\x0a\x87\x79\xac\x33\x75\xea\xc0\xb3\xe3\x3a\xee\x91\x11\xe0\x93\x8e\x77\x5c\x65\x12\x0d\xdb\x92\x6f\x99\x77\x69\xc2\x22\x18\x54\x77\x7a\xdb\xc8\xe9\x3d\x1c\xa5\x1a\x2e\xc4\xd8\xc2\xf9\xb6\xd4\x64\x9b\x7e\xc3\x7e\xff\x25\x31\xf8\x0a\xe7\xc3\x4b\x71\x26\xe2\xce\xd1\xd9\xba\xea\x49\x4d\x60\xbc\x0b\x6a\x5d\x1d\xa0\xa6\x80\xc6\x68\x2a\xce\xa2\x9f\x94\xba\x0a\x4f\x88\x36\xcd\xd4\x8e\x9e\xed\x3d\xa1\x69\x21\x6e\x81\xcb\x84\x45\x62\x11\x82\xbe\x5c\x81\x12\x92\x52\xf5\x37\x45\x09\x19\xf2\x0d\x6f\x8f\xc1\x2a\x3e\x85\xda\x64\x4a\xe1\xac\x61\xde\xb7\x46\x91\x4d\x9d\xd4\xed\x54\x1f\xd7\x99\xde\x0f\x07\x2e\x00\x08\x5a\x61\x9f\x16\x7a\x1b\xd0\x21\xfe\x20\xa3\x5c\xc1\x1d\xd9\xb0\x42\x43\x0b\x30\x0c\x7a\xbb\xf6\x76\xe7\xcd\x74\x99\x9d\x06\x0e\xb5\x45\x73\x91\xe9\x92\x0b\x75\x08\x1c\xc3\xb3\x11\x25\x37\x42\xae\x29\x64\x51\x4b\x10\x2a\xec\xde\xc1\xfa\x3c\xd4\xc7\xf8\xe7\xee\x94\x50\x2f\x2f\xf8\xba\x9d\x4a\x4f\x23\x31\xf8\x35\xb4\x9e\x46\xea\xf2\xaa\x8f\xd9\x67\xcf\xce\x78\x0d\xfc\x7c\x3d\xe0\x54\xbb\x5e\x4e\x72\xea\xe0\x26\xda\x6b\x55\x1b\xd1\x43\x7e\xe5\xd5\x71\x17\xba\x12\xc1\xb3\x03\xce\x56\x72\x7d\x92\x55\x07\x1b\xd9\xe7\xd5\x86\xc1\x89\x66\xd9\x8a\x54\xec\xa3\x4e\xbb\x4d\x03\xbf\x6c\xb5\xcf\xb0\x3b\x94\x15\x1a\xcb\xda\x1e\x76\x5e\x81\xfb\x77\x51\x99\xc1\x79\x0f\x8d\x1f\x6e\x26\x9f\x11\xc4\x97\x56\xea\x72\x0a\xab\xc0\x39\x4c\xc1\x79\x99\x85\x2d\x21\x16\xb0\x1a\x6e\x8d\xf6\xab\x05\x61\x89\xeb\xe0\x77\x96\xd1\xa7\xa1\x76\x05\x89\xdc\x97\xa1\x15\x5d\x72\x07\xe3\xe5\x04\xde\x0a\x91\x16\x01\x2a\x25\x48\x32\xac\xcb\xc2\x55\x16\x5e\x3b\xf4\x15\x16\x5f\x73\xa5\x95\x48\xb9\xbc\x43\x9e\xa1\xf9\x13\xd7\xf4\x49\xe3\xba\x42\x56\xb7\x43\x23\x1c\xa4\x5c\xc1\x1c\xfb\x14\x69\x8a\xd6\x62\x46\xb5\x51\xb8\x02\x4d\x57\xb9\x7b\x01\xc3\xd5\xa6\xd9\x7f\x85\x2b\xfe\xe1\xb2\xc6\x76\x29\x52\xb3\xdf\x7f\xff\x31\x39\x0a\xfc\x05\xbb\xf1\x72\xb2\xcd\x10\xde\xae\x1b\xf3\x52\xf7\xce\x1a\xf6\x7f\x00\x00\x00\xff\xff\xad\x5b\x53\xa0\x40\x0b\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 2880, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate": cmdNameMainGotemplate,
	"cmd/NAME-server/main.gotemplate": cmdNameServerMainGotemplate,
	"handlers/handlers.gotemplate": handlersHandlersGotemplate,
	"handlers/hooks.gotemplate": handlersHooksGotemplate,
	"middlewares/endpoints.gotemplate": middlewaresEndpointsGotemplate,
	"middlewares/service.gotemplate": middlewaresServiceGotemplate,
	"svc/client/cli/handlers/handlers.gotemplate": svcClientCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate": svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate": svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate": svcEndpointsGotemplate,
	"svc/server/cli/cli.gotemplate": svcServerCliCliGotemplate,
	"svc/server/run.gotemplate": svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate": svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate": svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate": &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": &bintree{handlersHooksGotemplate, map[string]*bintree{}},
	}},
	"middlewares": &bintree{nil, map[string]*bintree{
		"endpoints.gotemplate": &bintree{middlewaresEndpointsGotemplate, map[string]*bintree{}},
		"service.gotemplate": &bintree{middlewaresServiceGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"handlers.gotemplate": &bintree{svcClientCliHandlersHandlersGotemplate, map[string]*bintree{}},
				}},
			}},
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"cli.gotemplate": &bintree{svcServerCliCliGotemplate, map[string]*bintree{}},
			}},
			"run.gotemplate": &bintree{svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

