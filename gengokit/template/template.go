// Code generated by go-bindata.
// sources:
// NAME-service/cmd/NAME/main.gotemplate
// NAME-service/cmd/NAME-server/main.gotemplate
// NAME-service/handlers/handlers.gotemplate
// NAME-service/handlers/hooks.gotemplate
// NAME-service/middlewares/endpoints.gotemplate
// NAME-service/middlewares/service.gotemplate
// NAME-service/svc/cli/handlers/handlers.gotemplate
// NAME-service/svc/client/grpc/client.gotemplate
// NAME-service/svc/client/http/client.gotemplate
// NAME-service/svc/endpoints.gotemplate
// NAME-service/svc/transport_grpc.gotemplate
// NAME-service/svc/transport_http.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x56\xd1\x6f\xdb\xb6\x13\x7e\x96\xfe\x8a\xab\xd0\x00\x52\xe1\xca\xe9\x0f\xbf\xbd\x18\xf3\x43\x9b\xb6\x6b\x81\xb5\x0b\x92\x0c\x7d\x68\x8b\x81\x26\x4f\x12\x57\x8a\xd4\x48\xca\x4e\x20\xf8\x7f\x1f\x8e\x94\x65\xbb\x8b\x93\x15\x2b\xd0\xd8\x3e\xdd\x7d\x77\xbc\xfb\xee\xa3\x3a\xc6\xbf\xb1\x1a\xa1\x65\x52\xa7\xa9\x6c\x3b\x63\x3d\xe4\x69\x92\xa1\xe6\x46\x48\x5d\xcf\xff\x74\x46\x67\x69\x92\x55\x8a\xd5\xe1\xb3\xf5\xf4\x61\x1c\xfd\x75\xde\x72\xa3\xd7\xe3\x57\xa9\xeb\x60\xf5\xb2\xc5\x2c\x4d\x93\xac\x36\x8a\xe9\xba\x34\xb6\x9e\xdf\xce\x35\xfa\x39\x37\xda\xe3\x6d\x00\xa8\x8d\xa9\x15\x96\x07\x2e\xb5\xed\x78\x0c\x93\xbe\xe9\x57\x25\x37\xed\xbc\xfb\x56\xcf\xd1\x5a\x63\x1d\x3d\x99\xcf\xe1\xa6\x91\x0e\xae\xd1\xae\x25\xc7\x34\xe1\x4a\xa2\xf6\xef\x98\x16\x0a\x2d\x64\xc3\x50\xbe\x0f\x47\xb8\x64\xbe\x81\xe7\xdb\x2d\xcc\xdd\x9a\xcf\xb9\x92\xf3\x26\xfa\x50\x7d\x94\x27\x06\x3e\x14\x81\xda\x8f\x15\x25\x8d\xf7\xdd\xbf\x0b\x20\xcf\x2c\x4d\xba\x55\x70\xbc\x7c\x75\xec\x9a\xa5\x45\x9a\xae\x99\xa5\x06\xff\x01\x4b\x18\xbb\x57\x5e\x32\xeb\xf0\xbd\xf6\x93\x95\x1a\x59\x5e\x77\x4a\x8e\x26\x9a\x41\x79\x61\xda\x8e\xf1\xd1\x12\x7b\x52\x7e\xb2\xac\xab\xa2\xa5\x5b\x95\x57\x58\x4b\xe7\xd1\x0e\x43\x39\x76\xa8\xfc\xc8\x5a\xdc\x6e\xe9\x17\x5a\xca\x5e\xf5\x9a\x87\x61\xe7\x05\x0c\x69\x62\x5c\xf9\xe6\x56\xfa\xdc\xf5\xab\x68\x2c\xd2\x6d\x9a\xce\xe7\x30\x1a\x00\x6f\xa5\xf3\x0e\xbc\x01\xc6\x3d\x30\x07\xbe\x41\x20\x10\x2f\x8d\x66\x2a\x40\xcd\x60\xd5\x7b\xd8\x48\xa5\xc0\xa2\xef\x6d\x88\xf2\xc0\x8d\x40\x8a\x24\x38\x8a\x62\xdc\xf7\x63\x04\x48\xed\x3c\x32\x01\xa6\x02\xce\x94\x92\xba\x86\xb1\x14\x10\xd2\x22\xf7\xea\xae\x8c\xa3\x96\x0e\x84\xd1\x18\x2a\x50\xca\x6c\x76\x68\x02\x2b\xb4\x28\xa6\x5a\x42\x8d\x2b\x0c\x70\x28\x66\xe0\xa4\xe6\x08\xb2\x9a\x70\x37\x0d\xda\xdd\xe3\x29\x09\xa1\x55\xd6\xb4\xe0\x29\xd7\x0e\x6b\x06\x9a\x52\x9a\xea\x44\x26\x87\x1e\xfa\x0e\x56\x77\xc7\x61\x04\xb6\x31\xbd\x12\xfb\x3a\xca\xd8\xf0\xa9\xbd\x20\xb5\xa7\xbe\x8f\x24\x08\xcc\x7a\x29\x84\x85\xf8\x6f\x09\xb4\x65\xe5\x75\x60\x40\x9e\xd1\xd3\x92\x09\x61\xb3\x19\x64\xf4\xff\xdd\xcd\xcd\x25\x90\x01\x9d\xa3\xf2\x98\x10\x6e\xcd\xb3\x22\x4d\x02\xa9\x4f\x23\xd1\xd3\x09\x69\xf1\xd3\xf9\xff\xcf\xe9\x4b\x7d\x75\x79\x01\x39\x81\x16\xf7\xa3\x16\xbb\x9d\x43\x32\x72\x25\xa1\xb3\xe8\xfa\x16\x1d\x68\x03\x2e\x72\x0c\x84\x74\xdc\xac\xd1\xde\x81\xbb\x73\x1e\xdb\x19\x30\x2d\x00\x6f\x3b\xe4\xde\x41\xef\xd0\x06\x1a\x10\x52\x67\xcd\x5a\x0a\x8c\x7d\x0d\x33\x38\x4a\xac\x77\x98\xe3\xf0\x63\xb6\x8e\x9a\x4b\x44\xb0\x58\x29\xe4\x1e\x05\x48\x1d\xe0\x08\x86\xaa\x5a\x49\xcd\xec\x5d\x48\x4b\xa6\xd1\x4c\xfb\x3a\xea\x9b\x5b\x04\xe3\x73\x6f\x99\x76\xb4\x92\xa1\x19\xa1\x47\x2e\x20\x51\xe8\x9a\x59\x69\x7a\xb7\x0b\xe5\x46\x3b\x6f\x7b\xee\x8d\x75\xb0\x32\xbe\x19\x8f\x04\x8d\x71\x7e\x11\x84\x72\xb7\xaa\x69\x9a\x0c\x03\x58\xa6\x6b\x84\xa7\x2d\xfa\x66\x06\x4f\x99\xad\x1d\x2c\x96\x50\x5e\x04\xb8\x97\xb6\x76\xe5\x07\xf4\x0d\x7d\x81\xed\x36\x4d\x92\xca\x0d\x43\xf0\xde\x6e\xc9\x31\x0c\xec\x23\x6e\xde\x2a\x56\x5f\xa3\xcf\xb3\x61\xb8\x31\xbf\x9a\x0d\x5a\x18\xbd\xb2\x59\x74\x22\x3e\xff\xa6\xdf\x90\x04\x14\x94\x19\xb5\xd8\x6e\xd3\x3d\xab\x86\xe1\x30\xe9\x4b\xa5\x08\xd2\x51\x4e\x1a\x68\x80\xf8\xdd\x91\xea\x2f\x03\x77\xa3\x14\x24\x55\xeb\xcb\xb7\x9d\x95\xda\x57\xb9\x71\xe5\xb5\x17\x68\xed\x0c\xb2\xe8\x6a\x2a\x38\x73\x8b\x2f\x3a\x9b\xd1\x46\x11\xf0\xe7\xf3\xaf\x44\xbc\x00\x77\x49\x61\xaf\xb1\x62\xbd\xf2\x2e\x2f\x1e\x40\xfb\xa2\xb3\x87\x1e\x5f\xf7\x2b\x6e\xda\x96\x69\x11\x92\x15\xe1\x34\x3f\xd0\xd8\xe7\xa1\xb3\x27\xe1\x01\xce\x5c\x38\xc3\x3d\xcd\x8d\xb9\x50\x8b\x08\xb2\x4d\x13\x59\x81\x42\x9d\x8f\xe7\x2d\xe0\x67\xf8\x5f\xec\xd4\xd4\xc1\x70\xd4\x51\xf4\x5e\x50\xcc\xd8\xde\xa0\xe8\x79\x71\x30\x93\xdd\xb2\x74\xab\x72\x18\x7e\x31\xa4\xcb\x70\xbf\x4a\x27\x09\xda\xb8\xc6\x41\xe4\xe3\xd0\x64\x05\xcf\x26\xb1\x78\xb2\x84\x2c\x0b\x95\x8c\xa8\x33\x72\x85\x25\xec\x2f\x2a\x22\x52\x3e\x45\x14\x69\xb2\x05\x54\x2e\x08\xe2\xb3\x49\x2a\xf6\x38\xdc\x68\x1d\x41\x16\x4b\x08\x62\xf1\x5a\x32\x95\x4f\xae\xb3\x68\xfc\x24\x7d\xf3\x5e\x3b\xe4\xbd\xc5\xbc\x38\x30\xde\xc8\x16\x4d\xef\x73\xba\xf9\xcb\x6b\xe4\x46\x8b\x82\x5a\x23\xab\x00\xfa\x64\x09\x5a\xaa\x90\xe9\xe4\x68\x02\x9d\x61\xd3\x48\x45\xd2\xc0\xc2\x9d\x40\xf8\xb4\x87\x1a\x83\xc0\x2e\xe0\x6c\x9d\x85\x32\x09\xfb\xa0\xef\x34\xac\x24\xe8\x74\xf0\x2e\x2f\x94\x71\x71\x36\xdf\x35\x68\x7f\xf5\x87\x06\x91\xf3\xbe\x37\x0f\x2d\x41\x18\xc5\x82\x54\xcf\x62\x6b\x3c\x4e\xb2\xe5\x3a\xe4\xb2\x92\x28\x46\xb6\x1e\x92\xe1\x9e\xe3\x3f\x82\x7f\xb6\x0e\xec\x1c\x4f\x78\x44\xac\x34\x71\x1b\xe9\x79\x13\x25\x80\x08\x99\x17\x9f\xcf\xbf\x12\xea\x8f\x6c\x48\xd8\x0f\xce\x1c\xde\xb7\x02\x8b\x30\xa0\xbd\x2c\x8d\x3c\x3e\xcc\xf8\x62\xf1\x95\xf8\x48\xab\x12\xf2\x94\x1f\x98\x75\x0d\x9b\x24\x26\x0e\xe6\xaf\x1e\x9d\x9f\x08\x75\xf4\x96\x56\x4e\xe8\xf9\x0e\xe2\x82\x29\x15\x6b\x0b\x73\xbd\x87\x34\x8f\xb0\x66\xf7\x0e\x71\x22\xd1\xf7\x7d\x3d\xa2\x4e\x12\x6b\x5e\x4f\xd5\xee\xae\xa0\x7d\x9d\xe3\x5b\x6b\xf9\x8a\xf1\x6f\xb5\x35\xbd\x16\x44\xfe\xf1\x94\xff\xb1\xe4\x7f\x64\x7b\xac\xd8\x11\x39\x28\xae\xd2\x79\x16\x67\x0c\x57\xb1\x1a\x14\xb0\x91\xbe\x59\x04\x2e\x1e\x39\x9e\x68\xf6\x11\x56\x54\x20\xb8\x42\xd7\x19\x2d\x4e\x63\xad\x0f\xae\x1d\xda\x3b\x92\xfd\xc5\x63\xc2\x38\xfe\x3a\x4f\xb7\xe9\xdf\x01\x00\x00\xff\xff\xc8\xff\x06\x4b\x76\x0c\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 3190, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x51\x6f\xdb\x36\x10\x7e\x96\x7e\x05\x4b\x74\x80\x34\x38\x54\x81\xad\x7b\xc8\xea\x87\x26\x69\xd3\x62\x49\x67\x24\x2e\xfa\x38\xd0\xd2\x99\x22\x22\x91\x02\x49\x2b\x0e\x04\xff\xf7\xe1\x48\x49\x91\x1b\xdb\xed\x43\x0b\x34\xb2\x78\x1f\x3f\xdd\x7d\x77\xbc\x63\xc3\xf3\x07\x2e\x80\xd4\x5c\xaa\x38\x96\x75\xa3\x8d\x23\x49\x1c\xd1\x75\xc5\x05\xc5\x67\xed\xf0\xa1\x60\x78\x64\xa5\x73\xcd\xf4\x77\xd6\x34\x46\xaf\x71\x45\x5b\x1a\xc7\x51\x96\x91\x3f\x0a\xb2\xe0\xc6\x3d\xc5\x11\x15\xba\xe2\x4a\x30\x6d\x44\xb6\xcd\x70\x4b\xae\x95\x83\xad\x67\x13\x5a\x8b\x0a\xd8\x04\x22\x4c\x93\xf7\x1c\xd7\x9a\xfc\x23\x1d\xa2\xa4\x2b\x37\x2b\x96\xeb\x3a\x13\xfa\xec\x41\xba\x0c\xff\x57\x5a\xf4\xc0\x65\x29\x2d\xb9\x07\xd3\xca\x1c\xe2\xa8\xe4\xaa\xa8\xc0\x10\xda\x75\xec\xb3\x0f\x67\xc1\x5d\x49\xce\x76\x3b\x92\xf5\x36\x4b\xe3\xc8\xb6\xf9\x41\x88\x6d\x73\x1a\x47\xcd\xca\x1b\x17\x17\xfb\x66\x1a\x47\xb5\x2c\x8a\x0a\x1e\xb9\x01\x7b\x70\xff\xc4\x4e\xe3\x34\x8e\xd7\x1b\x95\x7b\x71\x93\x94\x74\x71\xd4\x72\x83\xea\x46\x05\xac\x36\xe2\x7d\x51\x18\xe2\xff\xcd\x09\xca\xcd\xee\x9d\x91\x4a\x24\xd4\x5b\x19\x2f\x0a\x43\x67\x84\x9e\xbf\x7d\xf3\xd7\x1b\xfc\x71\x85\xcb\x84\xab\x82\xd4\xe0\x8c\xcc\x2d\xa9\xa4\x75\xa0\x08\x22\xc1\x5a\x9a\xc6\x51\x84\x19\x79\x26\xfe\x9e\x19\xad\x53\xe2\xb7\x9e\xf8\xd3\x72\xb9\x38\xc4\x85\xd9\x38\xce\x85\xd6\x29\xd7\x9f\x9e\x4b\xdc\x2d\x2e\x49\x82\x8c\xe9\x01\xca\x34\xa4\xec\xab\x05\x02\xaa\x95\x46\xab\x1a\x94\x23\x2d\x37\x92\xaf\x2a\xb0\x33\x22\xd7\xc4\x82\x63\xe4\x63\xc5\x85\x25\x25\x6f\x81\x34\x46\x6a\x23\xdd\x13\xd1\x2d\x18\xf2\x41\xb5\x88\xb7\x2c\x8e\xe4\xda\x73\x93\xf3\x39\xd1\x96\x5d\x83\x03\xd5\x26\xf4\xea\xc3\xc5\xd7\xeb\xff\xde\x5f\x5d\xdd\xd1\xf4\xef\x00\x78\x35\x27\x94\xa2\xfe\xd1\xef\xcf\xca\xcf\xbd\x2d\x8e\x76\x9e\xc8\x17\xfe\x3e\xd1\xe2\xdf\xbb\x25\x52\x78\xd3\x84\x62\x94\x78\x4e\xd6\xb5\x63\xf7\x8d\x91\xca\xad\x13\x7a\xfe\x9b\xa5\x33\x8f\x4e\x07\xd6\x03\xee\xa1\x34\x47\xbd\x9b\x50\x4f\x9d\x3b\x40\x73\x7d\xb7\xb8\x3c\x4a\x33\x26\xee\x99\x26\xe8\xde\x14\xdc\xc1\x90\x10\xb0\xa8\xb6\x2b\xe1\x29\xe8\xbc\x02\x50\x5e\xe3\x47\x23\x1d\x26\x6e\xf5\xe4\x33\x6e\xe3\xc8\x27\x7e\xc1\x8d\x85\xa4\x4f\xe1\x8d\x16\x42\x2a\x41\x0a\x8d\xd5\xcd\x42\x69\x57\x5a\x08\xf0\x0f\x76\xe3\x7f\xc6\x11\xfa\xd3\x2f\xcf\xbd\xe1\x0b\x3c\xde\x68\xb1\xae\x5d\x40\x24\xda\xb2\x7b\x57\xe8\x0d\x8a\xf6\x02\x79\x19\x9a\x45\x12\xd6\x53\xf6\x4d\xba\x32\xa1\x0e\x75\x46\xc4\x15\xac\xf9\xa6\x72\x4b\x59\x83\x75\xbc\x6e\xbe\x2e\x2f\x7f\x9e\x25\xe7\x55\x05\x66\x9f\xe9\xd2\xaf\x85\xf4\x05\x34\x06\x92\xd0\xda\x0a\x2c\xee\x12\xaa\x4a\x63\x1d\x17\xb0\x86\x21\xdc\x3d\x84\xd0\xba\x58\x3d\x01\xed\x55\xba\xd8\x58\xa9\xc0\xda\x7d\x99\x6c\x68\x56\xa4\x59\xb1\xae\xbb\xd6\x5f\x78\x0d\x84\xf5\x1d\x8c\xe1\xdb\x6e\x87\x6f\x83\x7c\x03\x7c\x4e\xfa\x06\x86\x31\xf5\xf0\x04\xe3\xcd\x32\xf2\xcd\xf0\x66\x68\x82\xe4\x51\xba\x92\x4c\x3a\x11\x23\xf7\x00\x84\xb1\x69\x77\xca\x7a\x56\x26\xf4\xde\x27\xa6\xdb\x90\x74\xf8\x4e\x8f\x48\xc7\x5a\xfa\xa0\x8a\x46\x4b\xe5\xf6\x43\x4b\xe2\xa8\xeb\x0c\x57\x02\xc8\x6b\x89\x25\x3b\xc6\x75\x0b\xae\xd4\x85\xc5\x36\x19\x47\x51\xd7\x2d\xf5\x8d\x7e\x04\x43\x5e\xcb\x3e\xe4\x91\x70\x4e\x6c\x9b\xb3\x5b\xfe\x00\x5d\xf7\xc2\x3a\x71\xa4\xeb\x40\x15\xc8\xd6\x8b\xed\x35\x18\x70\xf6\xe7\x54\x80\x01\xee\x75\x18\xdf\xd0\x73\x74\x62\x64\xeb\x7e\x3a\xae\x17\x1e\x9f\x63\xef\x3c\x11\xef\x6c\x12\xc9\x6e\x12\x89\x85\x0a\x72\x07\xc5\xaf\x0a\xe9\x65\x6e\x47\xe2\x64\x44\xf5\x52\xde\x42\x5e\x72\x25\x73\x5e\x3d\xa7\x17\x8c\xc9\x31\xf2\x9a\x3f\x40\x82\x66\x02\xc6\x68\x3c\x2c\xb9\xdb\xa2\xa1\x9f\xec\xec\x82\xe7\x0f\xc2\xe8\x8d\x2a\x86\x66\xf1\x59\x39\x30\x66\xd3\xb8\xb1\x82\xe3\x48\xe8\xf1\x65\x34\x7f\x0a\x0b\x09\x7e\xaa\xdf\x1a\x86\x5e\x98\x24\xc3\x3e\x1c\xaa\x61\x9e\x0e\x47\xfd\xfc\x47\x1d\xc3\x70\x65\xb1\x33\xe3\x19\xf5\x23\xc0\x9f\xd0\xa8\xc6\x9d\x7e\x28\xf6\x47\x0a\x6e\x37\x5b\x7f\xa6\x6a\x16\x9c\x49\x68\xe6\xf1\xe1\x96\x93\xd1\x59\x80\xf7\x9e\x7e\x44\x4f\xbc\x85\x7d\x56\x05\x6c\xd3\x13\x5b\xf3\xba\xa8\xa4\x82\xe3\x0c\x97\x01\x70\x8a\x03\xff\xc8\xea\x04\xc7\x22\x00\x4e\x71\xd8\xa7\x7a\xa5\xab\xe3\x14\xf7\xde\x7e\x8a\xc1\x19\x9e\x9f\xf0\x61\x89\xe6\xd4\xeb\x3b\xed\x90\xfd\x55\xe1\x79\x02\xe3\x17\x7c\x51\xbd\x3b\x0b\x54\x37\x3e\xcb\xef\x55\xe1\x33\x91\x3c\x23\x67\xa4\xc6\xc6\x33\x94\x93\xbf\xaf\x8c\x29\xfd\x25\x35\x81\x94\xe1\xfe\x34\x1c\x7d\xec\x3f\xb8\x3a\xd4\x64\xee\xb6\x33\x32\x9e\x93\x59\xdf\xfc\xd3\x23\x41\x0e\x83\xfc\x87\x31\x0e\xc0\x19\x29\xa7\x21\xfa\x6b\xd4\xaf\x0d\x11\x29\x43\xd5\x57\x6a\x86\x67\x17\xb7\x2b\x70\xbd\x4b\x09\x75\x79\x83\xae\x0f\x97\x07\x74\x5d\xae\x3d\xf0\xd5\x9c\x28\x59\xf9\x2f\x8f\xd1\x80\x31\xf8\x6a\xc0\x6d\x8c\x8a\x23\xdf\xba\x22\x6b\xda\xa9\x7e\x78\x49\x09\x93\xec\x3b\xf9\x90\xdb\x37\x59\x7f\x89\x1c\xce\x9e\xf1\x27\xaf\x59\xb1\x3b\x10\xe8\x93\xe9\xba\x83\x63\x31\xb1\x33\x62\x4d\x7b\xb4\xc2\xa6\x11\x0c\xee\x5a\x16\x04\xaf\xd4\x54\xe6\xbb\x8d\x7a\xb5\x3f\xe9\x61\x2b\x51\xad\x77\x67\xa1\x07\xed\xe2\xff\x03\x00\x00\xff\xff\xb3\x04\xdc\x7e\x22\x0d\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 3362, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresEndpointsGotemplate,
		"middlewares/endpoints.gotemplate",
	)
}

func middlewaresEndpointsGotemplate() (*asset, error) {
	bytes, err := middlewaresEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/endpoints.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresServiceGotemplate,
		"middlewares/service.gotemplate",
	)
}

func middlewaresServiceGotemplate() (*asset, error) {
	bytes, err := middlewaresServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/service.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\x4d\x8f\xda\x30\x10\x3d\xdb\xbf\x62\x84\x22\x94\x54\x60\xee\x48\x3d\x40\xd5\x22\x0e\xad\x10\xed\x1f\x30\xc9\x90\x58\x4d\x1c\xaf\xe3\xec\x87\x46\xfe\xef\x2b\x1b\x43\x96\xbd\xb0\x97\x64\xf2\xde\x9b\xe7\xf1\x9b\x18\x59\xfe\x97\x35\x42\xd9\x2a\xd4\xae\x91\xba\x6a\xd1\x72\xae\x3a\xd3\x5b\x07\x39\x67\xe6\x04\x33\xa2\x4c\x1c\xb6\xfb\x88\x1d\xa4\x6b\x60\xe9\xfd\x8c\x17\x9c\x13\xc1\x8b\x72\x0d\x64\x0e\x61\xfd\x1d\x84\xf7\x9c\x11\x59\xa9\x6b\x84\x4c\x05\x28\x73\x28\xfe\xa2\x7d\x56\x25\x8a\xdf\xe8\x9a\xbe\x1a\x82\x68\xb5\x02\xa2\x4c\x89\x3f\xb2\x43\xef\x41\x75\xa6\xc5\x0e\xb5\x1b\xe0\x2a\xe6\xec\x3c\xea\xf2\xa3\x2a\x27\x8a\x87\x29\x5d\xe1\x6b\x34\xfe\x11\x87\xde\xd8\x7a\x88\xde\xa1\x80\x9b\x9c\x68\xd7\x87\x0a\xc4\xaf\x51\x97\x4e\xf5\x3a\xf0\x01\x47\x5d\x79\x5f\x40\xfe\xcd\x9c\xc4\x4d\x95\x29\x71\xc4\xa7\x11\x07\xf7\xef\xcd\x60\xf2\x58\x00\x5a\xdb\xdb\x82\x38\x63\xf6\xc2\x86\x4b\x3d\xec\x0b\x7a\xa2\x65\x0a\xa7\x43\xd7\x84\xb6\x2f\x0d\x1e\xb2\xe5\x8c\x4d\x31\x1a\x69\x65\x17\xa3\x0c\x3e\x22\x6a\x93\x26\x9e\xa1\xce\x20\x75\x05\x79\x7c\xe8\xde\xa5\x0e\xb1\x1f\xb6\x72\xc0\x30\x54\x71\x87\x1f\xd1\xa0\x74\x58\x15\xf7\xf0\x4f\x3d\x76\x45\xb2\x65\xd3\xed\x2e\x64\x5a\xd3\x1a\xe6\x9f\x99\x5d\xbf\xb1\xb5\xf7\x8b\xdb\x38\xd8\x0e\x08\x0f\x7d\x1e\xdb\xe8\x6a\x4a\x62\xfa\x48\x54\xac\x7d\x5c\x8a\x1b\xad\x86\x79\x5a\xce\x02\xb4\x6a\x39\x8b\x7f\xe1\x45\x76\x7d\xbf\x07\x00\x00\xff\xff\x50\xcc\x31\x90\xe8\x02\x00\x00")

func svcCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcCliHandlersHandlersGotemplate,
		"svc/cli/handlers/handlers.gotemplate",
	)
}

func svcCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/cli/handlers/handlers.gotemplate", size: 744, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x55\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\x6a\x04\x85\x14\x28\xd4\x3d\x85\x2f\xeb\xdd\x2e\xb6\x68\x52\x23\x1b\xb4\x87\xc5\xa2\xa0\xa9\xb1\x4c\x58\x26\x55\x92\x76\x6c\x08\xfa\xef\xc5\x90\x94\x23\x7b\x93\x3d\x04\x11\x39\x8f\xf3\xf1\x66\xde\xb8\xaa\x60\x29\xe4\x56\x34\x08\x8d\xed\x24\x74\xd6\x1c\x54\x8d\x0e\x04\x34\x4f\xcb\x05\xc8\x56\xa1\xf6\xb0\x36\x16\xfc\x06\xa1\xef\xf9\x57\xb4\x07\x25\x91\x3f\x8a\x1d\x0e\x03\xb8\x74\x64\xdd\xc4\x0d\x63\x6a\xd7\x19\xeb\x21\x67\xd9\xac\x31\xad\xd0\x0d\x37\xb6\xa9\x8e\x95\x46\x5f\x49\xa3\x3d\x1e\xfd\x2c\xd8\x4c\xd3\x22\x9f\x40\xe8\xf9\xfb\x96\x6a\x87\x5e\xd4\xc2\x8b\x00\x51\x7e\xb3\x5f\x71\x69\x76\x55\xb7\x6d\x2a\xb4\xd6\x58\x37\x63\x97\x96\xc6\xdc\x6d\x95\xaf\xe8\x0f\x75\xdd\x19\xa5\x29\x30\xf9\xf2\x56\x68\x17\xb2\x7c\x07\x7f\x06\xa4\xa4\x58\x56\x55\xf0\xbc\x51\x0e\x12\x07\x2c\x73\x07\x09\xb3\xbe\xe7\x5f\x42\xb9\x4b\xe1\x37\x70\x37\x0c\x50\xb9\x03\x15\xd1\xad\x82\x71\xf9\xe1\xd2\x3c\x63\x05\x63\x55\x05\x8f\xf8\x02\x16\xfd\xde\x6a\x07\x42\x8f\x4c\xc2\x4a\xc8\x2d\xd6\xb0\x3a\x5d\xf5\x40\x1a\xad\x51\x7a\x65\x34\x87\x2f\x1e\x94\xa3\x8e\x90\x1f\x8b\xae\x33\xda\xa9\x95\x6a\x95\x3f\x81\x59\x87\x56\x49\xd1\xb6\x68\xc1\x1b\xa8\x95\x68\x4b\x10\xba\x86\x56\x78\xb4\x20\x5b\xe3\xb0\x8c\xa0\x57\x9f\x6c\xbd\xd7\x92\x72\xca\xe9\x12\x6e\xa9\x66\xbe\x08\xa1\x17\x46\xeb\x12\x4c\x47\x38\x07\x9c\xa7\xeb\xbf\xc2\x45\x01\x79\xb7\xe2\x7d\xff\xd9\xd0\x44\xc0\xd5\x7c\xd0\x09\x6d\x09\xa1\x39\x05\xf4\x2c\x3b\x08\x0b\x52\xa6\xa2\x16\x46\xaf\x55\xc3\x58\x46\x03\xf6\x6f\x09\x6b\xb8\x9f\x83\x15\xba\xc1\x73\xb8\x9e\x65\x19\x5a\x4b\x86\x75\xfe\xab\x94\x05\xcb\x32\xb5\x26\x87\xf0\xcb\x1c\xb4\x6a\x03\x22\x8b\x44\xd2\x39\x05\x73\xfc\x1f\x2b\xba\x1c\xad\x2d\x61\x26\x85\xd6\xc6\x83\xe8\xba\xf6\x94\x3c\xcf\xc8\xd1\xc0\xb2\x81\xb1\x4c\x4e\xea\x71\x14\xe9\xdb\xf7\x8b\x09\xb9\x28\x98\xc2\xbd\x65\xfd\x80\x6b\x63\x31\xa7\x64\xd2\x84\xff\x2d\xda\x3d\xba\x67\xf3\xf9\x69\xb9\x78\x48\x83\x9b\x4b\xc9\x37\x28\x6a\xb4\xae\x28\x4a\x0a\x9f\xf5\xfd\x1d\xbc\x28\xbf\x81\x1b\x8f\x14\x9c\x0f\x03\xcb\x26\xb7\xdd\xb6\x09\xd4\xde\xcf\x09\xc1\x93\x5e\x23\xbf\x14\x8d\x90\x91\xb3\x1b\x35\x82\xc6\x2e\x3c\xa0\xdf\x98\xda\x45\x60\xe0\xbe\xef\x9f\xcd\x9f\xe6\x05\x2d\xdc\xa8\xd4\xa4\x4f\x49\x18\x30\x2a\x84\x8f\x37\xe1\x55\xe0\x97\xc2\xbc\xff\x70\x0e\x97\x8c\x3c\xe2\x4b\x24\x25\x8f\x6f\x89\x11\x5d\xa6\xef\x59\xdf\x8f\x35\x0d\x03\xef\xfb\x69\xbe\xf1\x72\x36\x85\xaa\xeb\x4b\x77\x90\xfc\x93\x96\xa6\x46\x22\x76\x82\x78\xc2\xff\xf6\xe8\xfc\x14\xf7\x11\xdf\xc4\x05\xc1\xe0\x08\x9c\xce\xef\x8d\xe2\xa3\xf9\xf9\xd4\x8d\x09\xf5\xc3\x88\xbd\x18\x15\xce\x79\xba\x2f\xce\x94\xe5\x45\xb8\x49\x9d\x41\x5d\xa7\x6e\xa6\xaf\xf1\x83\x8d\x13\x1b\xab\x89\x6f\x5d\x4f\x80\x69\x2f\xaf\x1b\x49\xfb\x23\xb8\xfb\xa1\x07\xf7\x00\xf0\xb3\xe6\x96\xaf\xb1\xb3\xa1\x24\xa1\xb0\x81\x31\x7f\xea\xf0\x42\x8b\xe0\xbc\xdd\x4b\x4f\xa2\x4a\x63\x0a\xdf\xbe\x3b\x6f\x95\x6e\x08\x5f\x55\x30\xd5\x02\x6d\x21\x01\xb4\x39\xc2\xc9\x6f\x84\x87\x9d\xa9\xd5\x5a\xa1\x8b\x0b\xe6\xbc\xbb\x48\xe7\x21\xda\xc5\x7b\x7a\x9a\xdf\x4e\x13\x28\xa2\x7c\x59\xdc\x47\x0b\x7f\x1c\x55\xf4\x15\x75\x9d\x6f\xf1\x14\x36\x50\xcc\xa8\xb8\x74\xd6\x9f\x49\x0d\x6e\x0d\xbc\xe5\x38\xac\x0b\x33\x6a\x10\xe6\x40\x2e\xd9\x74\x81\x90\x28\x87\x14\xff\x67\x4a\x0e\xb9\x8c\xe4\x14\x57\x0a\x48\xb3\xf8\x3b\x39\xb9\xca\x4b\xfa\xe3\xe8\x97\x2f\xe2\xff\x12\x76\x35\xdc\x8e\x3f\x6e\xfc\xe1\x63\x71\x8d\x08\x69\x93\x7e\x3b\xa1\xa6\x3d\xc9\xc6\xd5\xb9\x7d\x5d\x9d\x21\xb1\xa0\x5a\xb5\x86\x43\x09\x26\xd8\xa4\x3f\xf2\x50\x47\xbe\x2d\x78\x9e\xb2\xfe\x8d\x8c\x51\xe0\xd1\xf1\x9c\x96\x24\x31\x1d\x8e\x25\x6c\x4b\x38\x84\x89\x1e\xc2\xba\x8c\xcb\x37\x42\xa7\xeb\xf7\x76\x57\xc3\x1c\xce\x05\xfc\x61\x94\xce\x6f\x77\x75\xf9\x7a\xb5\xa4\x37\xd1\x2b\xe7\xbc\x28\x46\x77\x89\x19\xe9\x8f\x91\xf7\xff\x03\x00\x00\xff\xff\xeb\x9a\xab\xc5\x92\x08\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 2194, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xcd\x6e\xdc\x36\x17\x5d\x4b\x4f\x71\x23\xf8\x83\x47\x81\xcc\xd9\x27\xf0\xe2\x6b\x90\xb6\x5e\x24\x0d\xea\x14\x5d\x04\x41\xc0\x11\xaf\x46\x84\x29\x92\x21\x29\x7b\xa6\x82\xde\xbd\xb8\xa4\xa4\x91\x6b\xa1\xcd\x22\x98\x98\x3f\xe7\x1e\x9e\x73\x7f\x64\x79\xfd\xc0\x8f\x08\xfe\xb1\xce\xf3\xfd\x1e\x3e\xb7\xd2\x43\x23\x15\x42\x6d\x74\xe0\x52\x7b\xe8\x30\xb4\x46\x78\x08\x06\x3a\xfe\x80\x20\xb5\x90\x8f\x52\xf4\x5c\x01\x6a\x61\x8d\xd4\xc1\x43\xe3\x4c\x07\x1e\xdd\xa3\xac\xd1\x57\x84\xe4\xf0\x7b\x8f\x3e\x00\xd7\x02\x1c\x7a\x6b\xb4\x47\x08\x67\x8b\x11\x89\x8e\x22\x84\xd6\x78\xbc\xa0\x54\xc0\x3d\x3c\xa1\x52\xf4\x8b\xba\x36\x02\x9d\x27\x00\xc2\x13\x38\xfd\xdd\x18\x37\x5d\x8c\x68\x55\x5c\xe0\x4a\x81\x69\xc0\xf4\x0e\x7c\x6f\xad\x71\x01\x05\x04\xc7\xb5\xa7\xff\x53\x38\xc9\x95\xfc\x8b\x07\x69\x34\xa1\x35\xc6\x75\x3c\x78\x06\x77\x01\xb8\xf2\x06\xa4\xae\x55\x2f\xd0\x2f\x6c\xa0\x93\x42\x28\x7c\xe2\x0e\x3d\xcb\x73\xd9\x45\xa0\x5d\x9e\x15\x4d\x17\x8a\x3c\x2b\x8e\x46\x71\x7d\x64\xc6\x1d\xf7\xa7\xbd\xc6\xb0\x27\xc5\xf0\x14\x8a\x9c\x36\x65\x68\xfb\x03\xab\x4d\xb7\x3f\x9a\x9b\x07\x19\xf6\xf4\x6f\xc6\xa6\x23\xf6\x00\xc5\x30\xb0\x4f\x3f\xdd\x45\xe4\x4f\x3c\xb4\x70\x33\x8e\x45\x5e\x46\x23\xde\x2f\xd2\xd6\x46\x29\xac\x83\x9f\xdf\x18\xda\x95\x64\x10\x5a\x1e\xa0\x36\x9d\x25\x41\xb8\x06\x2e\xc4\xec\x03\x3d\xee\xda\x13\x58\x87\x5c\x07\x92\xfd\x80\xd0\x7b\x14\xa4\x2f\x87\x16\x95\x45\x07\x3e\xb8\xbe\x0e\x15\x6d\x4f\xa1\xb6\x23\x49\x1d\x0c\x70\x82\xf3\x52\x1f\x15\x82\xe5\x8e\x77\x18\xd0\xb1\x7c\xbf\xa7\xf5\x3b\x0d\x3c\x39\xeb\x2a\x90\xe1\xda\x53\xb0\xa6\x57\xd1\xa1\xa6\xd7\x35\xa9\x3f\x51\xd6\x48\x06\x19\x30\x16\x1d\x0f\x08\x86\xee\x5a\x74\x37\x73\x40\x02\x3c\x70\x2f\x3d\x83\x9f\x8d\x03\x3c\xf1\xce\x2a\xac\xe0\x6c\x7a\xe8\xe4\xb1\x0d\x60\xb9\xa7\xec\x58\x49\x45\x04\x97\x40\x29\x8e\x75\x46\xf4\x35\x46\x19\xb8\x86\x36\x04\xcb\x7e\xe5\x5a\x28\xe2\xf8\x24\x43\x0b\xc8\xeb\x76\x4a\x72\xd8\xcd\xd1\x4b\x78\x92\x0e\x05\xf4\x36\x81\x7a\x8b\xb5\x6c\x64\x0d\x96\x87\x96\xc1\xee\x2e\xf2\x93\x9e\xf0\x0f\xfc\xa0\xce\xc0\xa1\x93\x3e\xa4\x02\x01\x81\x5e\x1e\x35\x5d\x95\xfa\xd1\x3c\x60\x94\xf2\x3e\xd9\xb2\x14\x54\xa4\x88\xcf\xcd\x4e\x66\x10\xc4\xac\x24\x2b\xd7\xea\xd6\x4a\xa2\x0e\xcf\xd5\x5d\x19\x77\xa9\x4d\x75\xa6\x0a\x4e\x70\x28\xfe\xcd\x46\xaa\xa2\xa4\x95\x24\x85\x3b\x4c\x69\x75\xe1\x2b\x75\x40\xd7\x70\x4a\xa8\x6d\x27\x08\x6c\x09\xb6\xdd\x1f\x7a\x0a\x76\x29\xc8\x7d\xf4\xe1\x23\x3e\xbd\x9b\xde\x53\x9b\xee\x20\x75\xd4\xa9\x9b\x28\xae\x8c\xad\xa6\x2e\x12\x7a\xa7\x41\xc6\x4c\x26\x82\x35\x57\x0a\x5d\x4a\xe6\x89\x2c\xcb\xe3\x73\x5e\x08\x3a\xe4\xc3\xe0\xb8\x3e\x22\x5c\x49\x78\x73\x0b\x6c\x3e\xff\x21\x99\x31\x8e\x79\x36\x0c\x57\x92\x7d\xe4\x1d\x8e\xe3\x7c\x1f\x00\x96\x47\xb0\x79\x31\x1f\x86\x1b\x5a\x1d\xc7\x7c\x7c\x5e\xab\x3f\x10\x84\xb2\x13\x76\x2b\x86\x25\xac\xe2\xee\xea\x70\x82\xa9\x8f\xb0\x77\xe9\xb7\xa2\x6c\x78\x6d\x0f\x6c\x18\x7e\x31\x74\x0c\xae\x24\xfb\x3d\x75\xd7\xcf\x67\x8b\xd3\xd5\x12\x76\x2f\x0f\xa5\xb6\xbb\x3a\x55\x01\x3a\x67\x5c\x09\x43\x9e\x65\x73\x5b\x8e\x8b\x44\x18\xd9\x86\x06\xc4\x89\x38\x94\x79\x96\xc9\x26\x1e\x7d\x75\x0b\x5a\xaa\x88\x91\x4d\xae\x68\xa9\x22\x4c\x9e\x65\x63\xbe\xac\xce\x11\xd8\x8f\x70\x2b\x2b\x42\xc9\xb3\x31\x1f\x86\x24\x2f\x89\xfb\x81\x4a\x6a\xad\x70\x2c\xda\xab\x80\x51\xe1\xe4\xdb\x5a\xf4\xab\x80\x5b\xba\x27\xe1\x09\x6c\xeb\x89\x1e\x22\xbd\xf5\xdd\x74\xe2\x3e\xd6\x60\xf9\x32\x09\x9e\x3d\x9e\xb0\xb7\xad\x9b\xa7\xe0\x52\x43\x03\x19\xb5\xcc\xc3\xd5\x72\x32\x61\xe5\x0e\xa1\x7f\xa7\x17\x4d\x18\x5b\x1a\xbe\x48\x82\x78\xef\x71\x31\xd4\xb3\x7f\x24\x57\x64\x94\x4e\x6d\x78\xb9\xe5\x66\xf2\x73\xd9\x79\x9c\x4c\x4a\xcb\x51\xfd\xe4\xd5\xda\xb3\x3f\x1d\xb7\xff\x57\x0a\x9e\x1c\xb7\x3e\x35\xd8\x45\xb7\x46\xa2\x12\x34\x5d\xa6\xca\xbc\x94\x6a\x34\x36\x76\xa6\x8d\x91\xc9\x3e\x2c\xe3\x98\xc6\x0d\xfc\x41\xf3\x3f\x7e\xac\xd0\xf4\xb7\x56\x9d\xa9\xc1\x50\xd3\x0c\x04\xbe\x1a\xde\xd4\x2d\xf0\x11\xdd\xf9\x32\xda\x65\xec\xbc\xcb\x9c\x24\xbc\xdf\x2c\xcd\x0c\xea\x9b\xd5\xaa\x6d\xd5\x5c\xd3\xcc\xa4\x49\x83\x82\xae\x1d\xce\xa0\x49\xfd\x34\x4b\xf1\x14\x3f\x1a\x44\xfa\xfc\x39\x20\x51\xa0\x37\x5b\x14\x6c\xa5\xc3\xee\xc2\xa6\x82\xe2\x3e\xf0\xd0\xfb\xa2\x82\xe2\x93\xd4\xc7\xa2\xcc\xe7\x96\xf0\x7a\xd5\x13\x5e\xde\x84\x0d\x25\xaa\x0b\x03\xc6\x98\x0f\x4e\xea\x63\x4c\x9e\xe9\x6b\x46\x50\x0e\x74\xdc\x7e\x49\x5b\x5f\x93\xe4\xc3\x48\x66\x53\x13\xfb\xaf\x66\x95\x65\xc5\x2a\x7f\x8a\x37\xb0\x00\x8c\xd5\x04\x91\x4c\xcf\xc6\x3c\xcf\xc8\x89\x6f\x44\x29\x26\x6d\x84\x5e\xe8\x0d\xa9\x79\x7c\xab\xc0\x3c\xd0\xf6\x4c\xf0\x0b\x9e\xbe\xbe\x85\x57\xe6\x21\x25\xa0\xe5\x5a\xd6\xbb\xa6\x0b\xec\xde\x3a\xa9\x43\xb3\x2b\xde\xcf\x10\x8b\x7b\xd7\xff\xf3\xd7\x20\x0c\x7a\xd0\x26\x00\x9e\xa4\x0f\x6f\xc1\x23\xae\x4d\x5f\xf2\xc6\xb3\xa3\x29\x88\x54\x59\x4e\xad\x49\xa0\xc2\x80\xbb\x99\x41\xdc\xbb\x3c\x40\xea\xba\x82\x6f\x97\x17\x2c\x4a\xfe\xb8\x66\xb2\xa1\x5b\x70\x7b\x0b\xcf\xd4\x9b\x4a\x6c\xb3\xc7\xc2\xed\x8a\xfc\x6e\xf3\x48\x39\xd7\xdc\x33\xd5\xc7\xfc\xef\x00\x00\x00\xff\xff\xea\x4a\x62\x0e\xc2\x0b\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 3010, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\x4f\x6f\xe3\xb6\x13\x3d\x8b\x9f\x62\x7e\x46\xf0\x83\x1d\x38\x52\xcf\x01\x72\xd9\xec\x76\xb3\x68\xb3\x0d\xd2\xa0\x3d\x2c\x16\x0b\x5a\x1a\x4b\x84\x29\x52\x21\x69\x27\xae\xa0\xef\x5e\x0c\x29\xc9\x4a\xec\xc8\xde\xe6\x10\x38\x16\xe7\xcf\x9b\xf7\x66\x46\x74\xc5\xd3\x15\xcf\x11\xec\x26\x65\x2c\x49\xe0\xa1\x10\x16\x96\x42\x22\x54\x46\x6f\x44\x86\x16\x2c\x9a\x0d\x9a\x0b\x2b\x32\x84\x85\x50\x99\x50\xb9\x85\xa5\x36\xe0\x0a\x84\xfc\xfe\xee\x1a\x9c\xe1\xca\x56\xda\xb8\x98\x42\x7c\x71\xb0\x76\x42\x8a\x7f\xd0\x7a\x93\xfe\x34\xc9\x4d\x95\xc6\x7f\xfa\x70\x31\x63\xa2\xa4\x87\x30\x65\xd1\x44\xa1\x4b\x0a\xe7\xaa\x09\x63\xd1\x24\xd7\x92\xab\x3c\xd6\x26\x4f\x9e\x13\x3a\x49\xb5\x72\xf8\xec\x26\xfe\x4c\xe7\x12\xe3\x81\x09\xc5\x4c\x4a\x74\x3c\xe3\x8e\x93\x3f\x3d\xe8\x53\xc2\x24\x17\xae\x58\x2f\xe2\x54\x97\x49\xae\x2f\x56\xc2\x25\xf4\xf7\x12\x13\xb9\x75\xb5\x13\x3c\x91\x22\x8b\xaa\x05\x4c\xea\x3a\xbe\xfb\xf0\xc5\xe3\xbc\xe3\xae\x80\x8b\xa6\x99\xb0\x19\xf3\x4c\xdd\xf2\x15\x7e\xbe\xbf\xbb\x0e\xf5\x40\xc9\x57\x68\x81\x83\x45\x07\x7a\x09\xa8\xb2\x4a\x0b\xe5\x2c\xf0\x0d\x17\x92\x2f\x24\x02\xa7\x73\x4f\x58\x5d\x7f\xd6\x5f\x79\x89\x10\xb7\xe9\x62\xfa\xd6\x34\x1d\x37\xcb\xb5\x4a\x5f\x25\x98\xa6\xee\x19\x5a\x26\xe2\xeb\xf0\x39\x1f\xa4\xf9\xd4\xfd\x37\x83\x6a\x11\x8f\x27\x80\x9a\x45\x41\xd5\x3f\x2a\x27\xb4\xb2\x70\x79\x05\xdf\xbe\xbf\x60\xae\xd5\x29\x18\xd4\x2c\x8a\xe0\xd0\xf1\x07\x5c\x6a\x83\xd3\x8e\xff\x07\xdd\x22\x9b\xcd\x59\xd4\xb0\xc8\xa0\x5b\x1b\x05\xff\x27\xd7\xe0\x50\x7b\xa6\xeb\x1a\x1e\xf4\xef\xfa\x09\xcd\x4b\x80\xd0\x34\x2c\xaa\x6b\xc3\x55\x8e\x70\x26\x08\x56\x7f\x7e\x8b\xae\xd0\x99\x25\x8b\xa8\xae\x3b\xf7\x33\xd1\x56\x76\xf9\x0a\xdf\x57\x7c\x6a\x89\x63\x51\x14\xa5\xee\x79\x4e\x9f\x3d\x5f\x71\x5d\xf7\xae\x1d\x75\xde\xe2\x23\xa6\x3a\xf3\xbc\x0f\x2c\xee\xf1\x71\x8d\x36\x18\x7c\x52\x07\x0d\x6c\xa5\x95\x45\x6f\xf1\x82\xda\x38\x8e\xe9\x21\x11\x52\xd7\x17\x24\x18\x55\xd0\xb0\xc6\x37\xd1\x8e\x18\x10\x65\x25\xb1\x44\xd2\x92\xa6\xe6\x88\x82\x42\x39\x34\x4b\x9e\x22\x73\xdb\x0a\x87\x71\xac\x33\xeb\xd4\x41\xcd\x8e\xf3\x78\x80\x46\x80\x57\x3c\xde\x70\x95\x49\x34\x6c\x07\x3e\x20\x6f\xc3\xf8\x45\x30\xc8\xee\xf4\xae\x90\xd3\x6b\x38\x0a\xd5\x0f\xc4\xd4\xc2\xf9\x2e\xd5\x6c\x17\xbe\x47\x7f\x78\x48\x0c\x3e\xc2\xf9\x70\x28\xce\x44\xdc\x2a\xfa\xb0\xad\x3a\x50\x33\x98\xee\x1b\x05\x55\x07\x56\x73\x40\x63\x34\x25\x67\xd1\x0f\x0a\x5d\xf9\x27\x04\x9b\x7a\x6a\x8f\xcf\x30\x27\xd4\x2d\x84\xcd\x63\x99\xb1\x48\x2c\xbd\xd3\xff\xae\x40\x09\x49\xa1\xba\x49\x51\x42\xfa\x78\xc3\xe9\x31\x58\xc5\xa7\x40\x9b\xcd\xc9\x9d\x35\xac\xae\x83\x50\x24\x53\x4b\x75\xe8\xea\xe3\x3c\x27\x09\x8c\x0d\x00\x08\x5a\x61\xaf\x16\x7a\x70\x68\x2d\x7e\x25\xa1\x5c\xc1\x1d\xc9\xb0\x41\x43\x0b\xd0\x37\x7a\x58\x7b\xfb\xfd\x66\xda\xc8\x4e\x03\x87\xb5\x45\x73\x91\xe9\x92\x0b\x35\x66\x1c\xc3\x9d\x11\x25\x37\x42\x6e\xc9\x65\xb9\x96\x20\x94\xdf\xbd\x83\xf5\x39\x56\xc7\xf4\xc7\x7e\x97\x50\x2d\xf7\xf8\xb8\xeb\xca\x9a\x5a\x62\xf0\x6d\x28\x3d\xb5\xd4\xe5\x55\xe7\x73\x48\x9e\xbd\xf6\x1a\xe8\xf9\xb8\xa7\x14\x51\x74\x2d\x05\x0d\xcd\xfb\xa5\x0a\x9d\x31\xaa\x55\x30\xf9\x0f\x62\x55\x72\x7b\xaa\x54\x21\xc7\x5b\x5a\xa5\xbe\xda\x71\xad\x42\x84\xb7\xc5\x22\x30\x27\xca\x45\xa6\xbd\x60\x95\xdc\x9e\x36\x51\xc3\x19\x94\xdb\x91\xf9\x0a\x2f\x85\x93\x44\x1b\x7d\x7f\x1c\x14\x2d\x78\x1c\x13\xed\x54\x41\x82\x7c\xe3\x12\x9f\x34\x60\xa3\x85\x1c\x12\xad\x47\x70\xa2\x66\xb6\x22\x16\xfb\x46\xfa\x59\xc5\x6c\x35\x36\x66\xef\x57\xec\xed\x8d\xd8\x09\x36\xba\x11\x4f\xdc\x75\x47\xe5\x1a\xdd\x88\x2f\xa6\x6c\xac\x8e\xc3\x7a\xb5\x25\xfe\xc4\x46\xec\xf0\xbc\x7b\x23\x26\x09\xdc\xa0\xac\xd0\x58\x16\xd0\xef\xdd\x31\x0f\xbf\xec\xcb\x0c\xce\x3b\xd3\xf8\xf6\xe3\xec\xb5\x05\x61\xa5\x3b\xcb\x6a\x0e\x1b\x0f\xd8\xcb\x7f\x5e\x66\xfe\x35\x2c\x96\xb0\x19\xbe\x96\xc3\xcf\x02\x84\x15\x6e\xbd\xd2\x59\x86\x19\x2c\xb4\x2b\x88\xde\x2e\x0d\xdd\x81\x4a\xee\x60\xba\x9a\xc1\x53\x21\xd2\xc2\x9b\x4a\x09\x92\xc4\x6a\xa3\x70\x95\xf9\x7b\x1d\xfd\xcc\x89\xaf\xb9\xd2\x4a\xa4\x5c\xde\x20\xcf\xd0\xfc\x86\x5b\xfa\xcd\xe0\xda\x44\x56\x87\x7e\x11\x0e\x52\xae\x60\x81\x5d\x88\x34\x45\x6b\x31\xa3\xdc\x28\x5c\x81\xa6\xcd\xdc\xde\x70\xe1\xaa\x2f\xf6\x6f\xe1\x8a\xbf\xb8\x5c\x63\xb8\x75\x50\xb1\xdf\x7e\xf9\x3e\x3b\x6a\xf8\x06\xba\xe9\x6a\xb6\x8b\xe0\xaf\xaf\xbd\x76\xa9\x7b\x66\x0d\xfb\x37\x00\x00\xff\xff\x09\x00\x51\xc2\x47\x0e\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 3655, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate": cmdNameMainGotemplate,
	"cmd/NAME-server/main.gotemplate": cmdNameServerMainGotemplate,
	"handlers/handlers.gotemplate": handlersHandlersGotemplate,
	"handlers/hooks.gotemplate": handlersHooksGotemplate,
	"middlewares/endpoints.gotemplate": middlewaresEndpointsGotemplate,
	"middlewares/service.gotemplate": middlewaresServiceGotemplate,
	"svc/cli/handlers/handlers.gotemplate": svcCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate": svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate": svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate": svcEndpointsGotemplate,
	"svc/transport_grpc.gotemplate": svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate": svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate": &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": &bintree{handlersHooksGotemplate, map[string]*bintree{}},
	}},
	"middlewares": &bintree{nil, map[string]*bintree{
		"endpoints.gotemplate": &bintree{middlewaresEndpointsGotemplate, map[string]*bintree{}},
		"service.gotemplate": &bintree{middlewaresServiceGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"cli": &bintree{nil, map[string]*bintree{
			"handlers": &bintree{nil, map[string]*bintree{
				"handlers.gotemplate": &bintree{svcCliHandlersHandlersGotemplate, map[string]*bintree{}},
			}},
		}},
		"client": &bintree{nil, map[string]*bintree{
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

