// Code generated by go-bindata.
// sources:
// NAME-service/cmd/NAME/main.gotemplate
// NAME-service/cmd/NAME-server/main.gotemplate
// NAME-service/handlers/handlers.gotemplate
// NAME-service/handlers/hooks.gotemplate
// NAME-service/middlewares/endpoints.gotemplate
// NAME-service/middlewares/service.gotemplate
// NAME-service/svc/client/cli/handlers/handlers.gotemplate
// NAME-service/svc/client/grpc/client.gotemplate
// NAME-service/svc/client/http/client.gotemplate
// NAME-service/svc/endpoints.gotemplate
// NAME-service/svc/server/cli/cli.gotemplate
// NAME-service/svc/server/run.gotemplate
// NAME-service/svc/transport_grpc.gotemplate
// NAME-service/svc/transport_http.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x5f\x6f\xdc\x36\x12\x7f\x96\x3e\xc5\x44\xa8\x2f\x92\xab\x68\x9d\xe2\xee\x65\xd3\x7d\x48\xed\xf4\x2e\x40\xeb\x18\x5e\x37\x7d\x70\x8d\x03\x97\x1a\x49\xbc\x48\xa4\x42\x52\xbb\x36\x84\xfd\xee\x87\x21\xb9\xb2\x9c\xda\x71\x83\xe6\x21\x4b\x91\x33\xbf\x19\xce\x9f\xdf\xd0\x8b\x05\x9c\xaa\x12\xa1\x46\x89\x9a\x59\x2c\x61\x73\x07\x56\x0f\xc6\x14\x70\xf6\x01\xce\x3f\x5c\xc1\xbb\xb3\xf7\x57\x45\xbc\x58\xc0\x25\xea\x41\x4a\x21\x6b\x2f\x00\x3b\xd1\xb6\xa0\xb6\xa8\x77\x5a\x58\x04\xdb\x08\x03\x95\x68\xd1\x09\x7f\x44\x6d\x84\x92\x4b\x18\xc7\x22\xac\xf7\xfb\xd9\x01\x9c\x31\x8b\xf3\x53\xfa\xde\xef\xe3\xb8\x67\xfc\x13\xab\x11\x3a\x26\x64\x1c\x8b\xae\x57\xda\x42\x1a\x47\x09\x4a\xae\x4a\x21\xeb\xc5\xff\x8c\x92\x49\x1c\x25\x55\xcb\x6a\xf7\xdb\x59\xfa\x51\x86\xfe\x37\x56\x73\x25\xb7\x61\x29\x64\xed\x76\xad\xe8\x30\x89\xe3\x28\xa9\x55\xcb\x64\x5d\x28\x5d\x2f\x6e\x17\x12\xed\x82\x2b\x69\xf1\xd6\x01\xd4\x4a\xd5\x2d\x16\x33\x91\x5a\xf7\xdc\xab\x09\xdb\x0c\x9b\x82\xab\x6e\xd1\x7f\xaa\x17\xa8\xb5\xd2\x86\x4e\x16\x0b\xb8\xa2\x7b\xaf\x51\x6f\x05\xc7\x38\x4a\xc6\xb1\x78\xef\x9c\xbe\x60\xb6\x81\x57\xfb\x3d\x2c\xcc\x96\x2f\x78\x2b\x50\x5a\xfa\x59\x34\x4c\x96\x2d\x92\x7e\x44\x06\xfc\x09\x3c\xa3\xe8\x5d\x89\x1a\x6b\xfb\xbf\xa6\x40\x92\x49\x1c\xf5\x1b\x27\x78\xf1\xd3\x43\xd1\x24\xce\xe2\x78\xcb\x34\x45\xf6\xbf\xb0\x82\x10\xb6\xe2\x82\x69\x83\xef\xa5\x9d\x76\x29\x82\xc5\xba\x6f\x45\xd8\xa2\xe0\x17\xa7\xaa\xeb\x19\x0f\x3b\x3e\x18\xc5\xef\x9a\xf5\x95\xdf\xe9\x37\xc5\x25\xd6\xc2\x58\xd4\xe3\x58\x84\xd0\x14\xe7\xac\xc3\xfd\x9e\xbe\x50\x93\xf5\x6a\x90\xdc\x65\x39\xcd\x60\x8c\x23\x65\x8a\x77\xb7\xc2\xa6\x66\xd8\xf8\xcd\x2c\xde\xc7\xb1\xbd\xeb\x11\x1a\x64\x25\xea\x35\x6a\x81\x06\xae\x6f\xbc\x57\x01\x20\x6d\xe0\x78\x7e\x9e\xc1\x1a\x6d\xba\x65\x6d\x70\x3e\xf3\xfe\x91\x05\xae\xa4\xb1\xa0\xf1\xf3\x20\x34\x96\x17\x4c\x5b\x03\x42\x5a\x58\xc1\x0f\x71\xd4\xbb\xcf\xe5\x17\x77\x3e\x27\xa4\x1c\x92\x65\x92\x3f\x54\xcc\xe2\x48\x54\xd0\xa2\x4c\x9d\x62\x06\x2f\x56\x5f\x20\x8f\x71\x14\x69\xb4\x83\x96\x50\x75\xb6\x78\x47\x5e\x54\x69\xb2\x65\xed\x80\x70\xf4\x19\x38\x93\x52\x59\xd8\x20\x18\xb2\x04\x42\x82\xdd\xa9\x37\xd0\x0d\xc6\x02\x55\x25\x13\x12\x98\x85\x16\x99\xb1\xa0\x24\xc2\xcb\xe5\x4b\xe0\x0d\xd3\x8c\x5b\xd4\x49\x0e\x5b\xd6\x66\x71\xb4\x0f\xbe\x5f\xbf\xbe\x99\x65\xec\x4a\x8b\x6e\xdd\x33\x8e\xe9\xe1\x30\x8b\xa3\xe3\x06\x56\xc0\xfa\x1e\x65\x99\x1e\x37\x39\xb8\xa3\xa2\x28\xb2\xf8\xe0\xa9\x14\x2d\x45\xfd\xa9\xc8\x3a\xf0\x34\x0b\x56\xe8\x8a\xb3\x1b\xae\x7b\x2d\xa4\xad\xd2\xe4\x68\x9b\xe4\x53\x9a\xd2\xe3\xc6\x67\x72\xb1\x80\x90\x5a\xc0\x5b\x61\xac\x01\xab\x80\x71\x0b\xcc\x80\x6d\x10\xc8\xa6\x15\x4a\xb2\xd6\x15\x45\x0e\x9b\xc1\x7a\x8a\x09\x36\xf0\x56\x50\x60\x4a\x24\x4d\x82\x23\x2d\xc6\xed\x10\x34\x40\x48\x63\x91\x95\xa0\x2a\xe0\xac\x6d\xc9\xc3\x50\x54\x50\x0a\x8d\xdc\xb6\x77\x85\xef\x56\x61\xa0\xa4\x88\x92\x07\x6d\xab\x76\x07\xb4\x12\x2b\xd4\x58\x4e\xbe\x38\x1f\x37\xe8\xe0\xb0\xcc\xc1\x08\xc9\x11\x44\x35\xe1\xee\x1a\xd4\x87\xe3\xc9\x08\xa1\x55\x5a\x75\x81\x11\x03\x56\x0e\x92\x4c\xaa\xea\x09\x4b\x06\x2d\x0c\xbd\xa3\xdf\xb9\x1a\x81\xed\xd4\xd0\x96\xf7\x7e\x14\x3e\x3f\x53\xa3\xb8\x22\x1e\xe3\x88\xda\xd9\x27\xcc\x3c\x68\x99\x38\x22\xa6\x2c\x3e\x32\x9d\xfe\x23\x9c\xe7\x90\xf8\x55\x92\x43\xf2\x1f\xb7\x4a\x4d\x16\x6e\x6b\x88\x5d\xa8\x1c\x1b\x04\xab\x99\x34\x9e\x82\x2b\x45\xa1\x32\xc0\x7f\xbb\xfc\x05\x8c\xbd\x6b\x31\x4b\x32\x6f\x35\x8d\x23\xc7\x4c\x6f\xcb\x52\x83\xff\xb7\x02\x67\x34\x94\x4c\x42\xa7\x05\x2b\x4b\x67\xd0\x19\xbd\xba\xba\x00\xda\x40\x63\x28\x28\xac\x2c\xcd\x96\x13\xa0\x23\xc5\xa7\x91\xe8\x74\x42\x5a\xfe\xeb\xe4\x9f\x27\xb4\xa8\x2f\x2f\x4e\x21\x25\xd0\xec\x71\xd4\xec\x40\xd6\x48\x9b\xbc\x15\xd0\x6b\x34\x43\x87\x06\xa4\x02\xe3\x39\x0a\x4a\x61\x38\x4d\xb4\x3b\x30\x77\xc6\x62\x97\x03\x93\x25\xe0\x6d\x8f\xdc\x1a\x18\x0c\x85\xd6\x2a\x87\xd4\x6b\xb5\x15\x25\xfa\x6c\xba\xcc\x3f\x30\x2c\x0f\x98\xa1\xe4\xbc\xb5\x9e\x52\x4a\xe5\xa7\xb1\x6a\x91\xd3\xbc\x15\xd2\xc1\x11\x0c\x79\xb5\x11\x92\xe9\x3b\x67\xd6\xc5\xdf\x6f\x53\x46\xc2\x60\x34\x4b\xb7\xf9\x6a\xca\x8c\x0b\x86\x8b\x91\x71\x48\xa4\xba\x65\x5a\xa8\xc1\x1c\x54\x1d\xf3\xe9\x81\x5b\xa5\x0d\x6c\x94\x6d\xc2\x95\xa0\x51\xc6\x2e\x5d\x7a\x0f\xc4\x11\xc7\xd1\x38\x82\x66\xb2\x46\xf8\xae\x43\xdb\xe4\xf0\x1d\xd3\xb5\xa3\xc6\xe2\xd4\xc1\xbd\xd5\xb5\x29\x7e\x45\xdb\xd0\x02\xf6\xfb\x38\x8a\x2a\x33\x8e\x4e\x7a\xbf\x27\x41\x97\xb0\x73\xdc\xfd\xdc\xb2\x9a\xe8\x38\x19\xc7\x2b\xf5\x8b\xda\xa1\x86\x20\x95\xe4\x5e\x88\xba\xe8\x83\x74\xe4\x98\x91\x65\x94\x25\x3d\x02\xa6\xaa\x1a\xc7\xb9\xd1\xb7\x6d\x4b\x90\x86\x6c\x52\x42\x1d\xc4\x6f\x86\x9e\x0b\x2b\xd7\x31\x7e\x94\x44\x44\x47\x3f\x07\x3a\x52\xa6\x58\xdb\x12\xb5\xce\x21\xf1\xa2\xaa\x82\x23\xb3\xfc\x43\x26\x39\xf5\x31\x01\x5f\x9f\x10\x3d\x7a\xb8\x0b\x52\x3b\xc3\x8a\x0d\xad\x35\x69\xf6\x15\xb4\x3f\x64\xf2\xb5\xe3\xf5\xb0\xe1\xaa\xeb\x98\x2c\x9d\xb1\xcc\xdd\xe6\x1b\x02\xfb\xca\x45\xf6\x49\x78\x80\x23\xe3\xee\xf0\x48\x70\xbd\x2d\x94\xa5\x07\xd9\x4f\xc3\x2a\xdc\x37\x83\x1f\xe1\x07\x1f\xa9\x29\x82\xee\xaa\x81\x6a\x5f\x93\x4e\x08\xaf\x7b\x11\xa4\xd9\x2c\x27\x87\x66\xe9\x37\xc5\x38\xfe\x5b\xd1\x5c\x87\xc7\xa7\x7c\x14\xa1\xf6\x6d\xec\x86\xb0\x4f\x9a\xa8\xe0\x78\x22\x8b\x17\x2b\x48\x12\xe7\x49\x40\xcd\x49\x14\x56\x70\xff\xd0\xa1\x42\x4a\x27\x8d\x7c\x7e\x72\x6a\x6f\x3f\xd2\x3c\x35\x57\x6a\x4d\x43\x2d\xb0\x1b\x8d\x34\x9a\x8c\x80\xad\x71\x74\x7d\x3c\x51\xca\xbd\x3d\xae\xa4\xf4\xc6\x96\x2b\x70\xa4\x72\x26\x58\x9b\x4e\xa2\xb9\xdf\xfc\x5d\xd8\xe6\xbd\x34\xc8\x07\x8d\x69\x36\xdb\xbc\x12\x1d\xaa\xc1\xa6\xf4\xb4\x2c\xd6\xc8\x95\x2c\xc9\x28\x5d\x8f\x40\x5f\xac\x68\x98\x3a\x4b\x4f\xa6\xd0\x95\x3d\xec\x1a\xd1\x12\x85\x30\x37\xb1\x08\x9f\xfa\x55\xa2\xa3\xff\x25\xb8\x69\x8a\x9a\xda\x63\x9e\x1f\x4a\x6a\xe4\xa6\x88\x93\x2e\x4e\x5b\x65\x7c\x0e\xbf\x08\xe4\xfd\x13\xd3\x05\xd2\x5f\x7b\xb6\xf9\x97\x62\xf8\xb5\xa6\x72\xa9\x5d\x12\x8b\x6a\xec\x94\xc5\x89\x06\x4d\x8f\x5c\x54\x02\xcb\x50\xfd\xf3\xe2\x7a\x24\x4c\xcf\xe0\x1f\x6d\x5d\xb5\x87\x48\x3c\x2c\xd4\x50\xdd\xae\x5e\xa9\xbe\xd3\x8c\x2a\xfc\xf5\x04\x7b\x11\x5e\x26\xe7\x0a\x5e\x52\x8b\xa8\xf2\x25\x8d\xcf\xd0\x9e\x07\x2a\x2f\xdf\xb8\x37\x86\x90\x75\x91\x64\xcf\xf5\x06\xb7\xb7\x54\x38\xe1\xcf\x87\xe2\x27\xc6\x3f\xd5\x5a\x0d\xb2\x24\xd9\x4a\x69\x10\x74\x7c\xf2\x06\x04\xfc\xe8\x9c\x0b\x71\xcd\x68\xe7\xfb\x55\x68\x3f\x42\xb9\x07\xa1\xb2\x72\xb9\x48\xb9\xbd\xcd\x0f\xb3\xfc\x5a\xdc\xcc\xd6\xdf\xbb\x97\x1c\x79\x60\x76\xc2\xf2\x06\x66\x97\xbe\x3e\xb9\x21\xd4\x6f\x61\x19\xc7\x31\x9c\x19\x7c\x8c\x46\x96\xae\x78\xef\xa9\x3d\x70\xc1\xdc\xe2\xeb\xe5\x0d\xf5\x34\xd1\x8d\xb3\x53\xfc\xca\xb4\x69\xd8\x44\xd3\xbe\x68\x3f\x0f\x68\xec\xd4\x6c\x87\xbf\x7f\x8a\x09\x38\x3d\x68\x9f\xb2\xb6\xf5\x6e\xb9\x72\x7f\xa4\x97\x9e\x69\xa6\xc3\xc3\xef\xcf\x36\xbe\xac\xa0\x07\xcd\x14\x79\x4f\xb7\x93\x8f\x87\xe1\x7d\xef\xa2\x4b\x49\xb8\xca\xdf\x74\xee\x4f\xe0\xcf\xf9\x16\xcd\xca\xb8\x95\x69\xe2\x13\x09\x97\xde\x1b\x2c\x61\x27\x6c\xb3\x74\x45\xfb\x40\xf0\x89\xb0\x3e\xc0\xf2\x54\x0d\x97\x68\x7a\x25\xcb\xa7\xb1\xb6\xb3\xf9\x4c\xc4\x43\xf3\x71\xf9\x5c\x97\x84\xaf\x93\x78\x1f\xff\x3f\x00\x00\xff\xff\x15\x07\xfa\xb8\x6a\x10\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 4202, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x51\x6b\xdc\x30\x0c\xc7\x9f\xad\x4f\x21\xfc\x94\x40\x6b\xbf\x0f\xf6\x94\x1b\xa3\xec\x68\x4b\x9b\x6e\xcf\xbe\x44\x71\x4c\x1d\xfb\xb0\x95\xdc\x4a\xc8\x77\x1f\x49\x8e\x71\x83\xc1\xf6\x60\x24\x4b\x3f\xa4\xbf\xfe\x5a\x63\x15\x5b\x42\x4b\x81\x92\x61\x6a\xf1\xf4\x81\x9c\xc6\x9c\x15\x1e\x9e\xf0\xf1\xa9\xc6\x2f\x87\x87\x5a\x81\xd6\xf8\x42\x69\x0c\xc1\x05\xbb\x03\x78\x71\xde\x63\x9c\x28\x5d\x92\x63\x42\xee\x5d\xc6\xce\x79\xda\xe0\xef\x94\xb2\x8b\xe1\x13\xce\xb3\xba\xe6\xcb\x72\xd3\xc0\x83\x61\xba\xed\xae\xff\x65\x01\x38\x9b\xe6\xdd\x58\xc2\xc1\xb8\x00\xe0\x86\x73\x4c\x8c\x05\x08\xd9\x79\x63\x25\x08\x19\xb3\x04\x10\x5a\xe3\xd7\x88\xdf\x1c\x83\x90\xd6\x71\x3f\x9e\x54\x13\x07\x6d\xe3\xfd\xbb\x63\xbd\x3e\x1f\xed\x15\xac\x57\x65\xaf\x94\x26\xd7\x10\x08\x39\xcf\xea\x61\x1b\xfb\x6c\xb8\xc7\xfb\x65\x41\x9d\xa7\x46\x67\x4a\x13\x25\xf9\x2f\x40\x37\xde\x49\x28\x01\xba\x31\x34\x9b\xca\xa2\xc4\x79\xdb\xf3\x76\x6e\x0d\x13\x9a\xb6\x4d\x94\x33\x65\x74\x1d\x72\x4f\x1f\xd8\x9b\x89\xf0\x44\x14\x7e\xdb\xc5\x14\x56\xa7\xd7\x9b\x32\x88\x35\xa8\x67\x93\x32\x15\xe5\x2e\xf9\x18\xad\x5d\x9d\x6e\xe3\xba\x41\x81\x98\x4c\x42\x1f\xad\xa5\x2d\xa8\xe3\x96\x82\x98\x41\x88\x6b\xf9\xf3\xd6\x78\xa4\xcb\x31\xda\x6e\xe0\x9d\x28\x62\x56\xaf\xdc\xc6\x91\xcb\xbf\x90\x55\x0c\x4c\x3f\xb9\xd8\xeb\xa5\xfa\xe1\xb8\x2f\x24\x67\x79\xb7\x11\x07\xea\xcc\xe8\xb9\x76\x03\x65\x36\xc3\xf9\xad\xae\xfe\x7f\x4a\x63\xbc\xa7\xf4\xe7\xa4\x6a\xab\x95\x20\x16\x10\xbb\x9b\xea\x65\x0c\x45\xe3\x9d\xaa\x62\xe8\x9c\xbd\xbb\xde\x58\xc2\x02\xbf\x02\x00\x00\xff\xff\xd9\x1b\xcd\xc8\x9b\x02\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 667, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresEndpointsGotemplate,
		"middlewares/endpoints.gotemplate",
	)
}

func middlewaresEndpointsGotemplate() (*asset, error) {
	bytes, err := middlewaresEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/endpoints.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresServiceGotemplate,
		"middlewares/service.gotemplate",
	)
}

func middlewaresServiceGotemplate() (*asset, error) {
	bytes, err := middlewaresServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/service.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x6e\xdb\x30\x0c\x86\xcf\xd6\x53\x10\x85\x51\xc4\x43\x2b\xdf\x03\xec\xd0\x36\x5d\x91\xc3\xda\x22\x0b\x76\x57\x62\xc6\x16\x66\x53\x9e\x44\x37\x2b\x04\xbd\xfb\x20\x45\x4d\xd2\x5d\xb2\x8b\x4d\xf1\xff\xf4\x8b\x22\x55\xd7\xf0\x60\x1a\x84\x16\x09\xad\x62\x6c\x60\xf3\x0e\x6c\x27\xe7\x24\x2c\x5e\xe0\xf9\x65\x0d\x8f\x8b\xe5\x5a\x8a\xba\x86\x15\xda\x89\x48\x53\x7b\x00\x60\xaf\xfb\x1e\xcc\x1b\xda\xbd\xd5\x8c\xc0\x9d\x76\xb0\xd3\x3d\x26\xf8\x27\x5a\xa7\x0d\xcd\xc1\x7b\x99\xe3\x10\xce\x04\x58\x28\xc6\x73\x35\xae\x43\x10\x62\x54\xdb\x5f\xaa\x45\xe8\x14\x35\x3d\x5a\x27\x84\x1e\x46\x63\x19\x66\xa2\x18\x37\x70\xe5\x7d\x29\x5f\xef\x97\x29\xf7\xaa\xb8\x83\xdb\x10\xae\x44\x25\x84\xf7\xb0\xd7\xdc\x41\xc9\x08\xf3\xaf\x20\x43\x10\x85\xf7\x56\x51\x8b\x50\xea\x98\x2a\x19\xe5\x0f\xb4\x6f\x7a\x8b\xf2\x3b\x72\x67\x1a\x17\xa1\xba\x06\xef\x4b\x2d\x9f\xd5\x80\x21\x80\x1e\xc6\x1e\x07\x24\x76\xf0\x01\x8b\x62\x37\xd1\xf6\x9c\x9a\x79\x9f\x0e\xd3\xd4\xe0\x9f\x64\xfc\xd0\x6b\x24\xbe\xb3\xad\x4b\xde\x31\x80\x23\xee\xfd\x93\x89\x11\xc8\x6f\x13\x6d\x59\x1b\x8a\x7a\xcc\x23\x35\x21\x54\x30\xfb\x32\x6e\xe4\x91\x2a\xb5\x5c\xe1\xef\x09\x1d\xaf\xdf\x47\xcc\x1e\x37\x80\xd6\x1a\x5b\x79\x51\x14\xf6\xa0\xc6\x4b\x5d\xdc\x17\x79\xef\x6f\x73\x73\x06\xe4\x2e\x6e\xfb\xaf\xc2\x63\x6f\x45\x51\x9c\xda\x38\x2a\xab\x86\xd4\xca\xe8\x23\x13\x9b\x99\x74\x86\xde\x81\xa2\x06\x66\xe9\x43\x86\xf3\x0e\xb9\x74\xf7\xca\x61\x2c\xaa\xfa\x94\x5f\xe1\x88\xf1\xd5\x55\x9f\xd3\x8f\x34\x0d\x55\xb6\x2d\x4e\xb7\x3b\x88\x79\x4c\x73\xb8\xfe\x57\x79\x32\x77\xb6\x0d\xe1\xe6\x58\x0e\xf6\x0e\xe1\xa2\xcf\x65\x1b\x6a\x4e\x9d\x38\x2d\xb2\x94\xe2\x90\x86\xc2\x93\x25\xb8\xce\xc3\xb9\x01\xd2\xbd\x28\xd2\x2b\x3c\x60\x1f\xff\xbf\x01\x00\x00\xff\xff\x17\x17\xce\xeb\x75\x03\x00\x00")

func svcClientCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientCliHandlersHandlersGotemplate,
		"svc/client/cli/handlers/handlers.gotemplate",
	)
}

func svcClientCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcClientCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/cli/handlers/handlers.gotemplate", size: 885, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xdb\xba\x12\x5d\x4b\xbf\x62\x9e\x11\x3c\x48\x81\x42\xed\xf3\xe0\x4d\x9d\xbe\xa2\x17\xb7\xa9\x91\x06\xbd\x8b\xa2\x28\x18\x6a\x24\x13\x96\x49\x95\xa4\x9d\x18\x82\xfe\xfb\xc5\x90\x94\x23\xbb\x8e\xdb\x45\x10\x8b\x73\x38\x1f\xe7\x0c\x39\x2c\x4b\x58\xe8\x0a\xa1\x41\x85\x86\x3b\xac\xe0\x69\x0f\xce\x6c\xad\x65\x70\xf7\x19\xee\x3f\x3f\xc2\xfb\xbb\x8f\x8f\x2c\x2d\x4b\x78\x40\xb3\x55\x4a\xaa\x26\x00\xe0\x59\xb6\x2d\xe8\x1d\x9a\x67\x23\x1d\x82\x5b\x49\x0b\xb5\x6c\xd1\x83\xbf\xa2\xb1\x52\xab\x5b\xe8\x7b\x16\x7f\x0f\xc3\xc4\x00\x77\xdc\xe1\xd4\x4a\xdf\xc3\x90\x12\x64\xc9\xc5\x9a\x37\x08\x8d\xe9\x04\x74\x46\xef\x64\x85\x16\x38\x34\x0f\xcb\x05\x88\x56\xa2\x72\x50\x6b\x03\x6e\x85\xe4\xe0\x0b\x9a\x9d\x14\xc8\xee\xf9\x06\x87\x01\x6c\xfc\x4c\xbb\x89\x9b\x34\x95\x9b\x4e\x1b\x07\x59\x9a\xcc\x1a\xdd\x72\xd5\x30\x6d\x9a\xf2\xa5\x54\xe8\x4a\xa1\x95\xc3\x17\x37\xf3\x36\xdd\xb4\xc8\x26\x10\xda\xfe\xb6\xa5\xdc\xa0\xe3\x15\x77\xdc\x43\xa4\x5b\x6d\x9f\x98\xd0\x9b\xb2\x5b\x37\x25\x1a\xa3\x8d\x9d\xa5\xc7\x96\x46\xdf\xac\xa5\x2b\xe9\x0f\x55\xd5\x69\xa9\x28\x30\xf9\x72\x86\x2b\xeb\xb3\x7c\x03\x7f\x00\xc4\xa4\xd2\xa4\x2c\xe1\x91\x78\x8f\x1c\xa4\xc9\xac\xef\xd9\x47\x5f\xea\x92\xbb\x15\xdc\x0c\x03\x94\x76\x47\x05\x74\x4f\x40\xc6\xe5\xbb\x63\xf3\x2c\xcd\x3d\xe9\xf7\xf8\x0c\x06\xdd\xd6\x28\x0b\x5c\x8d\x2c\xc2\x13\x17\xeb\xd0\x15\xc7\xfc\x0b\xad\x14\x0a\x27\xb5\x62\xf0\xd1\x81\xb4\xa4\x06\xf9\x31\x68\x3b\xad\xac\x7c\x92\xad\x74\x7b\xd0\xb5\x97\x49\xf0\xb6\x45\x03\x4e\x43\x25\x79\x5b\x00\x57\x15\xb4\xdc\xa1\x01\xd1\x6a\x8b\x45\x00\xbd\xfa\x4c\xeb\xad\x12\x94\x53\x46\x8b\x70\x4d\xf5\xb2\x85\x0f\xbd\xd0\x4a\x15\xa0\x3b\xc2\x59\x60\x2c\x2e\x7f\xf6\x0b\x39\x64\xdd\x13\xeb\xfb\x0f\x9a\xba\x01\x4e\x7a\x83\xbe\xd0\x14\xe0\x85\xc9\xa1\x4f\x93\x1d\x37\x20\x44\x2c\x6a\xa1\x55\x2d\x9b\x34\x4d\xa8\xb9\x7e\x14\x50\xc3\xed\x1c\x0c\x57\x0d\x1e\xc2\xf5\x69\x92\xa0\x31\x64\xa8\xb3\xff\x0a\x91\xa7\x49\x22\x6b\x72\x08\xff\x99\x83\x92\xad\x47\x24\x81\x48\xfa\x8e\xc1\x2c\xfb\xc7\xf0\x2e\x43\x63\x0a\x98\x09\xae\x94\x76\xc0\xbb\xae\xdd\x47\xcf\x33\x72\x34\xa4\xc9\x90\xa6\x89\x98\xd4\x63\x29\xd2\xb7\xef\x47\xdd\x71\x54\x30\x85\x3b\x67\x7d\x87\xb5\x36\x98\x51\x32\xb1\xbb\xbf\xf2\x76\x8b\xf6\x51\x7f\x78\x58\x2e\x3e\xc5\xa6\xcd\x84\x60\x2b\xe4\x15\x1a\x9b\xe7\x05\x85\x4f\xfa\xfe\x06\x9e\xa5\x5b\xc1\x95\x43\x0a\xce\x86\x21\x4d\x26\xab\xdd\xba\xf1\xd4\xde\xce\x09\xc1\xe2\x59\x0d\xfc\x52\x34\x42\x06\xce\xae\xe4\x08\x1a\x55\xf8\x84\x6e\xa5\x2b\x1b\x80\x9e\xfb\xbe\x7f\xd4\x7f\xeb\x67\x34\x70\x25\xa3\x48\xef\xe3\xa1\x80\xf1\x74\xb0\x71\xc5\xef\xf2\xfc\x52\x98\xb7\x37\xce\xe1\x98\x91\x7b\x7c\x0e\xa4\x64\x61\x2f\x31\xa2\x8a\xf8\x7b\xd6\xf7\x63\x4d\xc3\xc0\xfa\x7e\x9a\x6f\x58\x9c\x4d\xa1\xf2\x74\xf1\xbd\x12\xba\x42\x22\x75\x62\x7d\xc0\x9f\x5b\xb4\x6e\xc4\xdc\xe1\x59\x8c\x3f\x28\x38\x82\xa6\x7d\x7b\x25\xd9\x68\x7e\xdc\x77\x63\x22\xfd\x30\x62\x8f\x5a\x84\x31\x16\xd7\xf3\x03\x55\x59\xee\x57\xa2\x22\xa8\xaa\xa8\x62\xfc\x35\xfe\x48\xc7\x4e\xb5\x3b\x71\xd8\x6b\x7b\x02\x4c\x35\x3c\x15\x90\xee\x0d\xef\xee\x17\xee\x6f\x01\xe0\x92\xa8\xc5\x6b\xec\x64\x28\xe8\x80\xa4\xe1\xce\x27\x72\x20\xa8\x04\x81\xae\xf4\x72\x0e\x61\x9a\x5c\x64\x96\x6e\x25\x0e\xc7\x97\x26\x0b\x3b\x46\xc8\xff\xe9\x9a\x71\x2b\xee\x2f\xb4\x1d\x1a\x67\x81\x93\x5f\x7f\xd5\x9d\xa9\x03\x0c\xd2\xa1\x75\x1a\x38\x6c\x2d\x9a\x9b\x4a\x6f\xb8\x54\x6f\x40\x43\x0c\x06\x4b\x23\x37\xdc\xc8\x76\x4f\x7b\xea\x6d\x0b\x52\x01\x8f\x97\x4e\xbc\xea\x2e\x16\x92\xfd\x80\x78\x88\xd9\x22\xfc\x2f\x7c\x8b\x3f\xf8\x64\xa4\x72\x68\x6a\x2e\xb0\x1f\x72\xc8\x26\x5f\xd3\x8b\x2e\xe4\x7d\x3b\x7f\xdd\xc7\xb2\xeb\xdf\xb7\x5c\x7e\xe8\x10\xef\x60\x54\xec\xd0\x3f\x27\xca\x85\xc3\xf0\x47\xca\x5d\x3a\x37\x67\x85\x0b\x1b\x22\xe2\x2d\xdd\x7e\xaf\x49\x08\xe0\x05\xbc\x20\xb2\x47\xfd\x91\x70\x97\xea\x38\xa7\xdb\x98\xc1\x1f\xaa\xf6\xd3\xcf\xa0\x98\xcf\x19\xc5\xbc\xe1\x0d\xc1\x7e\xfe\x22\x57\xea\xf6\x1d\x1e\x4d\x3b\xb0\xce\x6c\x85\xa3\x60\x71\x10\xc0\xb7\xef\xd6\x19\xa9\x9a\x78\x32\xa7\xd3\x26\x08\x43\x75\xfb\x2f\x2f\xc0\x46\x57\xb2\x96\x68\xc3\x08\x3f\xbc\x0e\x68\x92\xfa\x68\x47\xfb\x69\x6b\x76\x3d\x4d\x20\x0f\xe5\xa6\x81\xcd\x85\x7b\x19\xe7\xd4\x17\x54\x55\xb6\xc6\xbd\x9f\xf1\x21\xa3\xfc\xd8\x59\x7f\xa8\xd5\xbb\xd5\x70\xce\xb1\x1f\xc8\x7a\x9c\x72\x30\x07\x72\x99\x4e\x47\x34\x8d\xbd\x21\xc6\xbf\x34\x2b\x7d\x2e\x23\x39\xf9\xc9\x8c\x99\xf6\xe5\x49\x5e\xc2\xbd\xfc\xda\x06\x9b\x0a\xae\xc7\xa7\x23\xfb\x74\x97\x9f\x22\x7c\xda\x34\x21\x3b\x2e\xa7\x9a\x24\xe3\xe3\x64\xfd\xfa\x38\xf1\x89\xf9\xb9\x28\x6b\xd8\x15\xa0\xbd\x4d\xb8\x17\xe6\xeb\xc8\xd6\x39\xcb\x62\xd6\xff\x23\x63\x18\xa1\xc1\xf1\x9c\x9e\x21\xc4\xb4\xff\x2c\x60\x5d\xc0\xce\xcf\x8e\xc1\x3f\x48\xc2\xf3\x26\x40\xa7\x0f\x9c\xeb\x4d\x05\x73\x38\x14\xf0\x97\x96\x2a\xbb\xde\x54\xc5\xeb\xd2\x92\xf6\x04\xaf\x8c\xb1\x3c\x1f\xdd\x45\x66\x84\x7b\x09\xbc\xff\x1b\x00\x00\xff\xff\x2e\x97\xa0\xc8\x82\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3202, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x4d\x6f\xdc\x38\x12\x3d\xb7\x7e\x45\xa5\xe1\x85\xbb\x03\x99\x7d\x77\xe0\xc3\x6e\xe2\xdd\x35\xb0\xf9\x40\xec\x9d\x39\x04\x41\xc0\x96\x4a\x12\x61\x8a\x64\x48\xaa\x3f\x46\xd0\x7f\x1f\x14\x29\xa9\xd5\x69\x25\x13\xcc\x71\x30\x07\xc3\x36\x3f\x1e\xab\xde\xab\x7a\xa4\x36\x1b\x78\xad\x73\x84\x12\x15\x5a\xee\x31\x87\xed\x11\xbc\x6d\x9c\x63\xf0\xe6\x3d\xbc\x7b\xff\x04\xf7\x6f\x1e\x9e\x58\xb2\xd9\xc0\x47\xb4\x8d\x52\x42\x95\x71\x01\xec\x85\x94\xa0\x77\x68\xf7\x56\x78\x04\x5f\x09\x07\x85\x90\x18\x16\xff\x82\xd6\x09\xad\x6e\xa1\x6d\x59\xff\x77\xd7\x4d\x26\xe0\x0d\xf7\x38\x9d\xa5\xff\xbb\x2e\x49\x0c\xcf\x9e\x79\x89\xe0\x76\x59\x42\xeb\x9f\x06\x58\xc8\xb4\xf2\x5c\x28\x07\x35\xfa\x4a\xe7\x0e\xbc\x86\x9a\x3f\x23\x08\x95\x8b\x9d\xc8\x1b\x2e\x01\x55\x6e\xb4\x50\xde\x41\x61\x75\x0d\x0e\xed\x4e\x64\xe8\x52\x42\xb2\xf8\xb5\x41\xe7\x81\xab\x1c\x2c\x3a\xa3\x95\x43\xf0\x47\x83\x01\x89\x96\x52\x12\xda\xe1\x09\x25\x05\xee\x60\x8f\x52\xd2\x6f\x54\x99\xce\xd1\x3a\x02\x20\xbc\x1c\xfb\xff\x0b\x6d\xfb\x8d\x01\x2d\x0d\x03\x9c\xc8\x29\x40\x37\x16\x5c\x63\x8c\xb6\x44\xae\xb7\x5c\x39\xfa\x9b\x8e\x13\x5c\x8a\xdf\xb8\x17\x5a\x11\x5a\xa1\x6d\xcd\xbd\x63\x49\x22\xea\xb0\x62\x95\x2c\x96\x45\xed\x97\xc9\x62\x59\x6a\xc9\x55\xc9\xb4\x2d\x37\x87\x8d\x42\xbf\x21\x2a\xf0\xe0\x97\x09\x4d\x0a\x5f\x35\x5b\x96\xe9\x7a\x53\xea\x9b\x67\xe1\x37\xf4\x33\xa4\x40\x4b\xcc\x16\x96\x6d\xcb\x3e\xfc\xeb\x21\x20\x7f\xe0\xbe\x82\x9b\xae\x5b\x26\xeb\xc0\xf0\xfd\xc8\x59\xa6\xa5\xc4\xcc\xbb\x21\x78\x5f\x4d\xb8\x00\x5f\x71\x0f\x99\xae\x0d\x65\xca\x15\xf0\x3c\x1f\x08\x66\xf0\xe0\xaf\x1d\x81\xd5\xc8\x95\x27\x3e\xb7\x08\x8d\xc3\x9c\x88\xe3\x50\xa1\x34\x68\xc1\x79\xdb\x64\x3e\xa5\xe9\xfe\xa8\xf9\x93\x84\xf2\x1a\x38\xc1\x39\xa1\x4a\x89\x60\xb8\xe5\x35\x7a\xb4\x54\x5b\x34\xfe\xa0\x80\x47\xc9\x6c\x0a\xc2\x5f\x3b\x3a\xac\x68\x64\xa0\xbe\x68\x54\x46\xb4\xf6\x21\x2b\x24\xe6\x35\x68\x13\x4a\x1c\x34\xed\x35\x68\x6f\x86\x03\x09\x70\xcb\x9d\x70\x0c\xfe\xad\x2d\xe0\x81\xd7\x46\x62\x0a\x47\xdd\x40\x2d\xca\xca\x83\xe1\x8e\x64\x9f\x50\x45\x01\x8e\x07\xc5\x73\x8c\xd5\x79\x93\x61\xa0\x81\x2b\xa8\xbc\x37\xec\xbf\x5c\xe5\x92\x62\xdc\x0b\x5f\x01\xf2\xac\xea\xab\x17\x56\xc3\xe9\x6b\xd8\x0b\x8b\x39\x34\x26\x82\x3a\x83\x99\x28\x44\x06\x86\xfb\x8a\xc1\xea\x21\xc4\x27\x1c\xe1\x6f\xf9\x56\x1e\x81\x43\x2d\x9c\x8f\x95\x0f\x39\x3a\x51\x2a\xda\x2a\xd4\x4e\x3f\x63\xa0\xf2\x31\xca\x32\x76\x4a\x08\x11\xcf\xc5\x8e\x62\x10\xc4\xc0\x24\x5b\x4f\xd9\xcd\xa4\x40\xe5\xcf\xd9\x9d\x08\x77\x6a\x3a\x79\xa4\xd6\x8c\x70\x98\xff\x48\x46\x6a\x8f\xc8\x95\x20\x86\x6b\x8c\x65\x75\x8a\x57\x28\x8f\xb6\xe0\x54\x50\xf3\x4a\x10\xd8\x78\xd8\x7c\xe3\x37\x2e\x5a\x54\xdf\x69\x9b\xa0\xc3\x3b\xdc\xbf\xee\xf3\xc9\x74\xbd\x15\x2a\xf0\x54\xf7\x21\x4e\x84\x4d\x7b\x7b\xf0\x8d\x55\x20\x42\x25\x53\x80\x19\x97\x12\x6d\x2c\xe6\x3e\x58\x96\x84\x74\x2e\x08\x6d\x93\xb6\xb5\x5c\x95\x08\x57\x02\x6e\xef\x80\x0d\xeb\xdf\x46\x31\xba\x2e\x59\xb4\xed\x95\x60\xef\x78\x8d\x5d\x37\xec\x07\x80\x31\x09\x36\x0c\x26\x6d\x7b\x43\xa3\x5d\x97\x74\xe7\xbd\xfa\x13\x87\x50\x75\xc2\x6a\x12\xe1\x1a\x26\xe7\xae\x32\x7f\x80\xde\x47\xd8\xeb\xf8\x3b\xa5\x6a\x78\x69\xb6\xac\x6d\xff\xa3\x69\x19\x5c\x09\xf6\x31\xda\xe6\xd3\xd1\x60\xbf\x75\x0d\xab\xcb\x45\xd1\x4f\x27\xab\x52\x40\x6b\xb5\x5d\x43\x9b\x2c\x16\x83\xdf\x86\x41\x0a\x18\xd9\x0c\x07\x14\x13\xc5\xb0\x4e\x16\x0b\x51\x84\xa5\x2f\xee\x40\x09\x19\x30\x16\xbd\x2a\x4a\xc8\x00\x93\x2c\x16\x5d\x32\x8e\x0e\x27\xb0\x9f\x89\x6d\x9d\x12\x4a\xb2\xe8\x92\xb6\x8d\xf4\x12\xb9\x6f\xa9\xa5\xa6\x0c\x87\xa6\xbd\xf2\x18\x18\x8e\xba\x4d\x49\xbf\xf2\x38\xc7\x7b\x24\x9e\xc0\xe6\x52\x74\x10\xc2\x9b\xee\x8d\x2b\x1e\x43\x0f\xae\x2f\x8b\xe0\x2c\x79\xc2\x9e\x97\x6e\xb8\xde\xc6\x1e\x6a\x49\xa8\xf1\xa2\x9b\x0c\x47\x11\x26\xea\x10\xfa\x57\xca\xa8\xc7\x98\xe3\xf0\xa2\x08\xc2\xbe\xdd\x28\xa8\x63\xdf\x14\x57\x88\x28\xae\x9a\xd1\x72\x4e\xcd\xa8\xe7\x38\xb3\xeb\x45\x8a\xc3\x81\xfd\xa8\xd5\x54\xb3\x5f\x2d\x37\xff\x94\xf2\xfe\x90\xa1\xf1\xb0\xb7\xdc\xb8\x68\xb3\x23\x7b\x85\x40\x99\xd3\x1d\xd3\xf7\xe7\xa9\x61\x83\xbc\xc1\x9f\x66\x2e\x4e\xf6\x56\xe4\xb9\xc4\x3d\xb7\xf1\x41\xf3\x7f\x37\x3c\x71\xe8\x72\x37\x46\x1e\xc9\x66\xc8\x3a\x3d\x81\xd7\xe3\xea\x70\x37\xe0\x0e\xed\x71\x94\x92\xda\x8a\x5c\x64\xb8\x2d\x09\xef\xbd\xa1\x9b\x83\xdc\x33\x9d\x98\x57\xc6\x15\xdd\x9c\x74\xdf\x60\x4e\xdb\xb6\x47\x50\xa4\x41\xbc\x51\xf1\x90\xc9\x26\xc7\x3c\xbe\x6e\xb6\x48\x21\x50\xce\x06\x73\x76\xc1\xc6\xea\x14\x53\x0a\xcb\x47\xcf\x7d\xe3\x96\x29\x2c\x3f\x08\x55\x2e\xd7\xc9\x60\x0f\x2f\x27\xfe\xf0\xbd\xfd\x30\xc3\x4a\x7a\x8a\x86\x31\xe6\xbc\x15\xaa\x0c\xe5\x24\x54\x3f\x7c\x7b\x07\x35\x37\x9f\xe2\xd4\xe7\x48\x7f\xdb\x91\xfc\x64\x6b\x7f\x64\x5f\x8b\xc5\x72\x52\x51\xcb\x5b\x18\x01\xba\xb4\x87\x88\x65\xb0\xe8\x92\x64\x41\xaa\x7c\xa1\x90\x42\x19\x07\xe8\x31\xbc\x36\xda\xc9\x97\x14\xf4\x33\x4d\x0f\x01\x7e\xc2\xc3\xe7\x57\xf0\x42\x3f\xc7\x92\x34\x5c\x89\x6c\x55\xd4\x9e\x3d\x1a\x2b\x94\x2f\x56\xcb\xfb\x01\x62\x54\xf2\xfa\x1f\xee\x1a\x72\x8d\x0e\x94\xf6\x80\x07\xe1\xfc\x2b\x70\x88\xd3\x02\x18\x6b\xc8\xb1\x52\x2f\x29\xa8\xf5\xba\x37\xab\x1c\x25\x7a\x5c\x0d\x11\x84\xb9\x53\x02\x42\x65\x29\x7c\x39\x65\x30\x32\xf9\xf3\x9c\x89\x82\x76\xc1\xdd\x1d\x9c\xb1\xd7\x37\xdd\xac\xeb\xc2\xdd\x24\xf8\xd5\xec\x92\xf5\xd0\x85\x67\xac\xc7\x0e\xfc\x1f\xdf\xa2\xc4\xfc\x54\x18\xf1\xc3\xa0\x44\x3f\x94\xf1\xf4\x71\x17\xab\x79\x5f\xa1\x1a\x67\xf5\xa4\x72\x7b\xb0\x58\x80\x69\x6c\xb8\xbe\x27\x9a\xb8\x18\xe2\xd7\x06\x8f\x9f\x2c\x22\xa3\x37\x8e\x15\x59\x7c\x7c\x4e\x62\xa8\x44\x56\x85\xad\x0e\xd5\x5c\x08\xfd\xc5\xde\xef\x1e\x9e\x35\xda\xf6\xd7\xfa\x65\x56\xc1\x79\x63\x2d\xa7\x97\x26\x3d\xe3\xdb\xc9\xf7\xf2\xfa\xd3\x36\x75\x11\x54\xda\xe7\x19\x18\xb7\x98\xa1\xd8\xc5\x07\x60\x48\xf1\x9b\x77\x35\x83\x47\xc4\x11\x66\x82\x12\x26\x86\x77\xe9\x68\x01\x14\x28\x15\x65\x8e\x9e\x0b\x19\xde\x90\x43\x47\x85\xef\x95\xfe\xed\xcb\xa5\xf0\x47\xf6\x23\x37\x39\xcb\x7d\x6a\x2a\x33\xe9\xfc\x6d\x29\x7f\x41\x4b\x39\xdb\x96\xce\x3f\xfd\xbe\xe7\x30\xbf\x07\x00\x00\xff\xff\x18\x54\xbc\xfc\xa1\x10\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4257, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerCliCliGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xcd\x6e\xdb\x3a\x10\x85\xd7\xe2\x53\xcc\x25\x70\x0b\x09\x70\xa9\x2c\x9a\x2e\x5c\x78\x91\x46\x6e\x9a\x4d\x2c\x38\x8e\xb7\x05\x2d\x8d\xe4\x41\x65\x52\x20\x69\x05\xa9\xa1\x77\x2f\x48\x59\x85\x5a\xa7\x48\x57\x1a\x62\xce\x7c\xf3\x73\x94\xa6\x70\xab\x4b\x84\x1a\x15\x1a\xe9\xb0\x84\xdd\x0b\x38\x73\xb4\x56\x40\xb6\x82\x87\xd5\x06\x96\xd9\xfd\x46\xb0\x34\x85\x35\x9a\xa3\x52\xa4\xea\x41\x00\xcf\xd4\x34\xa0\x3b\x34\xcf\x86\x1c\x82\xdb\x93\x85\x8a\x1a\x0c\xe2\x2d\x1a\x4b\x5a\xcd\xe1\x74\x12\xe7\xb8\xef\x27\x09\xc8\xa4\xc3\x69\xd6\xbf\xfb\x9e\xb1\x56\x16\xdf\x65\x8d\x50\x34\xc4\x18\x1d\x5a\x6d\x1c\xc4\x2c\xe2\xd5\xc1\x71\xff\x69\x64\xed\xbf\xda\x72\xc6\x22\x7e\x3a\x89\xfb\xa0\xc9\xa5\xdb\xc3\xfb\xbe\x87\xd4\x76\x45\x6a\xd1\x74\x68\x38\x4b\x18\x0b\x1b\xaa\x8a\xea\x61\xde\x1d\x42\xab\xdb\x63\x33\xee\xba\x7c\xd8\x42\x27\x8d\x05\xad\x80\x14\x39\x6a\xe8\x87\x74\xa4\x95\x2f\xf4\xcd\x2e\xf6\xfc\x55\x41\x6a\x24\x6b\x15\xa4\x22\x97\xc6\x62\x9c\xb0\x4e\x9a\x31\x35\x4c\x22\x86\x17\x63\xd5\x51\x15\xa1\x4f\x9c\xc0\x89\x45\xa1\xea\xd1\x19\x52\xf5\x56\x9a\xf8\xdd\x20\x13\x19\xee\x8e\xf5\x4d\x59\x9a\x19\xf0\xd2\xc7\x42\x96\xa5\xe1\x33\xe0\xf3\xeb\xab\x8f\x57\x3e\x08\x12\x90\xaa\x84\x03\x3a\x43\x85\x85\x86\xac\x43\x05\x5e\x89\xd6\xf2\xe4\xaf\xf4\xaf\x9b\x4d\x7e\x86\xef\x9d\x6b\xa7\xec\xeb\xc0\xf6\x82\x7f\xc7\xdd\xad\xf3\xdb\x33\xae\x36\x6d\x31\xc5\x7d\x08\xb8\x7a\x9d\xdf\x42\xec\xa1\xc9\x25\x95\x45\x69\x0a\x4f\x16\x01\x55\x47\x46\xab\x03\x2a\xe7\xcf\x4b\x72\xd7\xa0\x9d\x01\x55\x60\xd1\x09\xf8\x12\xac\xd8\xcb\x0e\xa1\x35\xa4\x0d\xb9\x97\xe0\x09\x2c\x55\x17\xec\x10\x2c\xa2\x2a\x80\x61\xbe\x00\x6d\xc5\x1d\x3a\x54\x5d\xcc\xb3\xe5\xe7\xa7\xbb\x6f\x37\x59\xb6\xe6\xc9\xa7\x41\xf0\xdf\x02\x38\xf7\xf7\x8f\xfe\x3c\x38\x2c\x82\x82\x45\x7d\xc0\x85\xbf\xef\x77\x5c\xbe\x5a\x6f\x3c\x28\xa4\x2e\x40\xe3\x6d\x61\x01\xd5\xc1\x89\xc7\xd6\x90\x72\x55\xcc\xe7\xff\x5b\x3e\x0b\x35\xc9\xc8\x7e\x65\x54\x5f\xfd\xc6\xa4\x93\x06\xd3\x41\x5f\x81\x79\x5f\xde\x80\x8d\xd6\x4d\x60\x3d\xfb\x19\x00\x00\xff\xff\xe0\x4d\x14\x8b\x13\x04\x00\x00")

func svcServerCliCliGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerCliCliGotemplate,
		"svc/server/cli/cli.gotemplate",
	)
}

func svcServerCliCliGotemplate() (*asset, error) {
	bytes, err := svcServerCliCliGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/cli/cli.gotemplate", size: 1043, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\xcd\x6e\xdb\x38\x10\x3e\x8b\x4f\x31\x15\x7a\x90\x01\x87\x3a\xec\xad\x68\x0e\x6d\xd2\x6d\x83\x6d\x52\xc3\x31\xb6\x67\x5a\x1c\x53\x44\x24\x52\x4b\x52\xb6\x03\xc1\xef\xbe\x18\xea\x27\x72\xdb\x18\x3d\xf4\x90\x48\xe2\x7c\xf3\xcd\xff\xd0\x79\x0e\x37\x56\x22\x28\x34\xe8\x44\x40\x09\xdb\x67\x08\xae\xf5\x9e\xc3\xed\x37\x78\xf8\xb6\x81\x4f\xb7\x77\x1b\xce\xf2\x1c\xd6\xe8\x5a\x63\xb4\x51\x3d\x00\x0e\xba\xaa\xc0\xee\xd1\x1d\x9c\x0e\x08\xa1\xd4\x1e\x76\xba\xc2\x08\xfe\x17\x9d\xd7\xd6\xbc\x83\xae\xe3\xc3\xfb\xe9\x34\x13\xc0\xad\x08\x38\x97\xd2\xf7\xe9\xc4\x58\x23\x8a\x27\xa1\x10\x3c\xba\x3d\x3a\xc6\x74\xdd\x58\x17\x20\x63\x49\x6a\x30\xa4\xfd\x23\x2f\x43\x68\xe6\xef\x79\xd3\x38\xbb\x4b\x19\x4b\xf2\x1c\xfe\x92\xb0\x12\x2e\x3c\xb3\x24\x55\xb6\x12\x46\x71\xeb\x54\x7e\xcc\x09\x5c\x58\x13\xf0\x18\x79\x94\xb5\xaa\x42\x3e\x83\x28\xd7\x14\x03\xc7\x67\x0b\xff\xe8\x40\x28\x1d\xca\x76\xcb\x0b\x5b\xe7\xca\x5e\x3d\xe9\x90\xd3\x5f\x65\xd5\x00\xdc\x50\xd8\x8f\xe8\xf6\xba\x40\x96\xa4\x5d\xc7\xef\xa2\xc7\x2b\x11\x4a\xb8\x3a\x9d\x20\x2f\x85\x91\x15\x3a\x9f\xb2\xa4\xd9\x02\x21\x56\x1f\xcf\x31\xe9\xaf\x15\xfd\xbe\x78\x45\x52\x6b\x29\x2b\x3c\x08\x87\x3e\x65\x0b\xc6\x62\x19\xcd\x4e\x2b\xa0\xf8\x84\x36\x1e\x42\x89\xe0\xf0\xbf\x56\x3b\x94\xb0\xd3\x58\x49\x0f\x3b\xeb\x60\xac\xa1\x18\x33\x1c\x9e\x1b\x1c\xb5\x7d\x70\x6d\x11\xa0\x63\xc9\x97\xcd\x66\xf5\x41\x4a\x47\x47\xda\x28\x96\xdc\xe2\xb6\x55\x67\x27\x9f\xd7\xab\x9b\xf9\xc1\x29\xfa\xb1\x6e\x0d\xf8\x20\x5c\xf0\x20\xc0\xe0\x01\xa8\x3c\x83\xad\x25\xa8\xf5\xea\x66\xfa\x10\x46\x82\x00\x49\xc4\xc3\x19\x1c\x74\x28\xc9\x75\x62\x6a\x84\xf7\x28\x29\x22\x72\x8d\xc0\x95\x55\x0a\x1d\xdb\xb5\xa6\x20\x3b\x59\xb1\x53\x83\xe7\xcb\x41\x46\x0f\xfe\x35\xbe\x2e\x28\x8c\xfe\x94\x4e\xb2\xb4\xf6\x2a\x5d\x42\x5a\x62\x55\xd9\x74\xc1\x12\x89\xbb\x5e\xe1\x47\x84\xb2\x56\x6e\x9f\x31\x5d\xf4\x15\xfe\xd8\x7a\x6d\xd0\x7b\x90\xb6\x16\xda\x70\x96\xec\x85\x8b\x0e\xeb\x02\xa1\xd9\xf2\xae\xfb\x6c\x1f\x44\x8d\xc0\x87\x3e\xe0\xf4\x75\x3a\x3d\xf6\x09\x4e\x3a\x96\x24\x23\xfc\x1a\xc6\x76\xe0\x0f\x78\x18\xf0\xd9\x82\x25\x64\xe9\xbb\x13\xcd\xd8\x4b\x7d\x2a\x66\x85\xe6\xf0\x88\x38\x3f\xc8\x07\x4e\xae\xec\x99\x81\xb9\x0e\x31\x8e\x46\x06\xc4\x82\x25\xa7\x3e\xb0\x4f\x46\x36\x56\x9b\x70\x1e\x58\xc6\x92\xae\x73\xc2\x28\x84\xb7\x1a\xde\x5d\xbf\x44\x75\x8f\xa1\xb4\xd2\x53\x0b\xb2\x24\xe9\xba\x8d\xfd\x6a\x0f\xe8\xe0\xad\x1e\x02\x9e\x08\xaf\xc1\xef\x0b\x7e\x2f\x9e\xb0\xeb\x7e\x92\xce\x1c\xe9\x3a\x34\x92\xd8\x28\xd5\x38\xc8\x3d\x19\x25\xfd\x51\xc1\x77\xbf\xed\xd2\x4f\xc6\xde\x01\x00\x5c\x70\x75\x39\x73\x62\x48\x4b\xac\x82\xc7\x0a\x0b\xda\x87\x93\x13\xbf\x51\x90\x29\x82\x58\x92\x97\x78\x7e\xae\xc9\xc4\x9a\x4d\xa8\xa1\xdb\xee\xb1\x28\x85\xd1\x85\xa8\x5e\xca\x82\xce\x15\x14\x76\x2d\x9e\x30\x23\x31\xa0\x73\xd6\x2d\x58\x52\x84\x23\x09\x86\xad\xc6\x3f\x8a\xe2\x49\x39\xdb\x1a\x99\x0d\x74\x77\x26\xa0\x73\x6d\x13\xc6\xbe\xe3\x2c\x51\xf6\xa5\x09\x27\xf9\x97\xfe\x24\x23\x5b\x83\x6e\x1c\x79\xa8\xb4\x0f\x74\x3b\xf4\x8a\x34\x7b\x59\x1c\xad\x61\xb6\xc8\x3c\x0d\xdd\x03\x1e\x6e\x7a\x2f\xb2\x5e\xb0\xe0\xdf\x75\x28\xb3\x34\x38\x61\x3c\xad\x2f\x1a\xad\x38\xec\x71\xb0\x92\x9a\x34\x69\x39\x8c\x83\x80\xf7\xed\x31\x4e\x42\xcd\x7b\x67\xb2\x34\x8f\xf8\x7e\xb9\xe7\xe9\xb2\x87\x0f\x9e\xfe\x4d\x9e\x44\x09\xbf\x33\x12\x8f\x8b\x0b\xaa\x45\x2d\x2b\x6d\xf0\x75\x86\x9b\x1e\x70\x89\x83\xfe\xe9\xea\x02\xc7\xaa\x07\x5c\xe2\xf0\xcf\xf5\xd6\x56\xaf\x53\x3c\x46\xf9\x25\x86\xe0\x44\x71\xc1\x87\x0d\x89\x17\x31\xbf\xf3\xc5\x26\xa4\x74\xe9\x12\x8a\x9d\xe2\xd3\x1e\x27\x23\xb1\xb1\xde\x5f\xf5\x6c\x5f\x63\xa1\x3f\x18\x19\x8b\x91\x9d\x81\x97\x50\xd3\xde\x18\xbb\x8a\x6e\x07\x98\x0a\xfb\x47\x3a\x83\x28\x69\x2b\x27\xe5\x38\xfe\xb4\x3e\xe8\x74\xec\xcc\x22\x1c\x97\x30\x8d\xcb\xb8\xf1\x17\xaf\x87\x3a\xde\x61\xbf\x13\xe9\x88\x5d\x42\x39\x0f\x34\xde\x57\x7f\x36\x50\xa2\xec\x27\xa0\x32\x4b\x1a\x64\x52\x37\x18\x06\xaf\xb2\x34\x14\xcd\x10\xc0\x78\xc3\x52\x00\x7a\x17\xb1\x6f\xae\xc1\xe8\x2a\x1a\x9f\x62\x42\xe7\xe8\xd3\x61\x68\x9d\x61\x49\xdc\x63\x89\x77\xfb\x79\x22\x89\xaa\xbf\x8f\x7e\xc8\x23\x71\xc7\x8d\x4b\x3f\x7e\xa6\x51\x74\x71\x10\x9b\x2d\x5f\xa3\x22\xb7\x5c\xd7\xfd\xf2\x72\xcb\xfc\x12\xbc\xdb\x5f\x6a\xb8\x79\x10\xa3\xc7\x9e\xf7\x99\xaf\xcc\x3c\xd9\xeb\xd6\xbc\x39\xbf\xb2\xf1\xa8\x29\x67\xef\xaf\xfa\xad\x74\x62\xff\x07\x00\x00\xff\xff\xb0\x56\xca\xc6\xb0\x0a\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 2736, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\x6a\x04\x85\x1d\x38\x54\xcf\x01\x72\xd9\x24\xdd\x04\x6d\x3e\x90\x1a\xdb\xc3\x62\xb1\xa0\xa5\xb1\x44\x58\x22\x15\x92\x72\xe2\x12\xfa\xef\xc5\x50\x92\xad\xc4\x5e\xdb\x87\x20\xb6\xf9\x66\xe6\xcd\x7b\xc3\x91\xe2\x18\xae\x75\x8a\x90\xa1\x42\x23\x1c\xa6\x30\x5f\x83\x33\xb5\xb5\x1c\x6e\x9e\xe0\xf1\x69\x06\xb7\x37\xf7\x33\xce\xe2\x18\x5e\xd0\xd4\x4a\x49\x95\xb5\x00\x78\x93\x45\x01\x7a\x85\xe6\xcd\x48\x87\xe0\x72\x69\x61\x21\x0b\x0c\xe0\x6f\x68\xac\xd4\xea\x12\xbc\xe7\xdd\xe7\xa6\x19\x1c\xc0\x8d\x70\x38\x3c\xa5\xef\x4d\xc3\x58\x25\x92\xa5\xc8\x10\xec\x2a\x61\x84\x9f\xf5\x69\xa1\x32\x7a\x25\x53\xb4\x60\xd1\xac\xd0\x5c\x58\x99\x22\xcc\xa5\x4a\xa5\xca\x2c\x2c\xb4\x01\x97\x23\x64\x2f\xcf\xd7\xe0\x8c\x50\xb6\xd2\xc6\x05\x2e\xf7\x0e\x6a\x27\x0b\xf9\x1f\xda\x00\xd9\x9c\xc6\x99\xa9\x12\xfe\x4f\x48\xc7\x19\x93\x25\xfd\x08\x63\x16\x8d\x14\xba\x38\x77\xae\x1a\x31\x16\x8d\x32\x5d\x08\x95\x71\x6d\xb2\xf8\x3d\xa6\x93\x44\x2b\x87\xef\x6e\x14\xce\x74\x56\x20\x1f\x40\x28\x67\x5c\xa2\x13\xa9\x70\x82\xe2\xe9\x87\x4d\x49\x18\x65\xd2\xe5\xf5\x9c\x27\xba\x8c\x33\x7d\xb1\x94\x2e\xa6\xbf\x8f\x9c\x28\xac\xef\x9d\xe8\xc9\x04\x59\x54\xcd\x61\xe4\x3d\x7f\xfe\x72\x1f\x78\x3e\x0b\x97\xc3\x45\xd3\x8c\xd8\x84\x05\xa5\x1e\xc4\x12\xbf\xbe\x3c\x5f\xb7\xfd\x40\x29\x96\x68\x41\x80\x45\x07\x7a\x01\xa8\xd2\x4a\x4b\xe5\x2c\x88\x95\x90\x85\x98\x17\x08\x82\xce\x83\x60\xde\x7f\xd5\x8f\xa2\x44\xe0\x5d\x39\x4e\xdf\x9a\xa6\xd7\x66\x51\xab\xe4\x53\x81\x71\xe2\xde\xa1\x53\x82\x5f\xb7\xff\xa7\x83\x32\xb7\xfd\xa7\x09\x54\x73\x7e\xb8\x00\x78\x16\xb5\xae\x3e\x55\x4e\x6a\x65\xe1\xf2\x0a\xbe\xff\xf8\xa0\x5c\xe7\x53\x0b\xf0\x2c\x8a\x60\xdf\xf1\x17\x5c\x68\x83\xe3\x5e\xff\x99\xee\x98\x4d\xa6\x2c\x6a\x58\x64\xd0\xd5\x46\xc1\xef\x14\xda\x06\xf8\xa0\xb4\xf7\x30\xd3\x7f\xeb\x37\x34\x1f\x09\x42\xd3\xb0\xc8\x7b\x23\x54\x86\x70\x26\x89\xd6\xe6\xfc\x01\x5d\xae\x53\x4b\x88\xc8\xfb\x3e\xfc\x4c\x76\x9d\x5d\x7e\xe2\xf7\x88\x6f\x9d\x70\x2c\x8a\xa2\xc4\xbd\x4f\xe9\xff\x46\x2f\xee\xfd\x26\xb4\x97\x2e\x20\x6e\x30\xd1\x69\xd0\x7d\x80\x78\xc1\xd7\x1a\x6d\x0b\xb8\x55\x7b\x01\xb6\xd2\xca\x62\x40\x7c\x90\x96\x73\x4e\x3f\x92\x20\xde\x5f\x90\x61\xd4\x41\xc3\x9a\x30\x44\x5b\x61\x40\x96\x55\x81\x25\x92\x97\x74\x6b\x8e\x38\x28\x95\x43\xb3\x10\x09\x32\xb7\xae\x70\x98\xc7\x3a\x53\x27\x0e\x3c\x3b\xae\xe3\x1e\x19\x01\x3e\xe9\x78\x27\x54\x5a\xa0\x61\x5b\xf2\x2d\xf3\x2e\x4d\x58\x04\x83\xea\x4e\x6f\x1b\x39\xbd\x87\xa3\x54\xc3\x85\x18\x5b\x38\xdf\x96\x9a\x6c\xd3\x6f\xd8\xef\xbf\x24\x06\x5f\xe1\x7c\x78\x29\xce\x24\xef\x1c\x9d\xad\xab\x9e\xd4\x04\xc6\xbb\xa0\xd6\xd5\x01\x6a\x0a\x68\x8c\xa6\xe2\x2c\xfa\x49\xa9\xab\xf0\x0b\xd1\xa6\x99\xda\xd1\xb3\xbd\x27\x34\x2d\xc4\x2d\x70\x99\xb0\x48\x2e\x42\xd0\x6f\x57\xa0\x64\x41\xa9\xfa\x9b\xa2\x64\x11\xf2\x0d\x6f\x8f\xc1\x8a\x9f\x42\x6d\x32\xa5\x70\xd6\x30\xef\x5b\xa3\xc8\xa6\x4e\xea\x76\xaa\x8f\xeb\x1c\xc7\x70\xe8\x02\x80\xa4\x15\xf6\x69\xa1\xb7\x01\x1d\xe2\x4f\x32\xca\xe5\xc2\x91\x0d\x2b\x34\xb4\x00\xc3\xa0\xb7\x6b\x6f\x77\xde\x4c\x97\xd9\x69\x10\x50\x5b\x34\x17\xa9\x2e\x85\x54\x87\xc0\x1c\x9e\x8d\x2c\x85\x91\xc5\x9a\x42\x16\x75\x01\x52\x85\xdd\x3b\x58\x9f\x87\xfa\x18\xff\xdc\x9d\x12\xea\xe5\x05\x5f\xb7\x53\xe9\x69\x24\x06\xdf\x86\xd6\xd3\x48\x5d\x5e\xf5\x31\xfb\xec\xd9\x19\xaf\x81\x9f\xaf\x07\x9c\x6a\xd7\xcb\x49\x4e\x1d\xdc\x44\x7b\xad\x6a\x23\x7a\xc8\xaf\xbc\x3a\xee\x42\x57\x22\x78\x76\xc0\xd9\xaa\x58\x9f\x64\xd5\xc1\x46\xf6\x79\xb5\x61\x70\xa2\x59\xb6\x22\x15\xfb\xa8\xd3\x6e\xd3\xc0\x2f\x5b\xed\x33\xec\x0e\x8b\x0a\x8d\x65\x6d\x0f\x3b\x8f\xc0\xfd\xbb\xa8\x4c\xe1\xbc\x87\xf2\x87\x9b\xc9\x67\x04\xf1\xa5\x95\xba\x9c\xc2\x2a\x70\x0e\x53\x70\x5e\xa6\x61\x4b\xc8\x05\xac\x86\x5b\xa3\x7d\x6b\x41\x58\xe2\x3a\xf8\x9d\xa6\xf4\x4a\xa9\x5d\x4e\x22\xf7\x65\x68\x45\x97\xc2\xc1\x78\x39\x81\xb7\x5c\x26\x79\x80\x16\x05\x14\x64\x58\x97\x45\xa8\x34\x3c\x76\xe8\x2d\x8c\x5f\x0b\xa5\x95\x4c\x44\x71\x87\x22\x45\xf3\x17\xae\xe9\x95\xc6\x75\x85\xac\x6e\x87\x46\x3a\x48\x84\x82\x39\xf6\x29\x92\x04\xad\xc5\x94\x6a\xa3\x74\x39\x9a\xae\x72\xf7\x00\x86\xab\x4d\xb3\xff\x4a\x97\x7f\x13\x45\x8d\xed\x52\xa4\x66\xbf\xff\xf1\x63\x72\x14\xf8\x0b\x76\xe3\xe5\x64\x9b\x21\x3c\x5d\x37\xe6\x25\xee\x9d\x35\xec\xff\x00\x00\x00\xff\xff\x02\xab\x81\xba\x78\x0b\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 2936, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate": cmdNameMainGotemplate,
	"cmd/NAME-server/main.gotemplate": cmdNameServerMainGotemplate,
	"handlers/handlers.gotemplate": handlersHandlersGotemplate,
	"handlers/hooks.gotemplate": handlersHooksGotemplate,
	"middlewares/endpoints.gotemplate": middlewaresEndpointsGotemplate,
	"middlewares/service.gotemplate": middlewaresServiceGotemplate,
	"svc/client/cli/handlers/handlers.gotemplate": svcClientCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate": svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate": svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate": svcEndpointsGotemplate,
	"svc/server/cli/cli.gotemplate": svcServerCliCliGotemplate,
	"svc/server/run.gotemplate": svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate": svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate": svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate": &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": &bintree{handlersHooksGotemplate, map[string]*bintree{}},
	}},
	"middlewares": &bintree{nil, map[string]*bintree{
		"endpoints.gotemplate": &bintree{middlewaresEndpointsGotemplate, map[string]*bintree{}},
		"service.gotemplate": &bintree{middlewaresServiceGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"handlers.gotemplate": &bintree{svcClientCliHandlersHandlersGotemplate, map[string]*bintree{}},
				}},
			}},
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"cli.gotemplate": &bintree{svcServerCliCliGotemplate, map[string]*bintree{}},
			}},
			"run.gotemplate": &bintree{svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

