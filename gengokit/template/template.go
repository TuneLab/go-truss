// Code generated by go-bindata.
// sources:
// NAME-service/cmd/NAME/main.gotemplate
// NAME-service/cmd/NAME-server/main.gotemplate
// NAME-service/handlers/handlers.gotemplate
// NAME-service/handlers/hooks.gotemplate
// NAME-service/middlewares/endpoints.gotemplate
// NAME-service/middlewares/service.gotemplate
// NAME-service/svc/cli/handlers/handlers.gotemplate
// NAME-service/svc/client/grpc/client.gotemplate
// NAME-service/svc/client/http/client.gotemplate
// NAME-service/svc/endpoints.gotemplate
// NAME-service/svc/transport_grpc.gotemplate
// NAME-service/svc/transport_http.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x56\x6f\x6f\xdb\xbe\x11\x7e\x2d\x7d\x8a\xab\xd0\x00\x52\xe1\x4a\xe9\xb0\xbd\x31\xe6\x17\x6d\xd2\xae\x01\xd6\x36\x48\x32\xf4\x45\x5b\x0c\x34\x79\x92\xb8\x52\xa4\x46\x52\x76\x02\xc1\xdf\x7d\x38\x52\x96\x9d\x2e\x7f\x7e\xc5\xaf\x40\x63\xfb\x74\xf7\xdc\xf1\xee\xb9\x87\xaa\x2a\x38\x33\x02\xa1\x41\x8d\x96\x79\x14\xb0\xbe\x03\x6f\x07\xe7\xca\xb4\xaa\xe0\x0a\xed\xa0\xb5\xd4\x4d\xb4\xc1\x56\x2a\x05\x66\x83\x76\x6b\xa5\x47\xf0\xad\x74\x50\x4b\x85\xc1\xf9\xfc\x0b\x7c\xfe\x72\x03\xef\xcf\x2f\x6e\x5e\xa4\x69\xcf\xf8\x4f\xd6\x20\x74\x4c\xea\x34\x95\x5d\x6f\xac\x87\x3c\x4d\x32\xd4\xdc\x08\xa9\x9b\xea\x3f\xce\xe8\x2c\x4d\xb2\x5a\xb1\x26\x7c\x76\x9e\x3e\x8c\xa3\xbf\xce\x5b\x6e\xf4\x66\xfa\x2a\x75\x13\xac\x5e\x76\x98\xa5\x69\x92\x35\x46\x31\xdd\x94\xc6\x36\xd5\x6d\xa5\xd1\x57\xdc\x68\x8f\xb7\x01\xa0\x31\xa6\x51\x58\x1e\xb9\x34\xb6\xe7\x31\x4c\xfa\x76\x58\x97\xdc\x74\x55\xff\xb3\xa9\xd0\x5a\x63\x1d\x3d\xa9\x2a\xb8\xa1\xc3\x5c\xa3\xdd\x48\x8e\x69\xc2\x95\x44\xed\x3f\x32\x2d\x14\x5a\xc8\xc6\xb1\xbc\x08\x47\xb8\x64\xbe\x85\xd7\xbb\x1d\x54\x6e\xc3\x2b\xae\x64\xd5\x46\x1f\xaa\x8f\xf2\xc4\xc0\xa7\x22\x50\xfb\xa9\xa2\xa4\xf5\xbe\xff\x63\x01\xe4\x99\xa5\x49\xbf\x0e\x8e\x97\xef\xee\xbb\x66\x69\x91\xa6\x1b\x66\xa9\xc1\xff\x86\x15\x4c\xdd\x2b\x2f\x99\x75\x78\xa1\xfd\x6c\xa5\x46\x96\xd7\xbd\x92\x93\x89\x66\x50\x9e\x99\xae\x67\x7c\xb2\xc4\x9e\x94\x5f\x2d\xeb\xeb\x68\xe9\xd7\xe5\x15\x36\xd2\x79\xb4\xe3\x58\x4e\x1d\x2a\x3f\xb3\x0e\x77\x3b\xfa\x85\x96\xb2\xd7\x83\xe6\x61\xd8\x79\x01\x63\x9a\x18\x57\xbe\xbf\x95\x3e\x77\xc3\x3a\x1a\x8b\x74\x97\x12\x4b\x26\x03\xe0\xad\x74\xde\x81\x37\xc0\xb8\x07\xe6\xc0\xb7\x08\x04\xe2\xa5\xd1\x4c\x05\xa8\x05\xac\x07\x1f\x49\x67\xd1\x0f\x36\x44\x79\xe0\x46\x20\x45\x12\x1c\x45\x31\xee\x87\x29\x02\xa4\x76\x1e\x99\x00\x53\x03\x67\x4a\x11\x75\xa7\x52\x40\x48\x8b\xdc\xab\xbb\x32\x8e\x5a\x3a\x10\x46\x63\xa8\x40\x29\xb3\xdd\xa3\x09\xac\xd1\xa2\x98\x6b\x09\x35\xae\x31\xc0\xa1\x58\x80\x93\x9a\x23\xc8\x7a\xc6\xdd\xb6\x68\xf7\x8f\xe7\x24\x84\x56\x5b\xd3\x4d\x3b\x32\x61\x2d\x40\x53\x4a\x53\x3f\x92\xc9\xa1\x87\xa1\x0f\x3b\x78\x1c\x46\x60\x5b\x33\x28\x71\xa8\xa3\x8c\x0d\x9f\xdb\x0b\x52\x7b\xea\xfb\x44\x82\xc0\xac\xb7\x42\x58\x88\xff\x56\x40\x5b\x56\x5e\x07\x06\xe4\x19\x3d\x2d\x99\x10\x36\x5b\x40\x46\xff\x3f\xde\xdc\x5c\x02\x19\xd0\x39\x2a\x8f\x09\xe1\x36\x3c\x2b\xd2\x24\x90\xfa\x71\x24\x7a\x3a\x23\x2d\xff\x76\xfa\xd7\x53\xfa\xd2\x5c\x5d\x9e\x41\x4e\xa0\xc5\xc3\xa8\xc5\x7e\xe7\x90\x8c\x5c\x49\xe8\x2d\xba\xa1\x43\x07\xda\x80\x8b\x1c\x03\x21\x1d\x27\xb5\xb9\x03\x77\xe7\x3c\x76\x0b\x60\x5a\x00\xde\xf6\xc8\xbd\x83\xc1\xa1\x0d\x34\x20\xa4\xde\x9a\x8d\x14\x18\xfb\x1a\x66\x70\x2f\xb1\xde\x63\x4e\xc3\x8f\xd9\x7a\x6a\x2e\x11\xc1\x62\xad\x90\x93\xfc\x49\x1d\xe0\x08\x86\xaa\x5a\x4b\xcd\xec\x5d\x48\x4b\xa6\xc9\x4c\xfb\x3a\xe9\x9b\x5b\x06\xe3\x6b\x6f\x99\x76\xb4\x92\xa1\x19\xa1\x47\x2e\x20\x51\xe8\x86\x59\x69\x06\xb7\x0f\xe5\x46\x3b\x6f\x07\xee\x8d\x75\xb0\x36\xbe\x9d\x8e\x04\xad\x71\x7e\x19\x84\x72\xbf\xaa\x69\x9a\x8c\x23\x58\xa6\x1b\x84\x97\x1d\xfa\x76\x01\x2f\x99\x6d\x1c\x2c\x57\x50\x9e\x05\xb8\xb7\xb6\x71\xe5\x27\xf4\x2d\x7d\x81\xdd\x2e\x4d\x92\xda\x8d\x63\xf0\xde\xed\xc8\x31\x0c\xec\x33\x6e\x3f\x28\xd6\x5c\xa3\xcf\xb3\x71\xbc\x31\xff\x34\x5b\xb4\x30\x79\x65\x8b\xe8\x44\x7c\xfe\xa2\xdf\x93\x04\x14\x94\x19\xb5\xd8\xed\xd2\x03\xab\xc6\xf1\x38\xe9\x5b\xa5\x08\xd2\x51\x4e\x1a\x68\x80\xf8\x97\x23\xd5\x5f\x05\xee\x46\x29\x48\xea\xce\x97\x1f\x7a\x2b\xb5\xaf\x73\xe3\xca\x6b\x2f\xd0\xda\x05\x64\xd1\xd5\xd4\x70\xe2\x96\xdf\x75\xb6\xa0\x8d\x22\xe0\x6f\xa7\x3f\x88\x78\x01\xee\x92\xc2\xce\xb1\x66\x83\xf2\x2e\x2f\x9e\x40\xfb\xae\xb3\xa7\x1e\x5f\x0f\x6b\x6e\xba\x8e\x69\x11\x92\x15\xe1\x34\xbf\xd1\xd8\xd7\xa1\xb3\x8f\xc2\x03\x9c\xb8\x70\x86\x07\x9a\x1b\x73\xa1\x16\x11\x64\x97\x26\xb2\x06\x85\x3a\x9f\xce\x5b\xc0\xdf\xe1\x2f\xb1\x53\x73\x07\xc3\x51\x27\xd1\x7b\x43\x31\x53\x7b\x83\xa2\xe7\xc5\xd1\x4c\xf6\xcb\xd2\xaf\xcb\x71\xfc\x87\x21\x5d\x86\x87\x55\x3a\x49\xd0\xc6\x35\x0e\x22\x1f\x87\x26\x6b\x78\x35\x8b\xc5\x8b\x15\x64\x59\xa8\x64\x42\x5d\x90\x2b\xac\xe0\x70\x51\x11\x91\xf2\x39\xa2\x48\x93\x1d\xa0\x72\x41\x10\x5f\xcd\x52\x71\xc0\xe1\x46\xeb\x08\xb2\x5c\x41\x10\x8b\x73\xc9\x54\x3e\xbb\x2e\xa2\xf1\xab\xf4\xed\x85\x76\xc8\x07\x8b\x79\x71\x64\xbc\x91\x1d\x9a\xc1\xe7\x74\xf3\x97\xd7\xc8\x8d\x16\x05\xb5\x46\xd6\x01\xf4\xc5\x0a\xb4\x54\x21\xd3\xa3\xa3\x09\x74\x86\x6d\x2b\x15\x49\x03\x0b\x77\x02\xe1\xd3\x1e\x6a\x0c\x02\xbb\x84\x93\x4d\x16\xca\x24\xec\xa3\xbe\xd3\xb0\x92\xa0\xd3\xc1\xbb\x3c\x53\xc6\xc5\xd9\xfc\xd2\xa0\xc3\xd5\x1f\x1a\x44\xce\x87\xde\x3c\xb5\x04\x61\x14\x4b\x52\x3d\x8b\x9d\xf1\x38\xcb\x96\xeb\x91\xcb\x5a\xa2\x98\xd8\x7a\x4c\x86\x07\x8e\xff\x0c\xfe\xc9\x26\xb0\x73\x3a\xe1\x3d\x62\xa5\x89\xdb\x4a\xcf\xdb\x28\x01\x44\xc8\xbc\xf8\x76\xfa\x83\x50\x7f\x67\x43\xc2\x7e\x70\xe6\xf0\xa1\x15\x58\x86\x01\x1d\x64\x69\xe2\xf1\x71\xc6\x37\xcb\x1f\xc4\x47\x5a\x95\x90\xa7\xfc\xc4\xac\x6b\xd9\x2c\x31\x71\x30\xff\x1d\xd0\xf9\x99\x50\xf7\xde\xd2\xca\x19\x3d\xdf\x43\x9c\x31\xa5\x62\x6d\x61\xae\x0f\x90\xe6\x19\xd6\xec\xdf\x21\x1e\x49\xf4\x6b\x5f\xef\x51\x27\x89\x35\x6f\xe6\x6a\xf7\x57\xd0\xa1\xce\xe9\xad\xb5\x7c\xc7\xf8\xcf\xc6\x9a\x41\x0b\x22\xff\x74\xca\x3f\x59\xf2\xff\x65\x7b\xae\xd8\x09\x39\x28\xae\xd2\x79\x16\x67\x0c\x57\xb1\x1a\x14\xb0\x95\xbe\x5d\x06\x2e\xde\x73\x7c\xa4\xd9\xf7\xb0\xa2\x02\xc1\x15\xba\xde\x68\xf1\x38\xd6\xe6\xe8\xda\xa1\xbd\x23\xd9\x5f\x3e\x27\x8c\xd3\xaf\xd3\x74\x97\xfe\x2f\x00\x00\xff\xff\x36\xa6\xaa\xd1\xd0\x0c\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 3280, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4f\x6f\xdb\xb8\x13\x3d\x4b\x9f\x62\x22\xf4\x07\xc8\x3f\x38\x54\x81\xdd\xee\x21\x5b\x1f\x1a\x3b\x4d\x83\x4d\x5a\xc3\x71\xd1\xe3\x82\x96\xc6\x34\x11\x89\x14\x48\xda\xb1\x21\xf8\xbb\x2f\x86\xfa\x13\xb9\xb1\xdd\x1e\x52\xa0\x91\xc5\x79\x7c\x9a\x79\x33\x9c\x61\x92\xc0\x58\x67\x08\x02\x15\x1a\xee\x30\x83\xc5\x0e\x9c\x59\x5b\xcb\xc2\x24\x81\x19\x9a\xb5\x52\x52\x89\x7a\x0d\x9e\x65\x9e\x83\xde\xa0\x79\x36\xd2\x21\xb8\x95\xb4\xb0\x94\x39\x7a\xf0\xe4\x1b\x7c\xfd\x36\x87\x9b\xc9\xdd\xfc\x22\x0c\x4b\x9e\x3e\x71\x81\x50\x70\xa9\xc2\x50\x16\xa5\x36\x0e\xe2\x30\x88\x96\x39\x17\x11\x3d\x0b\x47\x0f\x85\xed\x23\x59\x39\x57\xf6\x7f\x27\x65\x69\xf4\x92\x56\xb4\x8d\xc2\x30\x48\x12\xf8\x23\x83\x29\x37\x6e\x17\x06\x91\xd0\x39\x57\x82\x69\x23\x92\x6d\x42\x5b\x52\xad\x1c\x6e\x3d\x9b\xd0\x5a\xe4\xc8\x7a\x10\x61\xca\xb4\xe1\xb8\xd5\xf0\x8f\x74\x84\x92\x6e\xb5\x5e\xb0\x54\x17\x89\xd0\x97\x4f\xd2\x25\xf4\x3f\xd7\xa2\x01\xce\x29\xbc\x47\x34\x1b\x99\x62\x18\xac\xb8\xca\x72\x34\x10\x55\x15\xbb\xf3\xe1\x4c\xb9\x5b\xc1\xe5\x7e\x0f\x49\x63\xb3\x51\x18\xd8\x4d\x7a\x14\x62\x37\x69\x14\x06\xe5\xc2\x1b\xa7\xd7\x87\xe6\x28\x0c\x0a\x99\x65\x39\x3e\x73\x83\xf6\xe8\xfe\x9e\x3d\x0a\x07\x61\xb8\x5c\xab\xd4\x8b\x1b\x0f\xa0\x0a\x83\x0d\x37\xa4\x6e\x90\xe1\x62\x2d\x3e\x65\x99\x01\xff\x6f\x04\x24\x37\x7b\x74\x46\x2a\x11\x47\xde\xca\x78\x96\x99\x68\x08\xd1\xd5\x87\xf7\x7f\xbd\xa7\x1f\x13\x5a\x06\xae\x32\x28\xd0\x19\x99\x5a\xc8\xa5\x75\xa8\x80\x90\x68\x6d\x34\x08\x83\x80\x32\xf2\x42\xfc\x33\x33\x59\xfb\xc4\x1f\x3c\xf1\x97\xf9\x7c\x7a\x8c\x8b\xb2\x71\x9a\x8b\xac\x7d\xae\x3f\x3d\x97\x98\x4d\xc7\x10\x13\xe3\xe0\x08\xe5\xa0\x4e\xd9\x77\x8b\x80\x6a\x23\x8d\x56\x05\x2a\x07\x1b\x6e\x24\x5f\xe4\x68\x87\x20\x97\x60\xd1\x31\xf8\x9c\x73\x61\x61\xc5\x37\x08\xa5\x91\xda\x48\xb7\xf3\x25\x0d\x37\x6a\x43\x78\xcb\xc2\x40\x2e\x3d\x37\x5c\x8d\x40\x5b\x76\x8b\x0e\xd5\x26\x8e\x26\x37\xd7\xdf\x6f\xff\xfd\x34\x99\xcc\xa2\xc1\xdf\x35\xe0\x62\x04\x51\x44\xfa\x07\xff\x7f\x51\x7e\xe4\x6d\x61\xb0\xf7\x44\xbe\xf0\x0f\x89\xa6\xdf\x66\x73\xa2\xf0\xa6\x1e\x45\x27\xf1\x08\x96\x85\x63\x8f\xa5\x91\xca\x2d\xe3\xe8\xea\x7f\x36\x1a\x7a\xf4\xa0\x65\x3d\xe2\x1e\x49\x73\xd2\xbb\x1e\x75\xdf\xb9\x23\x34\xb7\xb3\xe9\xf8\x24\x4d\x97\xb8\x17\x9a\x5a\xf7\x32\xe3\x0e\xdb\x84\xa0\x25\xb5\xdd\x0a\x77\xb5\xce\x0b\x44\xd5\xb5\x0d\x4a\xdc\x62\xe7\x33\x6e\xc3\xc0\x27\x7e\xca\x8d\xc5\xb8\x49\xe1\xbd\x16\x82\x3a\x4e\xa6\xa9\xba\x59\x5d\xda\xb9\x16\x02\xfd\x83\xdd\xfb\x9f\x61\x40\xfe\x34\xcb\x23\x6f\xf8\x8a\xcf\xf7\x5a\x2c\x0b\x57\x23\x62\x6d\xd9\xa3\xcb\xf4\x9a\x44\x7b\x85\x1c\xd7\xcd\x22\xae\xd7\x07\xec\x87\x74\xab\x38\x72\xa4\x33\x21\x26\xb8\xe4\xeb\xdc\xcd\x65\x81\xd6\xf1\xa2\xfc\x3e\x1f\xff\x3e\x4b\xca\xf3\x1c\xcd\x21\xd3\xd8\xaf\xd5\xe9\xab\xd1\x14\x48\x1c\x15\x56\x50\x71\xaf\x30\xcf\x35\xd5\x71\x86\x4b\x6c\xc3\x3d\x40\x08\xad\xb3\xc5\x0e\xa3\x46\xa5\xeb\xb5\x95\x0a\xad\x3d\x94\xc9\xd6\xcd\x0a\xca\x05\xab\xaa\x5b\xfd\x95\x17\x08\xac\xe9\x60\x8c\xde\xf6\x7b\x7a\x6b\xe5\x6b\xe1\x23\x68\x1a\x18\xc5\xd4\xc0\x63\x8a\x37\x49\xe0\x87\xe1\x65\xdb\x04\xe1\x59\xba\x15\xf4\x3a\x11\x83\x47\x44\x60\xac\xdf\x9d\x92\x86\x95\x09\x7d\xf0\x89\xfe\x36\x22\x6d\xbf\xd3\x20\x06\x5d\x2d\xdd\xa8\xac\xd4\x52\xb9\xc3\xd0\xe2\x30\xa8\x2a\xc3\x95\x40\x78\x27\xa9\x64\xbb\xb8\x1e\xd0\xad\x74\x66\xa9\x4d\x86\x41\x50\x55\x73\x7d\xaf\x9f\xd1\xc0\x3b\xd9\x84\xdc\x11\x8e\xc0\x6e\x52\xf6\xc0\x9f\xb0\xaa\x5e\x59\x7b\x8e\x54\x15\xaa\x8c\xd8\x1a\xb1\xbd\x06\x2d\xce\xfe\x9e\x0a\xd8\xc2\xbd\x0e\xdd\x1b\x79\x4e\x4e\x74\x6c\xd5\x6f\xc7\xf5\xca\xe3\x2b\xea\x9d\x67\xe2\x1d\xf6\x22\xd9\xf7\x22\xb1\x98\x63\x4a\xb3\xfe\x8d\x42\x7a\x9d\xdb\x8e\x38\xee\x50\x8d\x94\x0f\x98\xae\xb8\x92\x29\xcf\x5f\xd2\x8b\xc6\xa4\x14\x79\xc1\x9f\x30\x26\x33\xa0\x31\x9a\x0e\x4b\xea\xb6\x64\x68\x26\x3b\xbb\xe6\xe9\x93\x30\x7a\xad\xb2\xb6\x59\xdc\x29\x87\xc6\xac\x4b\xd7\x55\x70\x18\x08\xdd\xbd\x74\xe6\x2f\xf5\x42\x4c\x9f\x6a\xb6\xd6\x43\xaf\x9e\x24\xed\x3e\x1a\xaa\xf5\x3c\x6d\x8f\xfa\xd5\xaf\x3a\x86\xe1\xca\x52\x67\xa6\x33\xea\x47\x80\x3f\xa1\x41\x41\x3b\xfd\x50\x6c\x8e\x14\x3e\xac\xb7\xfe\x4c\x15\xac\x76\x26\x8e\x12\x8f\xaf\x6f\x39\x49\x34\xac\xe1\x8d\xa7\x9f\xc9\x13\x6f\x61\x77\x2a\xc3\xed\xe0\xcc\xd6\xb4\xc8\x72\xa9\xf0\x34\xc3\xb8\x06\x9c\xe3\xa0\x3f\x32\x3f\xc3\x31\xad\x01\xe7\x38\xec\xae\x58\xe8\xfc\x34\xc5\xa3\xb7\x9f\x63\x70\x86\xa7\x67\x7c\x98\x93\x79\xe0\xf5\xed\x77\xc8\xe6\xaa\xf0\x32\x81\xe9\x0b\xbe\xa8\x3e\x5e\xd6\x54\xf7\x3e\xcb\x9f\x54\xe6\x33\x11\xbf\x20\x87\x50\x50\xe3\x69\xcb\xc9\xdf\x57\xba\x94\xbe\x49\x4d\x10\x65\x7d\x7f\x6a\x8f\x3e\xf5\x1f\x5a\x6d\x6b\x32\x75\xdb\x21\x74\xe7\x64\xd8\x34\xff\xc1\x89\x20\xdb\x41\xfe\xcb\x18\x5b\xe0\x10\x56\xfd\x10\xfd\x35\xea\x6d\x43\x24\xca\xba\xea\x73\x35\xa4\xb3\x4b\xdb\x15\xba\xc6\xa5\x38\x72\x69\x49\xae\xb7\x97\x07\x72\x5d\x2e\x3d\xf0\x62\x04\x4a\xe6\xfe\xcb\x5d\x34\x68\x0c\xbd\x1a\x74\x6b\xa3\xc2\xc0\xb7\xae\xc0\x9a\x4d\x5f\x3f\xba\xa4\xd4\x93\xec\x27\xf9\x88\xdb\x37\x59\x7f\x89\x6c\xcf\x9e\xf1\x27\xaf\x5c\xb0\x19\x0a\xf2\xc9\x54\xd5\xd1\xb1\x18\xdb\x21\x58\xb3\x39\x59\x61\xfd\x08\x5a\x77\x2d\xab\x05\xcf\x55\x5f\xe6\xd9\x5a\x5d\x1c\x4e\x7a\xdc\x4a\x52\xeb\xe3\x65\xdd\x83\xf6\xe1\x7f\x01\x00\x00\xff\xff\x06\x56\xef\xd3\x7c\x0d\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 3452, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresEndpointsGotemplate,
		"middlewares/endpoints.gotemplate",
	)
}

func middlewaresEndpointsGotemplate() (*asset, error) {
	bytes, err := middlewaresEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/endpoints.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresServiceGotemplate,
		"middlewares/service.gotemplate",
	)
}

func middlewaresServiceGotemplate() (*asset, error) {
	bytes, err := middlewaresServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/service.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\xcf\x6e\xdb\x30\x0c\xc6\xcf\xd2\x53\x70\x85\x51\xc4\x43\x2a\xdf\x0b\xec\xd0\x7f\x2b\x72\x58\x5b\x64\x79\x01\xc5\x66\x6c\x61\x36\xe5\x49\x74\xb3\x42\xd0\xbb\x0f\x52\xdc\x64\xdd\x25\xbd\x24\xf4\xc7\x1f\x3f\x51\xa4\xaa\x0a\xee\x6c\x83\xd0\x22\xa1\xd3\x8c\x0d\x6c\xdf\x80\xdd\xe4\xbd\x92\x55\x05\x6b\x74\x13\x91\xa1\xf6\xa0\xc1\xde\xf4\x3d\xd8\x57\x74\x7b\x67\x18\x81\x3b\xe3\x61\x67\x7a\xcc\xf0\xfd\x33\x3c\x3d\x6f\xe0\xe1\x7e\xb5\xf9\x22\xe5\xa8\xeb\x5f\xba\x45\xa8\x7b\x83\xc4\x9d\xa6\xa6\x47\x27\xa5\x19\x46\xeb\x18\x16\x52\x8c\x5b\xb8\x08\xa1\x50\x2f\xb7\xab\xac\xbd\x68\xee\xe0\x2a\xc6\x0b\x59\x4a\x19\x02\xec\x0d\x77\x50\x30\xc2\xf5\x37\x50\x31\x4a\x11\x82\xd3\xd4\x22\x14\x26\x49\x05\xa3\xfa\x89\xee\xd5\xd4\xa8\x7e\x20\x77\xb6\xf1\x09\xaa\x2a\x08\xa1\x30\xea\x49\x0f\x18\x23\x98\x61\xec\x71\x40\x62\x0f\xef\xb0\x14\xbb\x89\xea\x7f\xa9\x45\x08\xf9\x30\x43\x0d\xfe\xc9\xc6\x77\xb9\xe9\x1b\xd7\xfa\xec\x9d\x02\x38\xe2\x21\x3c\xda\x14\x81\xfa\x3e\x51\xcd\xc6\x52\xca\x27\x1d\xa9\x89\xb1\x84\xc5\xd7\x71\xab\x8e\x54\x61\xd4\x1a\x7f\x4f\xe8\x79\xf3\x36\xe2\xec\xb1\x04\x74\xce\xba\x32\x48\x21\xdc\x21\x9b\x2e\x75\xb6\x2e\xf1\x21\x5c\xcd\xc3\x19\x90\xbb\x54\xf6\xa9\xc6\xd3\x6c\xa5\x10\xa7\x31\x8e\xda\xe9\x21\x8f\x32\xf9\xa8\xcc\xce\x4c\x3e\xc3\xec\x40\x53\x03\x8b\xfc\x43\x96\xe7\x0a\xb5\xf2\xb7\xda\x63\x6a\xaa\xfc\xa0\xaf\x71\xc4\xf4\x84\xca\x8f\xf2\x03\x4d\x43\x39\xdb\x8a\xd3\xed\x0e\xc9\x79\x4d\xd7\x70\xf9\x7f\xe6\xd1\xde\xb8\x36\xc6\xe5\xb1\x1d\xec\x3d\xc2\x59\x9f\xf3\x36\xd4\x9c\x26\x71\xfa\x98\x53\x39\x8e\x79\x29\x3c\x39\x82\xcb\x79\x39\x4b\x20\xd3\x4b\x91\x5f\xe1\x01\x7b\xff\xff\x1b\x00\x00\xff\xff\x6e\x76\x13\xc9\x42\x03\x00\x00")

func svcCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcCliHandlersHandlersGotemplate,
		"svc/cli/handlers/handlers.gotemplate",
	)
}

func svcCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/cli/handlers/handlers.gotemplate", size: 834, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x55\x4d\x6f\xe3\x36\x13\x3e\x8b\xbf\x62\xd6\x08\x5e\x48\x81\x42\xdd\xf3\xc2\x97\x75\xd2\x45\x8a\x26\x31\xb2\x46\x7b\x58\x2c\x0a\x9a\x1a\xcb\x84\x65\x52\x25\xe9\x2f\x08\xfa\xef\xc5\x90\x92\x23\xbb\xc9\x1e\x82\x88\x33\xcf\x7c\x3d\xf3\xe1\xa2\x80\x99\x29\x11\x2a\xd4\x68\x85\xc7\x12\x96\x27\xf0\x76\xe7\x1c\x67\x45\x01\x6f\x68\x77\x5a\x2b\x5d\x45\x19\x1c\x54\x5d\x83\xd9\xa3\x3d\x58\xe5\x11\xfc\x5a\x39\x58\xa9\x1a\x03\xf8\xe1\x15\x5e\x5e\x17\xf0\xf8\xf0\xb4\xf8\xc2\x48\x30\x17\x72\x23\x2a\x84\xca\x36\x12\x1a\x6b\xf6\xaa\x44\x07\x02\xaa\xb7\xf9\x0c\x64\xad\x50\x7b\x58\x19\x0b\x7e\x8d\xd0\xb6\xfc\x3b\xda\xbd\x92\xc8\x5f\xc4\x16\xbb\x0e\x5c\xff\x64\xcd\xc8\x0d\x63\x6a\xdb\x18\xeb\x21\x65\xc9\xa4\x32\xb5\xd0\x15\x37\xb6\x2a\x8e\x85\x46\x5f\x48\xa3\x3d\x1e\xfd\x24\xe8\x4c\x55\x23\x1f\x41\xc8\xfc\x73\x4d\xb1\x45\x2f\x4a\xe1\x45\x80\x28\xbf\xde\x2d\xb9\x34\xdb\xa2\xd9\x54\x05\x5a\x6b\xac\x9b\xb0\x4b\x4d\x65\xee\x36\xca\x17\xf4\x87\xba\x6c\x8c\xd2\x14\x98\x7c\x79\x2b\xb4\x0b\x59\x7e\x82\x3f\x03\xfa\xa4\x58\x52\x14\xb0\x20\x32\x7b\x0e\x58\xe2\xf6\x12\x26\x6d\xcb\x9f\x42\xb9\x73\xe1\xd7\x70\xd7\x75\x50\xb8\x3d\x15\xd1\x2c\x83\x72\xfe\xf5\x52\x3d\x61\x59\x20\xfe\x05\x0f\x60\xd1\xef\xac\x76\x20\xf4\xc0\x24\x2c\x85\xdc\xc4\x0e\x5f\xf6\x40\x1a\xad\x51\x7a\x65\x34\x87\x27\x0f\xca\x51\x47\xc8\x8f\x45\xd7\x18\xed\xd4\x52\xd5\xca\x9f\xc0\xac\x42\xab\xa4\xa8\x6b\xb4\xe0\x0d\x94\x4a\xd4\x39\x08\x5d\x42\x2d\x3c\x5a\x90\xb5\x71\x98\x47\xd0\xbb\x4f\xb6\xda\x69\x49\x39\xa5\x24\x84\x5b\xaa\x99\xcf\x42\xe8\x99\xd1\x3a\x07\xd3\x10\xce\x01\xe7\xbd\xf8\x35\x08\x32\x48\x9b\x25\x6f\xdb\x6f\x86\x26\x02\xae\xe6\x83\x5e\x68\x73\x08\xcd\xc9\xa0\x65\xc9\x5e\x58\x90\xb2\x2f\x6a\x66\xf4\x4a\x55\x8c\x25\x34\x60\x7f\xe7\xb0\x82\xfb\x29\x58\xa1\x2b\x3c\x87\x6b\x59\x92\xa0\xb5\xa4\x58\xa5\xff\x93\x32\x63\x49\xa2\x56\xe4\x10\xbe\x4c\x41\xab\x3a\x20\x92\x48\x24\xbd\xfb\x60\x8e\xff\x65\x45\x93\xa2\xb5\x39\x4c\xa4\xd0\xda\x78\x10\x4d\x53\x9f\x7a\xcf\x13\x72\xd4\xb1\xa4\x63\x2c\x91\xa3\x7a\x1c\x45\xfa\xf1\xf3\x62\x42\x2e\x0a\xa6\x70\x1f\x69\xbf\xe2\xca\x58\x4c\x29\x99\x7e\xc2\xff\x14\xf5\x0e\xdd\xc2\x7c\x7b\x9b\xcf\x9e\xfb\xc1\x4d\xa5\xe4\x6b\x14\x25\x5a\x97\x65\x39\x85\x4f\xda\xf6\x0e\x0e\xca\xaf\xe1\xc6\x23\x05\xe7\x5d\xc7\x92\x91\xb4\xd9\x54\x81\xda\xfb\x29\x21\x78\xbf\xaf\x91\x5f\x8a\x46\xc8\xc8\xd9\x8d\x1a\x40\x43\x17\x9e\xd1\xaf\x4d\xe9\x22\x30\x70\xdf\xb6\x0b\xf3\x87\x39\xa0\x85\x1b\xd5\x37\xe9\xb1\x5f\x0c\x18\x36\x84\x0f\x92\x60\x15\xf8\xa5\x30\x9f\x1b\x4e\xe1\x92\x91\x17\x3c\x44\x52\xd2\x68\x4b\x8c\xe8\xbc\xff\x9e\xb4\xed\x50\x53\xd7\xf1\xb6\x1d\xe7\x1b\x85\x93\x31\x54\x5d\x0b\xdd\x5e\xf2\x47\x2d\x4d\x89\x44\xec\x08\xf1\x86\xff\xec\xd0\xf9\x31\xee\x01\x3f\xc4\x85\x85\xc1\x01\x38\x9e\xdf\x1b\xc5\x07\xf5\xe2\xd4\x0c\x09\xb5\xdd\x80\xbd\x18\x15\xce\x79\x2f\xcf\xce\x94\xa5\x59\x90\xf4\x9d\x41\x5d\xf6\xdd\xec\xbf\x86\x0f\x36\x4c\x6c\xac\x26\xda\xba\x96\x00\xe3\x5e\x5e\x37\x92\xee\x47\x70\xf7\x9f\x1e\xdc\x03\xc0\xaf\x9a\x9b\xbf\xc7\x4e\xba\x9c\x16\x85\x75\x8c\xf9\x53\x83\x17\xbb\x08\xce\xdb\x9d\xf4\xb4\x54\xfd\x98\xc2\x8f\x9f\xce\x5b\xa5\x2b\xc2\xd3\x2f\xd1\x88\x01\xba\x42\x02\xe8\x72\x84\x97\x5f\x0b\x0f\x5b\x53\xaa\x95\x42\x17\x0f\xcc\xf9\x76\xd1\x9e\x87\x68\x17\xf6\x64\x9a\xde\x8e\x13\xc8\xe2\xfa\xb2\x78\x8f\x66\xfe\x38\x6c\xd1\x77\xd4\x65\xba\xc1\x53\xb8\x40\x31\xa3\xec\xd2\x59\x7b\x26\x35\xb8\x35\xf0\x91\xe3\x70\x2e\xcc\xb0\x83\x30\x05\x72\xc9\xc6\x07\x84\x96\xb2\xeb\xe3\xff\x6a\x93\x43\x2e\x03\x39\xd9\xd5\x06\xf4\xb3\xf8\x1b\x39\xb9\xca\x4b\xfa\xe3\xe0\x97\xcf\xe2\xff\x1c\xb6\x25\xdc\x0e\x3f\x6e\xfc\xf9\x21\xbb\x46\x84\xb4\x69\x7f\x1b\xa1\xc6\x3d\x49\x86\xd3\xb9\x79\x3f\x9d\x21\xb1\xb0\xb5\x6a\x05\xfb\x1c\x4c\xd0\x49\x7f\xe4\xa1\x8e\x74\x93\xf1\xb4\xcf\xfa\xff\xa4\x8c\x0b\x1e\x1d\x4f\xe9\x48\x12\xd3\xe1\x99\xc3\x26\x87\x7d\x98\xe8\x2e\x9c\xcb\x78\x7c\x23\x74\x7c\x7e\x6f\xb7\x25\x4c\xe1\x5c\xc0\xef\x46\xe9\xf4\x76\x5b\xe6\xef\xa2\x39\xd9\x44\xaf\x9c\xf3\x2c\x1b\xdc\xf5\xcc\x48\x7f\x8c\xbc\xff\x1b\x00\x00\xff\xff\x43\x07\x73\x2b\xec\x08\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 2284, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\x4d\x6f\xdc\x38\x12\x3d\x4b\xbf\xa2\x22\x78\xe1\xee\x40\x66\xdf\x13\xf8\xb0\x9b\x64\x77\x7d\xc8\x07\x62\x0f\xe6\x10\x04\x01\x5b\x2c\xa9\x09\x53\x24\x43\x52\xdd\xee\x11\xf4\xdf\x07\x45\x4a\x6a\x79\x2c\xcc\xe4\x10\x74\xcc\x8f\xc7\x57\xef\xd5\x87\x76\x3b\x78\x67\x04\x42\x83\x1a\x1d\x0f\x28\x60\x7f\x86\xe0\x3a\xef\x59\xbe\xdb\xc1\x57\x74\x9d\xd6\x52\x37\x69\x0d\x4e\x52\x29\x30\x47\x74\x27\x27\x03\x42\x38\x48\x0f\xb5\x54\x18\x0f\xbf\xff\x0c\x9f\x3e\x3f\xc0\x87\xf7\x77\x0f\xaf\xf2\xdc\xf2\xea\x91\x37\x08\xfe\x58\xe5\xb4\xfb\x30\x9d\x85\xca\xe8\xc0\xa5\xf6\xd0\x62\x38\x18\xe1\x21\x18\x68\xf9\x23\x82\xd4\x42\x1e\xa5\xe8\xb8\x02\xd4\xc2\x1a\xa9\x83\x87\xda\x99\x16\x3c\xba\xa3\xac\xd0\x97\x84\xe4\xf0\x67\x87\x3e\x00\xd7\x02\x1c\x7a\x6b\xb4\x47\x08\x67\x8b\x11\x89\x8e\x12\x33\xe3\xf1\x82\x52\x02\xf7\x70\x42\xa5\xe8\x17\x75\x65\x04\x3a\x4f\x00\x84\x27\x70\xfc\xbb\x36\x6e\xbc\x18\xd1\xca\xb8\xc0\x29\xe2\x1a\x4c\xe7\xc0\x77\xd6\x1a\x47\x22\x05\xc7\xb5\xa7\xff\xd3\x73\x92\x2b\xf9\x07\x0f\xd2\x68\x42\xab\x8d\x6b\x79\xf0\x0c\xee\x02\x70\xe5\x0d\x48\x5d\xa9\x4e\xa0\x9f\xd9\x40\x2b\x85\x50\x78\xe2\x0e\x3d\xcb\x73\xd9\x46\xa0\x4d\x9e\x15\x75\x1b\x8a\x3c\x2b\x1a\xa3\xb8\x6e\x98\x71\xcd\xee\x69\xa7\x31\xec\x48\x31\x7c\x0a\x45\x4e\x9b\x32\x1c\xba\x3d\xab\x4c\xbb\x6b\xcc\xcd\xa3\x0c\x3b\xfa\x37\x61\xd3\x11\xbb\x87\xa2\xef\xd9\x97\xff\xdc\x45\xe4\x2f\x3c\x1c\xe0\x66\x18\x8a\x7c\x1b\x8d\xf8\x30\x4b\x5b\x19\xa5\xb0\x0a\x7e\x8a\x31\x1c\x16\x92\x41\x38\xf0\x00\x95\x69\x2d\x09\xc2\x35\x70\x21\x26\x1f\x28\xb8\x6b\x4f\x60\x2d\x72\x1d\x48\xf6\x3d\x42\xe7\x51\x90\xbe\x1c\x0e\xa8\x2c\x3a\xf0\xc1\x75\x55\x28\x69\x7b\x7c\x6a\xfd\x25\xa9\x83\x01\x4e\x70\x5e\xea\x46\x21\x58\xee\x78\x8b\x01\x1d\xe5\x15\xad\xdf\x69\xe0\xc9\x59\x57\x82\x0c\xd7\x9e\x1e\xab\x3b\x15\x1d\xaa\x3b\x5d\x91\xfa\x23\x65\x8d\x64\x90\x01\x63\x63\x46\x83\xa1\xbb\x16\xdd\xcd\xf4\x20\x01\xee\xb9\x97\x9e\xc1\x7f\x8d\x03\x7c\xe2\xad\x55\x58\xc2\xd9\x74\xd0\xca\xe6\x10\xc0\x72\x4f\xd9\xb1\x90\x8a\x08\xce\x0f\xa5\x77\xac\x33\xa2\xab\x30\xca\xc0\x35\x1c\x42\xb0\xec\xff\x5c\x0b\x45\x1c\x4f\x32\x1c\x00\x79\x75\x18\x93\x1c\x36\xd3\xeb\x5b\x38\x49\x87\x02\x3a\x9b\x40\xbd\xc5\x4a\xd6\xb2\x02\xcb\xc3\x81\xc1\xe6\x2e\xf2\x93\x9e\xf0\xf7\x7c\xaf\xce\xc0\xa1\x95\x3e\xa4\x02\x01\x81\x5e\x36\x9a\xae\x4a\x7d\x34\x8f\x18\xa5\xbc\x4f\xb6\xcc\x05\x15\x29\xe2\x73\xb3\x93\x19\x04\x31\x29\xc9\xb6\x4b\x75\x2b\x25\x51\x87\xe7\xea\x2e\x8c\xbb\xd4\xa6\x3a\x53\x05\x27\x38\x14\x7f\x67\x23\x55\x51\xd2\x4a\x92\xc2\x2d\xa6\xb4\xba\xf0\x95\x3a\xa0\xab\x39\x25\xd4\xba\x13\x04\x36\x3f\xb6\xde\x1f\x3a\x9f\xda\xd3\x58\x90\xbb\xe8\xc3\x27\x3c\xbd\x1b\xe3\xa9\x4c\xbb\x97\x3a\xea\xd4\x8e\x14\x17\xc6\x96\x63\x17\x09\x9d\xd3\x20\x63\x26\x13\xc1\x8a\x2b\x85\x2e\x25\xf3\x48\x96\xe5\x31\x9c\x17\x82\xf6\x79\xdf\x3b\xae\x1b\x84\x2b\x09\x6f\x6e\x81\x4d\xe7\x3f\x26\x33\x86\x21\xcf\xfa\xfe\x4a\xb2\x4f\xbc\xc5\x61\x98\xee\x03\xc0\x1c\x04\x9b\x16\xf3\xbe\xbf\xa1\xd5\x61\xc8\x87\xe7\xb5\xfa\x0b\x8f\x50\x76\xc2\x66\xc1\x70\x0b\x8b\x77\x37\x55\x78\x82\xb1\x8f\xb0\x77\xe9\xb7\xa4\x6c\x78\x6d\xf7\xac\xef\xff\x67\xe8\x18\x5c\x49\xf6\x35\x75\xd7\x87\xb3\xc5\xf1\xea\x16\x36\x2f\x0f\xa5\xb6\xbb\x38\x55\x02\x3a\x67\xdc\x16\xfa\x3c\xcb\xa6\xb6\x1c\x17\x89\x30\xb2\x15\x0d\x88\x13\x71\xd8\xe6\x59\x26\xeb\x78\xf4\xd5\x2d\x68\xa9\x22\x46\x36\xba\xa2\xa5\x8a\x30\x79\x96\x0d\xf9\xbc\x3a\xbd\xc0\x7e\x85\xdb\xb6\x24\x94\x3c\x1b\xf2\xbe\x4f\xf2\x92\xb8\x1f\xa9\xa4\x96\x0a\xc7\xa2\xbd\x0a\x18\x15\x4e\xbe\x2d\x45\xbf\x0a\xb8\xa6\x7b\x12\x9e\xc0\xd6\x42\xf4\x10\xe9\x2d\xef\xa6\x13\xf7\xb1\x06\xb7\x2f\x93\xe0\x59\xf0\x84\xbd\x6e\xdd\x34\x05\xe7\x1a\xea\xc9\xa8\x79\x1e\x2e\x96\x93\x09\x0b\x77\x08\xfd\x27\x45\x34\x62\xac\x69\xf8\x22\x09\xe2\xbd\xe3\x6c\xa8\x67\x7f\x49\xae\xc8\x28\x9d\x5a\xf1\x72\xcd\xcd\xe4\xe7\xbc\x73\x1c\x4d\x4a\xcb\x51\xfd\xe4\xd5\xd2\xb3\xdf\x1d\xb7\xff\x56\x0a\x4e\x8e\x5b\x9f\x1a\xec\xac\x5b\x2d\x51\x09\x9a\x2e\x63\x65\x5e\x4a\x35\x1a\x1b\x3b\xd3\xca\xc8\x64\x1f\xe7\x71\x1c\x3f\x63\x7e\xf3\xd3\x87\x0d\x4d\x7f\x6b\xd5\x99\x1a\x0c\x35\xcd\x40\xe0\x8b\xe1\x4d\xdd\x02\x8f\xe8\xce\x97\xd1\x2e\x63\xe7\x9d\xe7\x24\xe1\x7d\xb6\x34\x33\xa8\x6f\x96\x8b\xb6\x55\x71\x4d\x33\x93\x26\x0d\x0a\xba\xb6\x3f\x83\x26\xf5\xd3\x2c\xc5\xa7\xf8\xd1\x20\xd2\xe7\xcf\x1e\x89\x02\xc5\x6c\x51\xb0\x85\x0e\x9b\x0b\x9b\x12\x8a\xfb\xc0\x43\xe7\x8b\x12\x8a\x2f\x52\x37\xc5\x36\x9f\x5a\xc2\xeb\x45\x4f\x78\x79\x13\x56\x94\x28\x2f\x0c\x18\x63\x3e\x38\xa9\x9b\x98\x3c\xe3\xd7\x8c\xa0\x1c\x68\xb9\xfd\x96\xb6\xbe\x27\xc9\xfb\x81\xcc\xa6\x26\xf6\x4f\xcd\x2a\xcb\x8a\x45\xfe\x14\x6f\x60\x06\x18\xca\x11\x22\x99\x9e\x0d\x79\x9e\x91\x13\x3f\x88\x52\x4c\xda\x08\x3d\xd3\xeb\x53\xf3\xf8\x51\x82\x79\xa4\xed\x89\xe0\x37\x7c\xfa\xfe\x16\x5e\x99\xc7\x94\x80\x96\x6b\x59\x6d\xea\x36\xb0\x7b\xeb\xa4\x0e\xf5\xa6\xf8\x30\x41\xcc\xee\x5d\xff\xcb\x5f\x83\x30\xe8\x41\x9b\x00\xf8\x24\x7d\x78\x0b\x1e\x71\x69\xfa\x9c\x37\x9e\x35\xa6\x20\x52\xdb\xed\xd8\x9a\x04\x2a\x0c\xb8\x99\x18\xc4\xbd\x4b\x00\x52\x57\x25\xfc\xb8\x44\x30\x2b\xf9\xeb\x9a\xc9\x9a\x6e\xc1\xed\x2d\x3c\x53\x6f\x2c\xb1\xd5\x1e\x0b\xb7\x0b\xf2\x9b\xd5\x23\xdb\xa9\xe6\x9e\xa9\x3e\xe4\x7f\x06\x00\x00\xff\xff\x0d\x71\x1c\xb4\x1c\x0c\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 3100, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\x4d\x6f\xdb\x38\x13\x3e\x8b\xbf\x62\x6a\x14\x2f\xec\xc0\x91\xde\x73\x81\x5c\xea\x64\x9b\x60\x37\x1f\xc8\x1a\xbb\x87\xa2\x28\x68\x69\x2c\x11\xa6\x48\x85\xa4\x9d\x78\x05\xff\xf7\xc5\x90\x92\xad\xc4\x8e\xec\x6e\x0e\x45\x6a\x71\x3e\x9e\x79\x9e\x99\x11\x95\x24\x30\xd1\x19\x42\x8e\x0a\x0d\x77\x98\xc1\x6c\x0d\xce\x2c\xad\x8d\x59\x92\xc0\x23\x9a\xa5\x52\x42\xe5\xe1\x19\x3c\x0b\x29\x41\xaf\xd0\x3c\x1b\xe1\x10\x5c\x21\x2c\xcc\x85\x44\x6f\x7c\x79\x0f\x77\xf7\x53\xb8\xba\xbc\x99\x7e\x62\xac\xe2\xe9\x82\xe7\x08\x76\x95\x32\x3a\x9d\xb6\xb6\x50\x19\xbd\x12\x19\x5a\xb0\x68\x56\x68\xce\xad\xc8\x10\x66\x42\x65\x42\xe5\x16\xe6\xda\x80\x2b\x10\xf2\xc7\x87\x09\x38\xc3\x95\xad\xb4\x71\x3e\xc1\x8d\x83\xa5\x13\x52\xfc\x83\xd6\x9b\x6c\x4f\x93\xdc\x54\x69\xfc\xa7\x0f\x17\x33\x26\x4a\x7a\x08\x43\x16\x0d\x14\xba\xa4\x70\xae\x1a\x30\x16\x0d\x72\x2d\xb9\xca\x63\x6d\xf2\xe4\x25\xa1\x93\x54\x2b\x87\x2f\x6e\xe0\xcf\x74\x2e\x31\xee\x98\x50\xcc\xa4\x44\xc7\x33\xee\x38\xf9\xd3\x83\x6d\x4a\x18\xe4\xc2\x15\xcb\x59\x9c\xea\x32\xc9\xf5\xf9\x42\xb8\x84\xfe\xbd\xc6\x44\x6e\x6d\xed\x04\x4f\xa4\xc8\xa2\x6a\x06\x83\xba\x8e\x1f\xbe\xde\x78\x9c\x0f\xdc\x15\x70\xbe\xd9\x0c\xd8\x88\x79\xa6\x6e\xf9\x02\xbf\x3d\x3e\x4c\x42\x3d\x50\xf2\x05\x5a\xe0\x60\xd1\x81\x9e\x03\xaa\xac\xd2\x42\x39\x0b\x7c\xc5\x85\xe4\x33\x89\xc0\xe9\xdc\x13\x56\xd7\xdf\xf4\x1d\x2f\x11\xe2\x26\x5d\x4c\xbf\x36\x9b\x96\x9b\xf9\x52\xa5\x6f\x12\x0c\x53\xf7\x02\x0d\x13\xf1\x24\xfc\x1d\x77\xd2\x5c\xb5\xff\x1b\x41\x35\x8b\xfb\x13\x40\xcd\xa2\xa0\xea\x7d\xe5\x84\x56\x16\xbe\x5c\xc0\xf7\x1f\xaf\x98\x6b\x74\x0a\x06\x35\x8b\x22\x38\x74\xfc\x15\xe7\xda\xe0\xb0\xe5\x7f\xaa\x1b\x64\xa3\x31\x8b\x36\x2c\x32\xe8\x96\x46\xc1\xff\xc8\x35\x38\xd4\x9e\xe9\xba\x86\xa9\xfe\x43\x3f\xa3\x79\x0d\x10\x36\x1b\x16\xd5\xb5\xe1\x2a\x47\xf8\x2c\x08\xd6\xf6\xfc\x16\x5d\xa1\x33\x4b\x16\x51\x5d\xb7\xee\x9f\x45\x53\xd9\x97\x37\xf8\xee\xf0\xb9\x21\x8e\x45\x51\x94\xba\x97\x31\xfd\xdd\xf2\x15\xd7\xf5\xd6\xb5\xa5\xce\x5b\x5c\x62\xaa\x33\xcf\x7b\xc7\xe2\x11\x9f\x96\x68\x83\xc1\x95\x3a\x68\x60\x2b\xad\x2c\x7a\x8b\x57\xd4\xc6\x71\x4c\x0f\x89\x90\xba\x3e\x27\xc1\xa8\x82\x0d\xdb\xf8\x26\xda\x11\x03\xa2\xac\x24\x96\x48\x5a\xd2\xd4\x1c\x51\x50\x28\x87\x66\xce\x53\x64\x6e\x5d\x61\x37\x8e\x75\x66\x99\x3a\xa8\xd9\x71\x1e\x0f\xd0\x08\xf0\x86\xc7\x6b\xae\x32\x89\x86\xed\xc0\x07\xe4\x4d\x18\xbf\x08\x3a\xd9\x9d\xde\x15\x72\x7a\x0d\x47\xa1\xfa\x81\x18\x5a\x38\xdb\xa5\x1a\xed\xc2\x6f\xd1\x1f\x1e\x12\x83\x4f\x70\xd6\x1d\x8a\xcf\x22\x6e\x14\x9d\xae\xab\x16\xd4\x08\x86\xfb\x46\x41\xd5\x8e\xd5\x18\xd0\x18\x4d\xc9\x59\xf4\x93\x42\x57\xfe\x09\xc1\xa6\x9e\xda\xe3\x33\xcc\x09\x75\x0b\x61\xf3\x58\x46\x2c\x12\x73\xef\xf4\xe9\x02\x94\x90\x14\xaa\x9d\x14\x25\xa4\x8f\xd7\x9d\x1e\x83\x55\x7c\x0a\xb4\xd1\x98\xdc\xd9\x86\xd5\x75\x10\x8a\x64\x6a\xa8\x0e\x5d\x7d\x9c\x67\x7a\x3f\xf4\x0c\x00\x08\x5a\x61\x6f\x16\x7a\x70\x68\x2c\x7e\x23\xa1\x5c\xc1\x1d\xc9\xb0\x42\x43\x0b\xd0\x37\x7a\x58\x7b\xfb\xfd\x66\x9a\xc8\x4e\x03\x87\xa5\x45\x73\x9e\xe9\x92\x0b\xd5\x67\x1c\xc3\x83\x11\x25\x37\x42\xae\xc9\x65\xbe\x94\x20\x94\xdf\xbd\x9d\xf5\xd9\x57\xc7\xf0\xe7\x7e\x97\x50\x2d\x8f\xf8\xb4\xeb\xca\x9a\x5a\xa2\xf3\xab\x2b\x3d\xb5\xd4\x97\x8b\xd6\xe7\x90\x3c\x7b\xed\xd5\xd1\xf3\x69\x4f\x29\xa2\x68\x22\x05\x0d\xcd\xc7\xa5\x0a\x9d\xd1\xab\x55\x30\xf9\x0f\x62\x55\x72\x7d\xaa\x54\x21\xc7\x7b\x5a\xa5\xbe\xda\x7e\xad\x42\x84\xf7\xc5\x22\x30\x27\xca\x45\xa6\x5b\xc1\x2a\xb9\x3e\x6d\xa2\xba\x33\x28\xd7\x3d\xf3\x15\x5e\x0a\x27\x89\xd6\xfb\xfe\x38\x28\x5a\xf0\x38\x26\xda\xa9\x82\x04\xf9\xfa\x25\x3e\x69\xc0\x7a\x0b\x39\x24\xda\x16\xc1\x89\x9a\xd9\x8a\x58\xdc\x36\xd2\xaf\x2a\x66\xab\xbe\x31\xfb\xb8\x62\xef\x6f\xc4\x56\xb0\xde\x8d\x78\xe2\xae\x3b\x2a\x57\xef\x46\x7c\x35\x65\x7d\x75\x1c\xd6\xab\x29\xf1\x17\x36\x62\x8b\xe7\xc3\x1b\x31\x49\xe0\x1a\x65\x85\xc6\xb2\x80\x7e\xef\x8e\x79\xf8\x65\x5f\x66\x70\xd6\x9a\xc6\xb7\x97\xa3\xb7\x16\x84\x95\xee\x2c\x8b\x31\xac\x3c\x60\x2f\xff\x59\x99\xf9\xd7\xb0\x98\xc3\xaa\xfb\x5a\x0e\x9f\x05\x08\x0b\x5c\x7b\xa5\xb3\x8c\xbe\xbd\xb4\x2b\x88\xde\x36\x0d\xdd\x81\x4a\xee\x60\xb8\x18\xc1\x73\x21\xd2\xc2\x9b\x4a\x09\x92\xc4\x6a\xa2\x70\x95\xf9\x7b\x1d\x7d\xe6\xc4\x13\xae\xb4\x12\x29\x97\xd7\xc8\x33\x34\xbf\xe3\x9a\xbe\x19\x5c\x93\xc8\xea\xd0\x2f\xc2\x41\xca\x15\xcc\xb0\x0d\x91\xa6\x68\x2d\x66\x94\x1b\x85\x2b\xd0\x34\x99\x9b\x1b\x2e\x5c\x6c\x8b\xfd\x5b\xb8\xe2\x2f\x2e\x97\x18\x6e\x1d\x54\xec\xf7\xff\xff\x18\x1d\x35\x7c\x07\xdd\x70\x31\xda\x45\xf0\xd7\xd7\xad\x76\xa9\x7b\x61\x1b\xf6\x6f\x00\x00\x00\xff\xff\xc4\xf5\x39\x27\xa1\x0e\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 3745, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate": cmdNameMainGotemplate,
	"cmd/NAME-server/main.gotemplate": cmdNameServerMainGotemplate,
	"handlers/handlers.gotemplate": handlersHandlersGotemplate,
	"handlers/hooks.gotemplate": handlersHooksGotemplate,
	"middlewares/endpoints.gotemplate": middlewaresEndpointsGotemplate,
	"middlewares/service.gotemplate": middlewaresServiceGotemplate,
	"svc/cli/handlers/handlers.gotemplate": svcCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate": svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate": svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate": svcEndpointsGotemplate,
	"svc/transport_grpc.gotemplate": svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate": svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate": &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": &bintree{handlersHooksGotemplate, map[string]*bintree{}},
	}},
	"middlewares": &bintree{nil, map[string]*bintree{
		"endpoints.gotemplate": &bintree{middlewaresEndpointsGotemplate, map[string]*bintree{}},
		"service.gotemplate": &bintree{middlewaresServiceGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"cli": &bintree{nil, map[string]*bintree{
			"handlers": &bintree{nil, map[string]*bintree{
				"handlers.gotemplate": &bintree{svcCliHandlersHandlersGotemplate, map[string]*bintree{}},
			}},
		}},
		"client": &bintree{nil, map[string]*bintree{
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

