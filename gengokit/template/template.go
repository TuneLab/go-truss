// Code generated by go-bindata.
// sources:
// NAME-service/cmd/NAME/main.gotemplate
// NAME-service/cmd/NAME-server/main.gotemplate
// NAME-service/handlers/handlers.gotemplate
// NAME-service/handlers/hooks.gotemplate
// NAME-service/middlewares/endpoints.gotemplate
// NAME-service/middlewares/service.gotemplate
// NAME-service/svc/client/cli/handlers/handlers.gotemplate
// NAME-service/svc/client/grpc/client.gotemplate
// NAME-service/svc/client/http/client.gotemplate
// NAME-service/svc/endpoints.gotemplate
// NAME-service/svc/server/cli/cli.gotemplate
// NAME-service/svc/server/run.gotemplate
// NAME-service/svc/transport_grpc.gotemplate
// NAME-service/svc/transport_http.gotemplate
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _cmdNameMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x57\x5f\x6f\xdc\x36\x12\x7f\x96\x3e\xc5\x44\xa8\x2f\x92\xab\x68\x9d\xe2\xee\x65\xd3\x7d\x48\xed\xf4\x2e\x40\xeb\x18\x5e\x37\x7d\x70\x8d\x03\x97\x1a\x49\xbc\x48\xa4\x42\x52\xbb\x36\x84\xfd\xee\x87\x21\xb9\xb2\x9c\xda\x71\x83\xe6\x21\x4b\x91\x33\xbf\x19\xce\x9f\xdf\xd0\x8b\x05\x9c\xaa\x12\xa1\x46\x89\x9a\x59\x2c\x61\x73\x07\x56\x0f\xc6\x14\xf1\x62\x01\x97\xa8\x07\x29\x85\xac\xfd\x1e\xec\x44\xdb\x82\xda\xa2\xde\x69\x61\x11\x6c\x23\x0c\x54\xa2\x45\x27\x7c\xf6\x01\xce\x3f\x5c\xc1\xbb\xb3\xf7\x57\x2f\xe8\xfb\x23\x6a\x23\x94\x5c\xc2\x38\x16\x61\xbd\xdf\xcf\x0e\xe0\x8c\x59\x9c\x9f\xd2\xf7\x7e\x1f\xc7\x3d\xe3\x9f\x58\x8d\xd0\x31\x21\xe3\x58\x74\xbd\xd2\x16\xd2\x38\x4a\x50\x72\x55\x0a\x59\x2f\xfe\x67\x94\x4c\xe2\x28\xa9\x5a\x56\xbb\xdf\xce\xd2\x8f\x32\xf4\xbf\xb1\x9a\x2b\xb9\x0d\x4b\x21\x6b\xb7\x6b\x45\x87\x49\x1c\x47\x49\xad\x5a\x26\xeb\x42\xe9\x7a\x71\xbb\x90\x68\x17\x5c\x49\x8b\xb7\x0e\xa0\x56\xaa\x6e\xb1\x98\x89\xd4\xba\xe7\x5e\x4d\xd8\x66\xd8\x14\x5c\x75\x8b\xfe\x53\xbd\x40\xad\x95\x36\x74\xb2\x58\xc0\x15\xc5\x61\x8d\x7a\x2b\x38\xc6\x51\x32\x8e\xc5\x7b\xe7\xf4\x05\xb3\x0d\xbc\xda\xef\x61\x61\xb6\x7c\xc1\x5b\x81\xd2\xd2\xcf\xa2\x61\xb2\x6c\x91\xf4\x23\x32\xe0\x4f\xe0\x19\x45\xef\x4a\xd4\x58\xdb\xff\x35\x05\x92\x4c\xe2\xa8\xdf\x38\xc1\x8b\x9f\x1e\x8a\x26\x71\x16\xc7\x5b\xa6\x29\xb2\xff\x85\x15\x84\xb0\x15\x17\x4c\x1b\x7c\x2f\xed\xb4\x4b\x11\x2c\xd6\x7d\x2b\xc2\x16\x05\xbf\x38\x55\x5d\xcf\x78\xd8\xf1\xc1\x28\x7e\xd7\xac\xaf\xfc\x4e\xbf\x29\x2e\xb1\x16\xc6\xa2\x1e\xc7\x22\x84\xa6\x38\x67\x1d\xee\xf7\xf4\x85\x9a\xac\x57\x83\xe4\x2e\xcb\x69\x06\x63\x1c\x29\x53\xbc\xbb\x15\x36\x35\xc3\xc6\x6f\x66\xf1\x3e\x8e\xed\x5d\x8f\xd0\x20\x2b\x51\xaf\x51\x0b\x34\x70\x7d\xe3\xbd\x0a\x00\x69\x03\xc7\xf3\xf3\x0c\xd6\x68\xd3\x2d\x6b\x83\xf3\x99\xf7\x8f\x2c\x70\x25\x8d\x05\x8d\x9f\x07\xa1\xb1\xbc\x60\xda\x1a\x10\xd2\xc2\x0a\x7e\x88\xa3\xde\x7d\x2e\xbf\xb8\xf3\x39\x21\xe5\x90\x2c\x93\xfc\xa1\x62\x16\x47\xa2\x82\x16\x65\xea\x14\x33\x78\xb1\xfa\x02\x79\x8c\xa3\x48\xa3\x1d\xb4\x84\xaa\xb3\xc5\x3b\xf2\xa2\x4a\x93\x2d\x6b\x07\x84\xa3\xcf\xc0\x99\x94\xca\xc2\x06\xc1\x90\x25\x10\x12\xec\x4e\xbd\x81\x6e\x30\x16\xa8\x2a\x99\x90\xc0\x2c\xb4\xc8\x8c\x05\x25\x11\x5e\x2e\x5f\x02\x6f\x98\x66\xdc\xa2\x4e\x72\xd8\xb2\x36\x8b\xa3\x7d\xf0\xfd\xfa\xf5\xcd\x2c\x63\x57\x5a\x74\xeb\x9e\x71\x4c\x0f\x87\x59\x1c\x1d\x37\xb0\x02\xd6\xf7\x28\xcb\xf4\xb8\xc9\xc1\x1d\x15\x45\x91\xc5\x07\x4f\xa5\x68\x29\xea\x4f\x45\xd6\x81\xa7\x59\xb0\x42\x57\x9c\xdd\x70\xdd\x6b\x21\x6d\x95\x26\x47\xdb\x24\x9f\xd2\x94\x1e\x37\x3e\x93\x8b\x05\x84\xd4\x02\xde\x0a\x63\x0d\x58\x05\x8c\x5b\x60\x06\x6c\x83\x40\x36\xad\x50\x92\xb5\xae\x28\x72\xd8\x0c\xd6\x53\x4e\xb0\x81\xb7\x82\x02\x53\x22\x69\x12\x1c\x69\x31\x6e\x87\xa0\x01\x42\x1a\x8b\xac\x04\x55\x01\x67\x6d\x4b\x1e\x86\xa2\x82\x52\x68\xe4\xb6\xbd\x2b\x7c\xb7\x0a\x03\x25\x45\x94\x3c\x68\x5b\xb5\x3b\xa0\x95\x58\xa1\xc6\x72\xf2\xc5\xf9\xb8\x41\x07\x87\x65\x0e\x46\x48\x8e\x20\xaa\x09\x77\xd7\xa0\x3e\x1c\x4f\x46\x08\xad\xd2\xaa\x0b\x0c\x19\xb0\x72\x90\x64\x52\x55\x4f\x58\x32\x68\x61\xe8\x1d\x03\xcf\xd5\x08\x6c\xa7\x86\xb6\xbc\xf7\xa3\xf0\xf9\x99\x1a\xc5\x15\xf1\x18\x47\xd4\xce\x3e\x61\xe6\x41\xcb\xc4\x11\x31\x65\xf1\x91\xe9\xf4\x1f\xe1\x3c\x87\xc4\xaf\x92\x1c\x92\xff\xb8\x55\x6a\xb2\x70\x5b\x43\xec\x42\xe5\xd8\x20\x58\xcd\xa4\xf1\x14\x5c\x29\x0a\x95\x01\xfe\xdb\xe5\x2f\x60\xec\x5d\x8b\x59\x92\x79\xab\x69\x1c\x39\x66\x7a\x5b\x96\x1a\xfc\xbf\x15\x38\xa3\xa1\x64\x12\x3a\x2d\x58\x59\x3a\x83\xce\xe8\xd5\xd5\x05\xd0\x06\x1a\x43\x41\x61\x65\x69\xb6\x9c\x00\x1d\x29\x3e\x8d\x44\xa7\x13\xd2\xf2\x5f\x27\xff\x3c\xa1\x45\x7d\x79\x71\x0a\x29\x81\x66\x8f\xa3\x66\x07\xb2\x46\xda\xe4\xad\x80\x5e\xa3\x19\x3a\x34\x20\x15\x18\xcf\x51\x50\x0a\xc3\x69\xc2\xdd\x81\xb9\x33\x16\xbb\x1c\x98\x2c\x01\x6f\x7b\xe4\xd6\xc0\x60\x28\xb4\x56\x39\xa4\x5e\xab\xad\x28\xd1\x67\xd3\x65\xfe\x81\x61\x79\xc0\x0c\x25\xe7\xad\xf5\x94\x52\x2a\x3f\x8d\x55\x8b\x9c\x46\xae\x90\x0e\x8e\x60\xc8\xab\x8d\x90\x4c\xdf\x39\xb3\x2e\xfe\x7e\x9b\x32\x12\x06\xa3\x59\xba\xcd\x57\x53\x66\x5c\x30\x5c\x8c\x8c\x43\x22\xd5\x2d\xd3\x42\x0d\xe6\xa0\xea\x98\x4f\x0f\xdc\x2a\x6d\x60\xa3\x6c\x13\xae\x04\x8d\x32\x76\xe9\xd2\x7b\x20\x8e\x38\x8e\xc6\x11\x34\x93\x35\xc2\x77\x1d\xda\x26\x87\xef\x98\xae\x1d\x35\x16\xa7\x0e\xee\xad\xae\x4d\xf1\x2b\xda\x86\x16\xb0\xdf\xc7\x51\x54\x99\x71\x74\xd2\xfb\x3d\x09\xba\x84\x9d\xe3\xee\xe7\x96\xd5\x44\xc7\xc9\x38\x5e\xa9\x5f\xd4\x0e\x35\x04\xa9\x24\xf7\x42\xd4\x45\x1f\xa4\x23\xc7\x8c\x2c\xa3\x2c\xe9\x11\x30\x55\xd5\x38\xce\x8d\xbe\x6d\x5b\x82\x34\x64\x93\x12\xea\x20\x7e\x33\xf4\x5c\x58\xb9\x8e\xf1\xa3\x24\x22\x3a\xfa\x39\xd0\x91\x32\xc5\xda\x96\xa8\x75\x0e\x89\x17\x55\x15\x1c\x99\xe5\x1f\x32\xc9\xa9\x8f\x09\xf8\xfa\x84\xe8\xd1\xc3\x5d\x90\xda\x19\x56\x6c\x68\xad\x49\xb3\xaf\xa0\xfd\x21\x93\xaf\x1d\xaf\x87\x0d\x57\x5d\xc7\x64\xe9\x8c\x65\xee\x36\xdf\x10\xd8\x57\x2e\xb2\x4f\xc2\x03\x1c\x19\x77\x87\x47\x82\xeb\x6d\xa1\x2c\x3d\xc8\x7e\x1a\x56\xe1\xbe\x19\xfc\x08\x3f\xf8\x48\x4d\x11\x74\x57\x0d\x54\xfb\x9a\x74\x42\x78\xdd\x8b\x20\xcd\x66\x39\x39\x34\x4b\xbf\x29\xc6\xf1\xdf\x8a\xe6\x3a\x3c\x3e\xe5\xa3\x08\xb5\x6f\x63\x37\x84\x7d\xd2\x44\x05\xc7\x13\x59\xbc\x58\x41\x92\x38\x4f\x02\x6a\x4e\xa2\xb0\x82\xfb\x87\x0e\x15\x52\x3a\x69\xe4\xf3\x93\x53\x7b\xfb\x91\xe6\xa9\xb9\x52\x6b\x1a\x6a\x81\xdd\x68\xa4\xd1\x64\x04\x6c\x8d\xa3\xeb\xe3\x89\x52\xee\xed\x71\x25\xa5\x37\xb6\x5c\x81\x23\x95\x33\xc1\xda\x74\x12\xcd\xfd\xe6\xef\xc2\x36\xef\xa5\x41\x3e\x68\x4c\xb3\xd9\xe6\x95\xe8\x50\x0d\x36\xa5\xa7\x65\xb1\x46\xae\x64\x49\x46\xe9\x7a\x04\xfa\x62\x45\xc3\xd4\x59\x7a\x32\x85\xae\xec\x61\xd7\x88\x96\x28\x84\xb9\x89\x45\xf8\xd4\xaf\x12\x1d\xfd\x2f\xc1\x4d\x53\xd4\xd4\x1e\xf3\xfc\x50\x52\x23\x37\x45\x9c\x74\x71\xda\x2a\xe3\x73\xf8\x45\x20\xef\x9f\x98\x2e\x90\xfe\xda\xb3\xcd\xbf\x14\xc3\xaf\x35\x95\x4b\xed\x92\x58\x54\x63\xa7\x2c\x4e\x34\x68\x7a\xe4\xa2\x12\x58\x86\xea\x9f\x17\xd7\x23\x61\x7a\x06\xff\x68\xeb\xaa\x3d\x44\xe2\x61\xa1\x86\xea\x76\xf5\x4a\xf5\x9d\x66\x54\xe1\xaf\x27\xd8\x8b\xf0\x32\x39\x57\xf0\x92\x5a\x44\x95\x2f\x69\x7c\x86\xf6\x3c\x50\x79\xf9\xc6\xbd\x31\x84\xac\x8b\x24\x7b\xae\x37\xb8\xbd\xa5\xc2\x09\x7f\x3e\x14\x3f\x31\xfe\xa9\xd6\x6a\x90\x25\xc9\x56\x4a\x83\xa0\xe3\x93\x37\x20\xe0\x47\xe7\x5c\x88\x6b\x46\x3b\xdf\xaf\x42\xfb\x11\xca\x3d\x08\x95\x95\xcb\x45\xca\xed\x6d\x7e\x98\xe5\xd7\xe2\x66\xb6\xfe\xde\xbd\xe4\xc8\x03\xb3\x13\x96\x37\x30\xbb\xf4\xf5\xc9\x0d\xa1\x7e\x0b\xcb\x38\x8e\xe1\xcc\xe0\x63\x34\xb2\x74\xc5\x7b\x4f\xed\x81\x0b\xe6\x16\x5f\x2f\x6f\xa8\xa7\x89\x6e\x9c\x9d\xe2\x57\xa6\x4d\xc3\x26\x9a\xf6\x45\xfb\x79\x40\x63\xa7\x66\x3b\xfc\xfd\x53\x4c\xc0\xe9\x41\xfb\x94\xb5\xad\x77\xcb\x95\xfb\x23\xbd\xf4\x4c\x33\x1d\x1e\x7e\x7f\xb6\xf1\x65\x05\x3d\x68\xa6\xc8\x7b\xba\x9d\x7c\x3c\x0c\xef\x7b\x17\x5d\x4a\xc2\x55\xfe\xa6\x73\x7f\x02\x7f\xce\xb7\x68\x56\xc6\xad\x4c\x13\x9f\x48\xb8\xf4\xde\x60\x09\x3b\x61\x9b\xa5\x2b\xda\x07\x82\x4f\x84\xf5\x01\x96\xa7\x6a\xb8\x44\xd3\x2b\x59\x3e\x8d\xb5\x9d\xcd\x67\x22\x1e\x9a\x8f\xcb\xe7\xba\x24\x7c\x9d\xc4\xfb\xf8\xff\x01\x00\x00\xff\xff\xbe\x75\xd1\x22\x6d\x10\x00\x00")

func cmdNameMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameMainGotemplate,
		"cmd/NAME/main.gotemplate",
	)
}

func cmdNameMainGotemplate() (*asset, error) {
	bytes, err := cmdNameMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME/main.gotemplate", size: 4205, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _cmdNameServerMainGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\xcf\x6a\xdc\x30\x10\xc6\xcf\x9a\xa7\x98\xea\x64\x43\x22\xdd\x0b\x3d\x79\x4b\x09\x5d\x92\x90\x38\xed\x59\x6b\x8f\x65\x11\x59\x5a\xa4\xb1\xb7\xc1\xf8\xdd\x8b\xed\xa5\xa4\x50\x68\x0e\x42\x33\xdf\xfc\x98\x3f\x9f\xd6\x58\xc5\x96\xd0\x52\xa0\x64\x98\x5a\x3c\xbd\x21\xa7\x31\x67\x05\x5a\xe3\x13\xa5\x31\x04\x17\xec\xae\xe1\xc5\x79\x8f\x71\xa2\x74\x49\x8e\x09\xb9\x77\x19\x3b\xe7\x69\x83\x0f\x0f\x78\xff\x50\xe3\xd7\xc3\x5d\xfd\x69\xcd\x7f\x50\xca\x2e\x86\xcf\x38\xcf\xea\x1a\x2f\xcb\xbb\x02\x1e\x0c\xd3\xfb\xea\x9a\x2f\x0b\xc0\xd9\x34\xaf\xc6\x12\x0e\xc6\x05\x00\x37\x9c\x63\x62\x2c\x40\xc8\xce\x1b\x2b\x41\xc8\x98\x25\x80\xd0\x1a\xbf\x45\xfc\xee\x18\x84\xb4\x8e\xfb\xf1\xa4\x9a\x38\x68\x1b\x6f\x5f\x1d\xeb\xf5\xf9\x68\xaf\x60\xbd\x6e\xfa\x4c\x69\x72\x0d\x81\x90\xf3\xac\xee\xb6\xb6\x8f\x86\x7b\xbc\x5d\x16\xd4\x79\x6a\x74\xa6\x34\x51\x92\xff\x03\x74\xe3\x9d\x84\x12\xa0\x1b\x43\xb3\x6d\x59\x94\x38\x6f\x73\x5e\xce\xad\x61\x42\xd3\xb6\x89\x72\xa6\x8c\xae\x43\xee\xe9\x0d\x7b\x33\x11\x9e\x88\xc2\x1f\xfb\x98\xc2\x6a\xf6\x7a\x53\x06\xb1\x7e\xea\xd1\xa4\x4c\x45\xb9\xaf\x7c\x8c\xd6\xae\xce\xb7\x71\x9d\xa0\x40\x4c\x26\xa1\x8f\xd6\xd2\xf6\xa9\xe3\x16\x82\x98\x41\x88\xab\xfc\x65\x2b\xdc\xd3\xe5\x18\x6d\x37\xf0\x4e\x14\x31\xab\x67\x6e\xe3\xc8\xe5\x3f\xc8\x2a\x06\xa6\x5f\x5c\xec\x7a\xa9\x7e\x3a\xee\x0b\xc9\x59\xde\x6c\xc4\x81\x3a\x33\x7a\xae\xdd\x40\x99\xcd\x70\x7e\xa9\xab\x8f\x77\x69\x8c\xf7\x94\xfe\xee\x54\x6d\x5a\x09\x62\x01\xb1\xbb\xa9\x9e\xc6\x50\x34\xde\xa9\x2a\x86\xce\xd9\x9b\xeb\x8d\x25\x2c\xf0\x3b\x00\x00\xff\xff\x52\x14\x86\x04\x9e\x02\x00\x00")

func cmdNameServerMainGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_cmdNameServerMainGotemplate,
		"cmd/NAME-server/main.gotemplate",
	)
}

func cmdNameServerMainGotemplate() (*asset, error) {
	bytes, err := cmdNameServerMainGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cmd/NAME-server/main.gotemplate", size: 670, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHandlersGotemplate,
		"handlers/handlers.gotemplate",
	)
}

func handlersHandlersGotemplate() (*asset, error) {
	bytes, err := handlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/handlers.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _handlersHooksGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\xc1\x0d\x80\x20\x0c\x05\xd0\xbb\x53\xf4\x4c\xa2\x1d\xc6\x09\x88\x7c\xab\x11\xa9\x69\xeb\x89\xb0\x3b\xaf\x77\x4e\xb4\x03\x24\xba\x86\xfd\xee\x2c\x68\xa2\xcf\x1d\x7c\xe5\x56\x2a\x8c\x03\xef\x57\x73\xc0\x37\x51\x3a\xd5\xe8\xd0\x02\x4a\x3c\xc6\x32\x03\x00\x00\xff\xff\xd6\x21\xab\x2e\x3e\x00\x00\x00")

func handlersHooksGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_handlersHooksGotemplate,
		"handlers/hooks.gotemplate",
	)
}

func handlersHooksGotemplate() (*asset, error) {
	bytes, err := handlersHooksGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "handlers/hooks.gotemplate", size: 62, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresEndpointsGotemplate,
		"middlewares/endpoints.gotemplate",
	)
}

func middlewaresEndpointsGotemplate() (*asset, error) {
	bytes, err := middlewaresEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/endpoints.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _middlewaresServiceGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x04\xc0\x41\x0a\xc4\x20\x0c\x05\xd0\xfd\x9c\x22\x6b\x61\x26\x87\x99\x13\x48\xf3\x1b\xa4\x6a\xc4\xa4\x74\x21\xde\xbd\x6f\x2d\x4e\xf4\x07\x48\xed\x1b\xf3\x76\x67\x45\x57\xbb\x4a\x70\x2b\x22\x15\x4f\x9e\x70\x0e\xb4\x51\x73\xc0\x19\x5d\x86\x95\x1e\xfe\x53\xa3\xd3\x26\x1d\x26\xa0\xc4\x7b\x7f\xde\x00\x00\x00\xff\xff\x80\x45\x66\x4f\x4c\x00\x00\x00")

func middlewaresServiceGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_middlewaresServiceGotemplate,
		"middlewares/service.gotemplate",
	)
}

func middlewaresServiceGotemplate() (*asset, error) {
	bytes, err := middlewaresServiceGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "middlewares/service.gotemplate", size: 76, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientCliHandlersHandlersGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x52\xc1\x6e\xdb\x30\x0c\x3d\x5b\x5f\xc1\x15\x46\x11\x0f\xa9\x7c\x0f\xb0\x43\xdb\x74\x45\x0e\x6b\x8b\x2c\xd8\x5d\x89\x19\x5b\x98\x4d\x79\x12\xdd\xac\x10\xf4\xef\x83\x14\x37\x4e\x77\x49\x2f\x36\xf9\xde\xe3\x13\x45\xaa\x2c\xe1\xde\x54\x08\x35\x12\x5a\xc5\x58\xc1\xf6\x0d\xd8\x0e\xce\x49\x51\x96\xb0\x46\x3b\x10\x69\xaa\x8f\x18\x1c\x74\xdb\x82\x79\x45\x7b\xb0\x9a\x11\xb8\xd1\x0e\xf6\xba\xc5\x24\x5e\x3e\xc3\xd3\xf3\x06\x1e\x96\xab\xcd\x97\x98\xff\x42\xeb\xb4\xa1\x05\x78\x2f\xc7\x38\x84\x33\x02\x96\x8a\xf1\x9c\x8d\x79\x08\x42\xf4\x6a\xf7\x5b\xd5\x08\x8d\xa2\xaa\x45\xeb\x84\xd0\x5d\x6f\x2c\xc3\x4c\x64\xfd\x16\xae\xbc\xcf\xe5\xcb\xdd\x2a\x61\x2f\x8a\x1b\xb8\x09\xe1\x4a\x14\x42\x78\x0f\x07\xcd\x0d\xe4\x8c\xb0\xf8\x06\x32\x04\x91\x79\x6f\x15\xd5\x08\xb9\x8e\x50\xce\x28\x7f\xa2\x7d\xd5\x3b\x94\x3f\x90\x1b\x53\xb9\x28\x2a\x4b\xf0\x3e\xd7\xf2\x49\x75\x18\x02\xe8\xae\x6f\xb1\x43\x62\x07\xef\x62\x91\xed\x07\xda\x9d\xab\x66\xde\xa7\xc3\x34\x55\xf8\x37\x19\xdf\xb7\x1a\x89\x6f\x6d\xed\x92\x77\x0c\xe0\x24\xf7\xfe\xd1\xc4\x08\xe4\xf7\x81\x76\xac\x0d\x45\x3e\xe2\x48\x55\x08\x05\xcc\xbe\xf6\x5b\x79\x52\xe5\x5a\xae\xf1\xcf\x80\x8e\x37\x6f\x3d\x8e\x1e\x73\x40\x6b\x8d\x2d\xbc\xc8\x32\x7b\x64\xe3\xa5\x2e\xd6\x45\xbd\xf7\x37\xe3\x70\x3a\xe4\x26\x96\x7d\xaa\xf1\x38\x5b\x91\x65\xd3\x18\x7b\x65\x55\x97\x46\x19\x7d\x64\xd2\x8e\x9a\x74\x86\xde\x83\xa2\x0a\x66\xe9\x43\x86\xc7\x0a\xb9\x72\x77\xca\x61\x6c\xaa\xf8\x80\xaf\xb1\xc7\xf8\xf0\x8a\x8f\xf0\x03\x0d\x5d\x31\xda\x66\xd3\xed\x8e\xe4\xb8\xa6\x05\x5c\xff\xcf\x3c\x9a\x5b\x5b\x87\x30\x3f\xb5\x83\xad\x43\xb8\xe8\x73\xd9\x86\xaa\x69\x12\x53\x32\x52\x29\x0e\x69\x29\x3c\x58\x82\xeb\x71\x39\x73\x20\xdd\x8a\x2c\xbd\xc2\xa3\xec\xfd\xff\x2f\x00\x00\xff\xff\xd5\xe2\x3b\x26\x78\x03\x00\x00")

func svcClientCliHandlersHandlersGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientCliHandlersHandlersGotemplate,
		"svc/client/cli/handlers/handlers.gotemplate",
	)
}

func svcClientCliHandlersHandlersGotemplate() (*asset, error) {
	bytes, err := svcClientCliHandlersHandlersGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/cli/handlers/handlers.gotemplate", size: 888, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientGrpcClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xcf\x6e\xdb\x3e\x12\x3e\x4b\x4f\x31\x35\x82\x85\x14\x28\xd4\x3d\x0b\x5f\xea\x74\x8b\x2e\xb6\xa9\x91\x06\xdd\x43\x51\x14\x0c\x35\x92\x09\xcb\xa4\x4a\xd2\x4e\x0c\x41\xef\xfe\xc3\x90\x94\x23\xbb\x8e\xdb\x83\x61\x91\xf3\xcd\xdf\x6f\xc8\x61\x59\xc2\x42\x57\x08\x0d\x2a\x34\xdc\x61\x05\x4f\x7b\x70\x66\x6b\x2d\x4b\xcb\x12\x1e\xd0\x6c\x95\x92\xaa\x09\x7b\xf0\x2c\xdb\x16\xf4\x0e\xcd\xb3\x91\x0e\xc1\xad\xa4\x85\x5a\xb6\xe8\xc1\x77\x5f\xe0\xfe\xcb\x23\x7c\xb8\xfb\xf4\xf8\x8e\xd6\xdf\xd0\x58\xa9\xd5\x2d\xf4\x3d\x8b\xdf\xc3\x30\x11\xc0\x1d\x77\x38\x95\xd2\x7a\x18\x52\x82\x2c\xb9\x58\xf3\x06\xa1\x31\x9d\x80\xce\xe8\x9d\xac\xd0\x02\x87\xe6\x61\xb9\x00\xd1\x4a\x54\x0e\x6a\x6d\xc0\xad\x90\x0c\x7c\x45\xb3\x93\x02\xd9\x3d\xdf\xe0\x30\x80\x8d\xcb\xb4\x9b\x98\x49\x53\xb9\xe9\xb4\x71\x90\xa5\xc9\xac\xd1\x2d\x57\x0d\xd3\xa6\x29\x5f\x4a\x85\xae\x14\x5a\x39\x7c\x71\x33\x2f\xd3\x4d\x8b\x6c\x02\x21\xf5\xb7\x25\xe5\x06\x1d\xaf\xb8\xe3\x1e\x22\xdd\x6a\xfb\xc4\x84\xde\x94\xdd\xba\x29\xd1\x18\x6d\xec\x2c\x3d\x96\x34\xfa\x66\x2d\x5d\x49\x3f\x54\x55\xa7\xa5\x22\xc7\x64\xcb\x19\xae\xac\x8f\xf2\x0d\xfc\x01\x10\x83\x4a\x93\xb2\x84\x47\xe2\x21\xd6\x20\x4d\x66\x7d\xcf\x3e\xf9\x54\x97\xdc\xad\xe0\x66\x18\xa0\xb4\x3b\x4a\xa0\x7b\x02\x12\x2e\xdf\x1f\x8b\x67\x69\xee\x8b\x7e\x8f\xcf\x60\xd0\x6d\x8d\xb2\xc0\xd5\x58\x45\x78\xe2\x62\x1d\x1a\xe3\xb8\xfe\x42\x2b\x85\xc2\x49\xad\x18\x7c\x72\x20\x2d\xb1\x41\x76\x0c\xda\x4e\x2b\x2b\x9f\x64\x2b\xdd\x1e\x74\xed\x69\x12\xbc\x6d\xd1\x80\xd3\x50\x49\xde\x16\xc0\x55\x05\x2d\x77\x68\x40\xb4\xda\x62\x11\x40\xaf\x36\xd3\x7a\xab\x04\xc5\x94\xd1\x26\x5c\x53\xbe\x6c\xe1\x5d\x2f\xb4\x52\x05\xe8\x8e\x70\x16\x18\x8b\xdb\x5f\xfc\x46\x0e\x59\xf7\xc4\xfa\xfe\xa3\xa6\x6e\x80\x93\xde\xa0\x15\x9a\x02\x3c\x31\x39\xf4\x69\xb2\xe3\x06\x84\x88\x49\x2d\xb4\xaa\x65\x93\xa6\x09\x35\xd7\xcf\x02\x6a\xb8\x9d\x83\xe1\xaa\xc1\x83\xbb\x3e\x4d\x12\x34\x86\x04\x75\xf6\x2f\x21\xf2\x34\x49\x64\x4d\x06\xe1\xdd\x1c\x94\x6c\x3d\x22\x09\x85\xa4\x75\x74\x66\xd9\xff\x0d\xef\x32\x34\xa6\x80\x99\xe0\x4a\x69\x07\xbc\xeb\xda\x7d\xb4\x3c\x23\x43\x43\x9a\x0c\x69\x9a\x88\x49\x3e\x96\x3c\x7d\xff\x71\xd4\x1d\x47\x09\x93\xbb\x73\xd2\xf7\x58\x6b\x83\x19\x05\x13\xbb\xfb\x1b\x6f\xb7\x68\x1f\xf5\xc7\x87\xe5\xe2\x73\x6c\xda\x4c\x08\xb6\x42\x5e\xa1\xb1\x79\x5e\x90\xfb\xa4\xef\x6f\xe0\x59\xba\x15\x5c\x39\x24\xe7\x6c\x18\xd2\x64\xb2\xdb\xad\x1b\x5f\xda\xdb\x39\x21\x58\x3c\xab\xa1\xbe\xe4\x8d\x90\xa1\x66\x57\x72\x04\x8d\x2c\x7c\x46\xb7\xd2\x95\x0d\x40\x5f\xfb\xbe\x7f\xd4\xff\xd3\xcf\x68\xe0\x4a\x46\x92\x3e\xc4\x43\x01\xe3\xe9\x60\xe3\x8e\xd7\xf2\xf5\x25\x37\x6f\x2b\xce\xe1\xb8\x22\xf7\xf8\x1c\x8a\x92\x05\x5d\xaa\x88\x2a\xe2\xf7\xac\xef\xc7\x9c\x86\x81\xf5\xfd\x34\xde\xb0\x39\x9b\x42\xe5\xe9\xe6\x07\x25\x74\x85\x54\xd4\x89\xf4\x01\x7f\x6d\xd1\xba\x11\x73\x87\x67\x31\xfe\xa0\xe0\x08\x9a\xf6\xed\x95\x64\xa3\xf8\x71\xdf\x8d\x81\xf4\xc3\x88\x3d\x6a\x11\xc6\x58\xdc\xcf\x0f\xa5\xca\x72\xbf\x13\x19\x41\x55\x45\x16\xe3\xd7\xf8\x91\x8e\x9d\x6a\x77\xe2\xa0\x6b\x7b\x02\x4c\x39\x3c\x25\x90\xee\x0d\x6f\xee\xb7\xda\xdf\x02\xc0\x25\x52\x8b\x57\xdf\xc9\x50\xd0\x01\x49\xc3\x9d\x4f\xc5\x81\xc0\x12\x84\x72\xa5\x97\x63\x08\xd3\xe4\x62\x65\xe9\x56\xe2\x70\x7c\x69\xb2\xa0\x31\x42\xfe\x43\xd7\x8c\x5b\x71\x7f\xa1\xed\xd0\x38\x0b\x9c\xec\xfa\xab\xee\x4c\x1e\x60\x90\x0e\xad\xd3\xc0\x61\x6b\xd1\xdc\x54\x7a\xc3\xa5\x7a\x03\x1a\x7c\x30\x58\x1a\xb9\xe1\x46\xb6\x7b\xd2\xa9\xb7\x2d\x48\x05\x3c\x5e\x3a\xf1\xaa\xbb\x98\x48\xf6\x13\xe2\x21\x66\x8b\xf0\x5f\xf8\x16\x7f\xf0\xc1\x48\xe5\xd0\xd4\x5c\x60\x3f\xe4\x90\x4d\x56\xd3\x8b\x2e\xc4\x7d\x3b\x7f\xd5\x63\xd9\xf5\x9f\x5b\x2e\x3f\x74\x88\x37\x30\x32\x76\xe8\x9f\x13\xe6\xc2\x61\xf8\x2b\xe6\x2e\x9d\x9b\xb3\xc4\x05\x85\x88\x78\x8b\xb7\x3f\x73\x12\x1c\x78\x02\x2f\x90\xec\x51\x7f\x45\xdc\xa5\x3c\xce\xf1\x36\x46\xf0\x97\xac\xfd\xf2\x33\x28\xc6\x73\x86\x31\x2f\x78\x83\xb0\x5f\xbf\xd1\x95\xba\x7d\x87\x47\xd3\x0e\xac\x33\x5b\xe1\xc8\x59\x1c\x04\xf0\xfd\x87\x75\x46\xaa\x26\x9e\xcc\xe9\xb4\x09\xc4\x50\xde\x7e\xe5\x09\xd8\xe8\x4a\xd6\x12\x6d\x18\xe1\x87\xd7\x01\x4d\x52\xef\xed\x48\x9f\x54\xb3\xeb\x69\x00\x79\x48\x37\x0d\xd5\x5c\xb8\x97\x71\x4e\x7d\x45\x55\x65\x6b\xdc\xfb\x19\x1f\x22\xca\x8f\x8d\xf5\x87\x5c\xbd\x59\x0d\xe7\x0c\xfb\x81\xac\xc7\x29\x07\x73\x20\x93\xe9\x74\x44\xd3\xd8\x1b\xa2\xff\x4b\xb3\xd2\xc7\x32\x16\x27\x3f\x99\x31\xd3\xbe\x3c\x89\x4b\xb8\x97\xdf\xdb\x60\x53\xc1\xf5\xf8\x74\x64\x9f\xef\xf2\x53\x84\x0f\x9b\x26\x64\xc7\xe5\x94\x93\x64\x7c\x9c\xac\x5f\x1f\x27\x3e\x30\x3f\x17\x65\x0d\xbb\x02\xb4\x97\x09\xf7\xc2\x7c\x1e\xd9\x3a\x67\x59\x8c\xfa\xdf\x24\x0c\x23\x34\x18\x9e\xd3\x33\x84\x2a\xed\x97\x05\xac\x0b\xd8\xf9\xd9\x31\xf8\x07\x49\x78\xde\x04\xe8\xf4\x81\x73\xbd\xa9\x60\x0e\x87\x04\xfe\xab\xa5\xca\xae\x37\x55\xf1\xba\xb5\x24\x9d\x60\x95\x31\x96\xe7\xa3\xb9\x58\x19\xe1\x5e\x42\xdd\xff\x09\x00\x00\xff\xff\x60\x24\x0e\x93\x85\x0c\x00\x00")

func svcClientGrpcClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientGrpcClientGotemplate,
		"svc/client/grpc/client.gotemplate",
	)
}

func svcClientGrpcClientGotemplate() (*asset, error) {
	bytes, err := svcClientGrpcClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/grpc/client.gotemplate", size: 3205, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcClientHttpClientGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x10\x34\x29\x91\xc8\x02\x56\xf8\x98\x88\xc3\x67\x9d\x3f\x95\xe5\xdd\x69\x18\xe0\x8d\xa1\xab\xdc\x01\x29\x7e\x61\x7c\x7b\xd7\x82\x5a\xfc\x7d\x52\x5f\x64\x63\xe4\xda\x9b\x07\x95\xf8\x34\xcb\x44\x2a\x2e\x4f\x0f\x39\xfc\x01\x59\x75\xce\x65\x8c\x23\x9b\x49\xda\xf6\xfd\xb6\xc1\x1a\x22\x5d\xed\x44\xe5\xfe\x27\x92\xe6\x5c\x7e\x01\x00\x00\xff\xff\x0b\x3c\x4c\x9e\x69\x00\x00\x00")

func svcClientHttpClientGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcClientHttpClientGotemplate,
		"svc/client/http/client.gotemplate",
	)
}

func svcClientHttpClientGotemplate() (*asset, error) {
	bytes, err := svcClientHttpClientGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/client/http/client.gotemplate", size: 105, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcEndpointsGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x5b\x8f\xdb\x36\x13\x7d\xb6\x7e\xc5\xc4\xd8\x0f\x6b\x07\x5a\xfa\x3d\xc1\x3e\x7c\x4d\xb6\xed\x02\xcd\x05\xd9\x6d\xfb\x10\x04\x01\x2d\x8d\x2d\x62\x29\x92\x21\x29\x5f\x2a\xe8\xbf\x17\x43\x52\xb2\x5c\x2b\x69\xd0\xc7\xa2\x0f\x8b\xb5\x79\x39\x9c\x39\x67\xe6\x90\x5e\xad\xe0\x95\x2e\x11\xb6\xa8\xd0\x72\x8f\x25\xac\x8f\xe0\x6d\xe3\x1c\xcb\x56\x2b\xf8\x80\xb6\x51\x4a\xa8\x6d\x1c\x83\xbd\x90\x12\xf4\x0e\xed\xde\x0a\x8f\xe0\x2b\xe1\x60\x23\x24\x86\xc5\xaf\xdf\xc1\xdb\x77\x8f\x70\xf7\xfa\xfe\xf1\x19\x7d\xff\x0d\xad\x13\x5a\xbd\x80\xb6\x65\xe9\x73\xd7\x8d\x26\xe0\x35\xf7\x38\x9e\xa5\xef\x5d\x97\x65\x86\x17\x4f\x7c\x8b\xe0\x76\x45\x46\xeb\x1f\xfb\x63\xa0\xd0\xca\x73\xa1\x1c\xd4\xe8\x2b\x5d\x3a\xf0\x1a\x6a\xfe\x84\x20\x54\x29\x76\xa2\x6c\xb8\x04\x54\xa5\xd1\x42\x79\x07\x1b\xab\x6b\x70\x68\x77\xa2\x40\x97\x13\x92\xc5\x2f\x0d\x3a\x0f\x5c\x95\x60\xd1\x19\xad\x1c\x82\x3f\x1a\x0c\x48\xb4\x94\x92\xd2\x0e\x4f\x28\x39\x70\x07\x7b\x94\x92\xfe\xa3\x2a\x74\x89\xd6\x11\x00\xe1\x95\x98\xbe\x6f\xb4\x4d\x1b\x03\x5a\x1e\x06\x38\x91\xb5\x01\xdd\x58\x70\x8d\x31\xda\x12\xbf\xde\x72\xe5\xe8\x33\x1d\x27\xb8\x14\x7f\x70\x2f\xb4\x22\xb4\x8d\xb6\x35\xf7\x8e\xc1\xbd\x07\x2e\x9d\x06\xa1\x0a\xd9\x94\xe8\x86\x68\xa0\x16\x65\x29\x71\xcf\x2d\x3a\x96\x65\xa2\x0e\x40\x8b\x6c\x36\xdf\xd4\x7e\x9e\xcd\xe6\x5b\x2d\xb9\xda\x32\x6d\xb7\xab\xc3\x4a\xa1\x5f\x11\x63\x78\xf0\xf3\x8c\x26\x85\xaf\x9a\x35\x2b\x74\xbd\xda\xea\x9b\x27\xe1\x57\xf4\xd7\x63\xd3\x12\xb3\x86\x79\xdb\xb2\xf7\x3f\xdc\x07\xe4\xf7\xdc\x57\x70\xd3\x75\xf3\x6c\x19\x84\xb8\x1b\xa8\x2d\xb4\x94\x58\x78\xd7\xe7\xe8\xab\x11\x65\xe0\x2b\xee\xa1\xd0\xb5\x21\x42\xb8\x02\x5e\x96\xbd\x0e\x94\xdc\xb5\x23\xb0\x1a\xb9\xf2\x44\xfb\x1a\xa1\x71\x58\x12\xbf\x1c\x2a\x94\x06\x2d\x38\x6f\x9b\xc2\xe7\x34\x9d\x8e\x9a\x3e\x49\x28\xaf\x81\x13\x9c\x13\x6a\x2b\x11\x0c\xb7\xbc\x46\x8f\x96\x4a\x92\xc6\xef\x15\xf0\xa8\xac\xcd\x41\xf8\x6b\x47\x87\x6d\x1a\x19\x14\xda\x34\xaa\x20\xf6\x53\xc8\x0a\x49\x20\x0d\xda\x84\x66\x00\x4d\x7b\x0d\xda\x9b\xfe\x40\x02\x5c\x73\x27\x1c\x83\x1f\xb5\x05\x3c\xf0\xda\x48\xcc\xe1\xa8\x1b\xa8\xc5\xb6\xf2\x60\xb8\xa3\xea\x18\x51\x45\x01\x0e\x07\xc5\x73\x8c\xd5\x65\x53\x60\xa0\x81\x2b\xa8\xbc\x37\xec\x67\xae\x4a\x49\x31\xee\x85\xaf\x00\x79\x51\xa5\x22\x87\x45\x7f\xfa\x12\xf6\xc2\x62\x09\x8d\x89\xa0\xce\x60\x21\x36\xa2\x00\xc3\x7d\xc5\x60\x71\x1f\xe2\x13\x8e\xf0\xd7\x7c\x2d\x8f\xc0\xa1\x16\xce\xc7\x06\x81\x12\x9d\xd8\x2a\xda\x2a\xd4\x4e\x3f\x61\xa0\xf2\x21\xca\x32\x34\x54\x08\x11\xcf\xc5\x8e\x62\x10\x44\xcf\x24\x5b\x8e\xd9\x2d\xa4\x40\xe5\xcf\xd9\x1d\x09\x77\xea\x4d\x79\xa4\x0e\x8e\x70\x58\x7e\x4b\x46\xea\xa2\xc8\x95\x20\x86\x6b\x8c\x65\x75\x8a\x57\x28\x8f\x76\xc3\xa9\xa0\xa6\x95\x20\xb0\xe1\xb0\x69\x7f\x68\x5c\x74\xb6\xd4\x90\xab\xa0\xc3\x5b\xdc\xbf\x4a\xf9\x14\xba\x5e\x0b\x15\x78\xaa\x53\x88\x23\x61\xf3\xe4\x22\xbe\xb1\x0a\x44\xa8\x64\x0a\xb0\xe0\x52\xa2\x8d\xc5\x9c\x82\x65\x59\x48\xe7\x82\xd0\x36\x6b\x5b\xcb\xd5\x16\xe1\x4a\xc0\x8b\x5b\x60\xfd\xfa\x37\x51\x8c\xae\xcb\x66\x6d\x7b\x25\xd8\x5b\x5e\x63\xd7\xf5\xfb\x01\x60\x48\x82\xf5\x83\x59\xdb\xde\xd0\x68\xd7\x65\xdd\x79\xaf\x7e\xc7\x21\x54\x9d\xb0\x18\x45\xb8\x84\xd1\xb9\x8b\xc2\x1f\x20\xf9\x08\x7b\x15\xff\xe7\x54\x0d\xcf\xcd\x9a\xb5\xed\x4f\x9a\x96\xc1\x95\x60\x1f\xa2\xbb\x3e\x1e\x0d\xa6\xad\x4b\x58\x5c\x2e\x8a\xb6\x3b\x5a\x95\x03\x5a\xab\xed\x12\xda\x6c\x36\xeb\x6d\x39\x0c\x52\xc0\xc8\x26\x38\xa0\x98\x28\x86\x65\x36\x9b\x89\x4d\x58\xfa\xec\x16\x94\x90\x01\x63\x96\x54\x51\x42\x06\x98\x6c\x36\xeb\xb2\x61\xb4\x3f\x81\x7d\x4f\x6c\xcb\x9c\x50\xb2\x59\x97\xb5\x6d\xa4\x97\xc8\x7d\x43\x2d\x35\x66\x38\x34\xed\x95\xc7\xc0\x70\xd4\x6d\x4c\xfa\x95\xc7\x29\xde\x23\xf1\x04\x36\x95\xa2\x83\x10\xde\x78\x6f\x5c\xf1\x10\x7a\x70\x79\x59\x04\x67\xc9\x13\xf6\xb4\x74\xfd\x2d\x38\xf4\x50\x4b\x42\x0d\xf7\xe1\x68\x38\x8a\x30\x52\x87\xd0\xbf\x50\x46\x09\x63\x8a\xc3\x8b\x22\x08\xfb\x76\x83\xa0\x8e\xfd\xa5\xb8\x42\x44\x71\xd5\x84\x96\x53\x6a\x46\x3d\x87\x99\x5d\x12\x29\x0e\x07\xf6\xa3\x56\x63\xcd\x7e\xb7\xdc\xfc\x5f\xca\xbb\x43\x81\xc6\xc3\xde\x72\xe3\xa2\xcd\x0e\xec\x6d\x04\xca\x92\xee\x98\xd4\x9f\xa7\x86\x0d\xf2\x06\x7f\x9a\xb8\x38\xd9\x9b\xe1\x52\x0e\xef\xa0\x5f\x5d\xff\x32\xa2\x37\x80\x31\xf2\x48\x36\x43\xd6\xe9\x09\x7c\x74\x85\x93\x67\xe0\x0e\xed\xf1\x74\xc1\x8b\xe0\xbf\xc3\x6d\x49\x78\xef\x0c\xdd\x1c\xe4\x9e\xf9\xc8\xbc\x0a\xae\xe8\xe6\xa4\xfb\x06\x4b\xda\xb6\x3e\x82\x22\x0d\xe2\x8d\x8a\x87\xf0\x74\x28\xe3\x23\x68\x8d\x14\x02\xe5\x6c\xb0\x64\x17\x6c\x2c\x4e\x31\xe5\x30\x7f\xf0\xdc\x37\x6e\x9e\xc3\xfc\xbd\x50\xdb\xf9\x32\xeb\xed\xe1\xf9\xc8\x1f\xbe\xb6\x1f\x26\x58\xc9\x4f\xd1\x30\xc6\x9c\xb7\x42\x6d\x43\x39\xa5\xf7\x4d\x49\x55\x51\x73\xf3\x31\x4e\x7d\x8a\xf4\xb7\x1d\xc9\x4f\xb6\xf6\x77\xf6\x35\x9b\xcd\x47\x15\x35\x7f\x01\x03\x40\x97\x27\x88\x58\x06\xb3\x2e\xcb\x66\xa4\xca\x67\x0a\x29\x94\x71\x80\x1e\xc2\x6b\xa3\x9d\x7c\xce\x41\x3f\xd1\x74\x1f\xe0\x47\x3c\x7c\x7a\x09\xcf\xf4\x53\x2c\x49\xc3\x95\x28\x16\x9b\xda\xb3\x07\x63\x85\xf2\x9b\xc5\xfc\xae\x87\x18\x94\xbc\xfe\x9f\xbb\x86\x52\xa3\x03\xa5\x3d\xe0\x41\x38\xff\x12\x1c\xe2\xb8\x00\x86\x1a\x72\x6c\xab\xe7\x14\xd4\x72\x99\xcc\xaa\x44\x89\x1e\x17\x7d\x04\x61\xee\x94\x80\x50\x45\x0e\x9f\x4f\x19\x0c\x4c\x7e\x3f\x67\x62\x43\xbb\xe0\xf6\x16\xce\xd8\x4b\x4d\x37\xe9\xba\x70\x3b\x0a\x7e\x31\xb9\x64\xd9\x77\xe1\x19\xeb\xb1\x03\x7f\xe1\x6b\x94\x58\x9e\x0a\x23\xfe\x9e\xd8\xa2\xef\xcb\x98\x4a\xbf\x8a\x0f\xa1\x58\xcc\xfb\x0a\xd5\x30\xa9\x47\x85\x9b\xb0\x62\xfd\xe5\xb1\xdf\x52\x4b\x34\x71\x31\xc4\xdf\x28\x3c\xfe\xb6\x11\x05\x3d\x71\xac\x28\xe2\xdb\x73\x14\x42\x25\x8a\x2a\x6c\x75\xa8\x26\x22\x48\xd7\x7a\xda\xdc\x3f\x6a\xb4\x4d\x97\xfa\x65\x4e\xc1\x77\x63\x25\xe7\x97\x16\x3d\xe1\xda\xd9\xd7\xd2\xfa\xc7\x26\x75\x11\x54\x9e\xd2\x0c\x7c\x5b\x2c\x50\xec\xe2\xf3\x2f\xa4\x98\x5e\xd5\x29\x6d\x06\x0f\x88\x03\xca\x08\x24\x4c\xf4\x8f\xd2\xa1\xff\x29\x4e\xaa\xc8\x12\x3d\x17\x32\x3c\x20\xfb\x76\x0a\xbf\x69\xd2\xc3\x97\x4b\xe1\x8f\xec\x5b\x56\x72\x96\xfa\xd8\x51\x26\xb2\xf9\xcf\x4f\xfe\x85\x7e\x72\xb6\x2d\x9f\x7e\xf7\x7d\xcd\x5e\xfe\x0c\x00\x00\xff\xff\x7f\xf3\xd2\x0f\xc8\x10\x00\x00")

func svcEndpointsGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcEndpointsGotemplate,
		"svc/endpoints.gotemplate",
	)
}

func svcEndpointsGotemplate() (*asset, error) {
	bytes, err := svcEndpointsGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/endpoints.gotemplate", size: 4296, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerCliCliGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\x8f\xd3\x30\x10\x85\xcf\xf1\xaf\x18\x2c\x81\x12\xa9\x24\x7b\x60\x39\x14\xf5\xb0\xb4\xa5\x70\x81\xa8\xdb\xdd\x2b\x72\x93\x49\x3a\x22\xb1\x23\x7b\x9a\xd5\x52\xf5\xbf\x23\x3b\x1b\x11\xd8\x45\xe5\x64\x47\x7e\xef\x9b\xd1\x7b\xe9\x54\xf1\x43\xd5\x08\x45\x43\x42\x50\xdb\x19\xcb\x10\x8b\x48\x56\x2d\x4b\x7f\x34\xaa\xf6\xa7\x71\x52\x88\x48\x9e\x4e\xe9\x97\xa0\xc9\x15\x1f\xe0\xed\xf9\x0c\x99\xeb\x8b\xcc\xa1\xed\xd1\x4a\x91\x08\x91\x65\xb0\x34\xba\xa2\x1a\x1e\xa8\x69\x60\x8f\xd0\x99\xee\xd8\x28\xc6\x12\xf6\x8f\xb0\xfe\x7a\x0f\xbd\xb2\x0e\x8c\x06\xd2\xc4\xd4\xd0\x4f\xc5\x64\xb4\x37\xfa\x61\x6e\xf0\x99\x1e\xed\x83\x25\xc6\xdf\x0e\xd2\x23\xd9\xe8\x20\x4d\x73\x65\x1d\xc6\x89\xe8\x95\x1d\x9f\x86\x4d\xd2\xe1\x4b\x88\xea\xa8\x8b\x30\x27\x4e\xe0\x24\xa2\xe0\xba\x65\x4b\xba\xbe\x57\x36\x7e\x33\xc8\xd2\x15\xee\x8f\xf5\x4d\x59\xda\x19\xc8\xd2\xdf\x53\x55\x96\x56\xce\x40\xce\xaf\xaf\xde\x5f\xf9\x4b\x90\x80\xd2\x25\xb4\xc8\x96\x0a\x07\x0d\x39\x46\x0d\x5e\x89\xce\xc9\xe4\x9f\xf4\xcf\xbb\x5d\xfe\x04\x3f\x30\x77\x53\xf6\x75\x60\x7b\xc1\xff\xe3\x36\xdb\x7c\xf9\x84\xab\x6d\x57\x4c\x71\xef\x02\xae\xde\xe6\x4b\x88\x3d\x34\x79\x4e\x15\x51\x96\xc1\x9d\x43\x40\xdd\x93\x35\xba\x45\xcd\x3e\x5e\x52\xfb\x06\xdd\x0c\xa8\x02\x87\x9c\xc2\xa7\x50\xc5\x41\xf5\x08\x9d\x25\x63\x89\x1f\x43\x27\xb0\xd6\x7d\xa8\x23\x15\x11\x55\x01\x0c\xf3\x05\x18\x97\x6e\x90\x51\xf7\xb1\x5c\xad\x3f\xde\x6d\xbe\xdf\xac\x56\x5b\x99\x7c\x18\x04\xaf\x16\x20\xa5\xcf\x3f\xfa\x3b\x70\x58\x04\x85\x88\xce\x01\x17\xfe\xbe\x3f\x71\xf9\xb7\xed\xce\x83\xc2\xd3\x33\xd0\x98\x2d\x2c\xa0\x6a\x39\xbd\xed\x2c\x69\xae\x62\x39\x7f\xed\xe4\x2c\x78\x92\x91\xfd\xc2\xaa\xde\x7d\x61\xd3\xc9\x80\xe9\xa2\x2f\xc0\x7c\x2f\x17\x60\x63\x75\x13\xd8\x59\xfc\x0a\x00\x00\xff\xff\xff\xc3\x80\x0c\x81\x03\x00\x00")

func svcServerCliCliGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerCliCliGotemplate,
		"svc/server/cli/cli.gotemplate",
	)
}

func svcServerCliCliGotemplate() (*asset, error) {
	bytes, err := svcServerCliCliGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/cli/cli.gotemplate", size: 897, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcServerRunGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x4d\x6f\xdb\x38\x13\x3e\x93\xbf\x62\x2a\xf4\x20\x03\x8a\x74\x78\x6f\x45\x73\x68\xf3\xee\xa6\xc1\x26\x81\x91\x04\xe8\x99\x16\xc7\x14\x11\x89\xd4\x92\x94\xed\x40\xf0\x7f\x5f\x0c\xf5\x11\xb9\x69\x8c\x1c\x7a\x48\x24\x71\x9e\x79\xe6\x7b\xe8\x56\x94\xcf\x42\x21\x78\x74\x3b\x74\x9c\xeb\xa6\xb5\x2e\x40\xca\x59\x62\x30\x24\xc3\xa3\xa8\x42\x68\x97\xef\x45\xdb\x3a\xbb\x4d\x38\x67\x45\x01\xff\x93\xb0\x16\x2e\xbc\x70\x96\x28\x5b\x0b\xa3\x72\xeb\x54\x71\x28\x08\x5c\x5a\x13\xf0\x10\x79\x94\xb5\xaa\xc6\x7c\x01\x51\xae\x2d\x47\x8e\x6b\x0b\xff\xe8\x40\x28\x1d\xaa\x6e\x93\x97\xb6\x29\x94\xbd\x78\xd6\xa1\xa0\xbf\xda\xaa\x11\xf8\x54\x69\x0f\x8f\xe8\x76\xba\x44\xce\x92\xbe\xcf\x6f\xa2\xc7\x6b\x11\x2a\xb8\x38\x1e\xa1\xa8\x84\x91\x35\x3a\x9f\x70\xd6\x6e\x80\x10\xeb\xef\xa7\x98\xe4\xf7\x8a\x7e\x57\xbe\x23\x69\xb4\x94\x35\xee\x85\x43\x9f\xf0\x15\xe7\x45\x01\x57\xd6\x6c\xb5\x02\x8a\x4f\x68\xe3\x21\x54\x08\x0e\xff\xed\xb4\x43\x09\x5b\x8d\xb5\xf4\xb0\xb5\x0e\x5c\x67\x8c\x36\x0a\xc4\x94\xe1\xf0\xd2\xe2\xa4\xed\x83\xeb\xca\x00\x3d\x67\x3f\x9e\x9e\xd6\xdf\xa4\x74\x74\xa4\x8d\xe2\xec\xff\xb8\xe9\xd4\xc9\xc9\xf5\xc3\xfa\x6a\x79\x70\x8c\x7e\x3c\x74\x06\x7c\x10\x2e\x78\x10\x60\x70\x0f\x54\x9e\xd1\x56\x06\xea\x61\x7d\x35\x7f\x08\x23\x41\x80\x24\xe2\xf1\x0c\xf6\x3a\x54\xe4\x3a\x31\xb5\xc2\x7b\x94\x14\x11\xb9\x46\xe0\xda\x2a\x85\x8e\x6f\x3b\x53\x92\x9d\xb4\xdc\xaa\xd1\xf3\x6c\x94\xd1\x23\xbf\x8d\xaf\x2b\x0a\x63\x38\xa5\x93\x34\x69\xbc\x4a\x32\x48\x2a\xac\x6b\x9b\xac\x38\x93\xb8\x1d\x14\x7e\x45\x28\x6b\xe5\xe6\x05\x93\xd5\x50\xe1\xef\x9d\xd7\x06\xbd\x07\x69\x1b\xa1\x4d\xce\xd9\x4e\xb8\xe8\xb0\x2e\x11\xda\x4d\xde\xf7\xd7\xf6\x5e\x34\x08\xf9\xd8\x07\x39\x7d\x1d\x8f\x8f\x43\x82\x59\xcf\x19\x9b\xe0\x97\x30\xb5\x43\x7e\x8f\xfb\x11\x9f\xae\x38\x23\x4b\x3f\x9d\x68\xa7\x5e\x1a\x52\xb1\x28\x74\x0e\x8f\x88\xcb\x83\x62\xe4\xcc\x95\x3d\x31\xb0\xd4\x21\xc6\xc9\xc8\x88\x58\x71\x76\x1c\x02\xfb\xcb\xc8\xd6\x6a\x13\x4e\x03\x4b\x39\xeb\x7b\x27\x8c\x42\xf8\xac\xe1\xcb\xe5\x6b\x54\x77\x18\x2a\x2b\x3d\xb5\x20\x67\xac\xef\x9f\xec\xad\xdd\xa3\x83\xcf\x7a\x0c\x78\x26\xbc\x04\xbf\x2b\xf3\x3b\xf1\x8c\x7d\xff\x46\xba\x70\xa4\xef\xd1\x48\x62\xa3\x54\xe3\x28\xf7\x64\x94\xf4\x27\x05\xdf\x7f\xd8\xa5\x37\xc6\xbe\x00\x00\x9c\x71\x35\x5b\x38\x31\xa6\x25\x56\xc1\x63\x8d\x65\x40\x39\x27\xc9\x7f\xa0\x20\x73\x04\xb1\x24\xaf\xf1\xbc\xad\xc9\xcc\x9a\xce\xa8\xb1\xdb\xee\xb0\xac\x84\xd1\xa5\xa8\x5f\xcb\x82\xce\x95\x14\x76\x23\x9e\x31\x25\x31\xa0\x73\xd6\xad\x38\x2b\xc3\x81\x04\xe3\x56\xcb\xbf\x8b\xf2\x59\x39\xdb\x19\x99\x8e\x74\x37\x26\xa0\x73\x5d\x1b\xa6\xbe\xcb\x39\x53\xf6\xb5\x09\x67\xf9\x8f\xe1\x24\x25\x5b\xa3\x6e\x1c\x79\xa8\xb5\x0f\x68\x26\x45\x9a\xbd\x34\x8e\xd6\x38\x5b\x64\x9e\x86\xee\x1e\xf7\x57\x83\x17\xe9\x20\x58\xe5\x3f\x75\xa8\xd2\x24\x38\x61\x3c\xad\x2f\x1a\xad\x38\xec\x71\xb0\x58\x43\x9a\xb4\x1c\xa6\x41\xc0\xbb\xee\x10\x27\xa1\xc9\x07\x67\xd2\xa4\x88\xf8\x61\xb9\x17\x49\x36\xc0\x47\x4f\xff\x26\x4f\xa2\x24\xbf\x31\x12\x0f\xab\x33\xaa\x65\x23\x6b\x6d\xf0\x7d\x86\xab\x01\x70\x8e\x83\xfe\xe9\xfa\x0c\xc7\x7a\x00\x9c\xe3\xf0\x2f\xcd\xc6\xd6\xef\x53\x3c\x46\xf9\x39\x86\xe0\x44\x79\xc6\x87\x27\x12\xaf\x62\x7e\x97\x8b\x4d\x48\xe9\x92\x0c\xca\xad\xca\xe7\x3d\x4e\x46\x62\x63\x7d\xbd\x18\xd8\x6e\x63\xa1\xbf\x19\x19\x8b\x91\x9e\x80\x33\x68\x68\x6f\x4c\x5d\x45\xb7\x03\xcc\x85\xfd\x23\x9d\x41\x94\xb4\x95\x59\x35\x8d\x3f\xad\x0f\x3a\x9d\x3a\xb3\x0c\x87\x0c\xe6\x71\x99\x36\xfe\xea\xfd\x50\xa7\x3b\xec\x23\x91\x4e\xd8\x0c\xaa\x65\xa0\xf1\xbe\xfa\xb3\x81\x12\xe5\x30\x01\xb5\xc9\x68\x90\x49\xdd\x60\x18\xbd\x4a\x93\x50\xb6\x63\x00\xd3\x0d\x4b\x01\xe8\x6d\xc4\x7e\xba\x04\xa3\xeb\x68\x7c\x8e\x09\x9d\xa3\x4f\x87\xa1\x73\x86\xb3\xb8\xc7\x98\x77\xbb\x65\x22\x89\x6a\xb8\x8f\x7e\xc9\x23\x71\xc7\x8d\x4b\x3f\x7e\xe6\x51\x74\x71\x10\xdb\x4d\xfe\x80\x8a\xdc\x72\x7d\xff\xdb\xcb\x2d\xf5\x19\x78\xb7\x3b\xd7\x70\xcb\x20\x26\x8f\x7d\x3e\x64\xbe\x36\xcb\x64\x3f\x74\xe6\xd3\xe9\x95\x8d\x07\x4d\x39\xfb\x7a\x31\x6c\xa5\x23\xff\x2f\x00\x00\xff\xff\x27\xd6\x2e\x55\x1e\x0a\x00\x00")

func svcServerRunGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcServerRunGotemplate,
		"svc/server/run.gotemplate",
	)
}

func svcServerRunGotemplate() (*asset, error) {
	bytes, err := svcServerRunGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/server/run.gotemplate", size: 2590, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_grpcGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x56\xcb\x6e\xe3\xb8\x12\x5d\x8b\x5f\x51\x6d\x04\x17\x76\xe0\x48\x77\x1d\x20\x9b\x4e\x32\x9d\x60\x26\x0f\x64\x8c\x9e\x45\xa3\xd1\xa0\xa5\xb2\x44\x98\x22\x15\x92\x72\xe2\x21\xf4\xef\x83\xa2\x24\x5b\x89\xdd\xb6\x17\x86\x25\xb2\x1e\xa7\xce\x29\x16\x95\x24\x70\xad\x33\x84\x1c\x15\x1a\xee\x30\x83\xf9\x1a\x9c\xa9\xad\x8d\x59\x92\xc0\x0b\x9a\x5a\x29\xa1\xf2\x76\x0d\xde\x84\x94\xa0\x57\x68\xde\x8c\x70\x08\xae\x10\x16\x16\x42\x62\x30\xbe\x79\x82\xc7\xa7\x19\xdc\xde\xdc\xcf\xbe\xd0\xfb\x77\x34\x56\x68\x75\x09\xde\xc7\xdd\x73\xd3\x0c\x36\xe0\x86\x3b\x1c\xee\xd2\x7b\xd3\x30\x56\xf1\x74\xc9\x73\x04\xbb\x4a\x19\xd9\xcf\xfa\x34\x50\x19\xbd\x12\x19\x5a\xb0\x68\x56\x68\x2e\xac\xc8\x10\xe6\x42\x65\x42\xe5\x16\x16\xda\x80\x2b\x10\xf2\x97\xe7\x6b\x70\x86\x2b\x5b\x69\xe3\x02\xb6\x7b\x07\xb5\x13\x52\xfc\x8b\x36\x98\x6c\x76\x93\xdc\x54\x69\xfc\x77\x08\x17\x33\x26\x4a\x5a\x84\x31\x8b\x46\x0a\x5d\x52\x38\x57\x8d\x18\x8b\x46\xb9\x96\x5c\xe5\xb1\x36\x79\xf2\x9e\xd0\x4e\xaa\x95\xc3\x77\x37\x0a\x7b\x3a\x97\x18\x0f\x4c\x28\x66\x52\xa2\xe3\x19\x77\x9c\xfc\x69\x61\x93\x12\x46\xb9\x70\x45\x3d\x8f\x53\x5d\x26\xb9\xbe\x58\x0a\x97\xd0\xef\x23\x26\x72\xeb\x6b\x27\x78\x22\x45\x16\x55\x73\x18\x79\x1f\x3f\x7f\xbd\x0f\x38\x9f\xb9\x2b\xe0\xa2\x69\x46\x6c\xc2\x02\x53\x0f\x7c\x89\xdf\x5e\x9e\xaf\xdb\x7a\xa0\xe4\x4b\xb4\xc0\xc1\xa2\x03\xbd\x00\x54\x59\xa5\x85\x72\x16\xf8\x8a\x0b\xc9\xe7\x12\x81\xd3\x7e\x20\xcc\xfb\x6f\xfa\x91\x97\x08\x71\x97\x2e\xa6\xb7\xa6\xe9\xb9\x59\xd4\x2a\xfd\x94\x60\x9c\xba\x77\xe8\x98\x88\xaf\xdb\xff\xe9\x20\xcd\x6d\xff\x34\x81\x6a\x1e\x1f\x4e\x00\x9e\x45\xad\xaa\x4f\x95\x13\x5a\x59\xb8\xbc\x82\x1f\x3f\x3f\x30\xd7\xe9\xd4\x1a\x78\x16\x45\xb0\x6f\xfb\x2b\x2e\xb4\xc1\x71\xcf\xff\x4c\x77\xc8\x26\x53\x16\x35\x2c\x32\xe8\x6a\xa3\xe0\x7f\xe4\xda\x3a\xf8\xc0\xb4\xf7\x30\xd3\x7f\xe9\x37\x34\x1f\x01\x42\xd3\xb0\xc8\x7b\xc3\x55\x8e\x70\x26\x08\xd6\x66\xff\x01\x5d\xa1\x33\x4b\x16\x91\xf7\xbd\xfb\x99\xe8\x2a\xbb\xfc\x84\xef\x11\xdf\x3a\xe2\x58\x14\x45\xa9\x7b\x9f\xd2\xff\x86\xaf\xd8\xfb\x8d\x6b\x4f\x5d\xb0\xb8\xc1\x54\x67\x81\xf7\x81\xc5\x0b\xbe\xd6\x68\x5b\x83\x5b\xb5\xd7\xc0\x56\x5a\x59\x0c\x16\x1f\xa8\x8d\xe3\x98\x16\x89\x10\xef\x2f\x48\x30\xaa\xa0\x61\x4d\x68\xa2\x2d\x31\x20\xca\x4a\x62\x89\xa4\x25\x9d\x9a\x23\x0a\x0a\xe5\xd0\x2c\x78\x8a\xcc\xad\x2b\x1c\xc6\xb1\xce\xd4\xa9\x03\xcf\x8e\xf3\xb8\x87\x46\x80\x4f\x3c\xde\x71\x95\x49\x34\x6c\x0b\xbe\x45\xde\x85\x09\x83\x60\x90\xdd\xe9\x6d\x21\xa7\xd7\x70\x14\x6a\x38\x10\x63\x0b\xe7\xdb\x54\x93\x6d\xf8\x0d\xfa\xfd\x87\xc4\xe0\x2b\x9c\x0f\x0f\xc5\x99\x88\x3b\x45\x67\xeb\xaa\x07\x35\x81\xf1\xae\x51\xab\xea\xc0\x6a\x0a\x68\x8c\xa6\xe4\x2c\xfa\x45\xa1\xab\xb0\x42\xb0\xa9\xa7\x76\xf8\x6c\xcf\x09\x75\x0b\x61\x0b\x58\x26\x2c\x12\x8b\xe0\xf4\xe5\x0a\x94\x90\x14\xaa\x3f\x29\x4a\xc8\x10\x6f\x78\x7a\x0c\x56\xf1\x29\xd0\x26\x53\x72\x67\x0d\xf3\xbe\x15\x8a\x64\xea\xa8\x6e\xbb\xfa\x38\xcf\x74\xb5\x1c\x38\x00\x20\x68\x84\x7d\x1a\xe8\xad\x43\x67\xf1\x07\x09\xe5\x0a\xee\x48\x86\x15\x1a\x1a\x80\xa1\xd1\xdb\xb1\xb7\xdb\x6f\xa6\x8b\xec\x34\x70\xa8\x2d\x9a\x8b\x4c\x97\x5c\xa8\x43\xc6\x31\x3c\x1b\x51\x72\x23\xe4\x9a\x5c\x16\xb5\x04\xa1\xc2\xec\x1d\x8c\xcf\x43\x75\x8c\x7f\xed\x76\x09\xd5\xf2\x82\xaf\xdb\xae\xf4\xd4\x12\x83\xb7\xa1\xf4\xd4\x52\x97\x57\xbd\xcf\x3e\x79\x76\xda\x6b\xa0\xe7\xeb\x01\xa5\xda\xf1\x72\x92\x52\x07\x27\xd1\x5e\xa9\x5a\x8f\xde\xe4\x77\x5a\x1d\x57\xa1\x4b\x11\x34\x3b\xa0\x6c\x25\xd7\x27\x49\x75\xb0\x90\x7d\x5a\x6d\x10\x9c\x28\x96\xad\x88\xc5\xde\xeb\xb4\xd3\x34\xd0\xcb\x56\xfb\x04\xbb\x43\x59\xa1\xb1\xac\xad\x61\xe7\x0a\xdc\x3f\x8b\xca\x0c\xce\x7b\xd3\xf8\xe1\x66\xf2\xd9\x82\xf0\xd2\x48\x5d\x4e\x61\x15\x30\x87\x2e\x38\x2f\xb3\x30\x25\xc4\x02\x56\xc3\xa9\xd1\x7e\xb5\x20\x2c\x71\x1d\xf4\xce\x32\xfa\xaa\xd4\xae\x20\x92\xfb\x34\x34\xa2\x4b\xee\x60\xbc\x9c\xc0\x5b\x21\xd2\x22\x98\x4a\x09\x92\x04\xeb\xa2\x70\x95\x85\x6b\x87\xbe\xc2\xe2\x6b\xae\xb4\x12\x29\x97\x77\xc8\x33\x34\x7f\xe2\x9a\x3e\x69\x5c\x97\xc8\xea\xb6\x69\x84\x83\x94\x2b\x98\x63\x1f\x22\x4d\xd1\x5a\xcc\x28\x37\x0a\x57\xa0\xe9\x32\x77\x17\x30\x5c\x6d\x8a\xfd\x47\xb8\xe2\x3b\x97\x35\xb6\x43\x91\x8a\xfd\xf1\xff\x9f\x93\xa3\x86\xbf\x41\x37\x5e\x4e\xb6\x11\xc2\xed\xba\x11\x2f\x75\xef\xac\x61\xff\x05\x00\x00\xff\xff\xc6\x32\x11\x8b\x7b\x0b\x00\x00")

func svcTransport_grpcGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_grpcGotemplate,
		"svc/transport_grpc.gotemplate",
	)
}

func svcTransport_grpcGotemplate() (*asset, error) {
	bytes, err := svcTransport_grpcGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_grpc.gotemplate", size: 2939, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _svcTransport_httpGotemplate = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x2c\xcb\xb1\x0d\xc2\x30\x10\x05\xd0\x3e\x53\x5c\x1d\x09\xdf\x1a\x29\x91\xe2\x05\xac\xf0\x31\x08\x93\xb3\xce\x1f\x1a\xeb\x76\xa7\x61\x80\x37\xa7\xae\xb2\x03\x52\xed\x42\xff\x8c\xa1\x15\x67\xb5\xd7\x93\xfa\x20\x3b\xbd\x9c\xa3\x9b\x53\x89\x77\x6f\x85\x18\xa9\x9a\xdc\xcd\xe5\xb0\x1b\x64\xd5\x88\x65\xce\xa3\xb4\x26\x69\xcb\xf9\xba\xa1\x75\x78\xda\xe1\x5f\x78\xfe\x1b\x49\x11\xcb\x2f\x00\x00\xff\xff\xdd\x3a\x4a\x8f\x6a\x00\x00\x00")

func svcTransport_httpGotemplateBytes() ([]byte, error) {
	return bindataRead(
		_svcTransport_httpGotemplate,
		"svc/transport_http.gotemplate",
	)
}

func svcTransport_httpGotemplate() (*asset, error) {
	bytes, err := svcTransport_httpGotemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "svc/transport_http.gotemplate", size: 106, mode: os.FileMode(420), modTime: time.Unix(1464111000, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"cmd/NAME/main.gotemplate": cmdNameMainGotemplate,
	"cmd/NAME-server/main.gotemplate": cmdNameServerMainGotemplate,
	"handlers/handlers.gotemplate": handlersHandlersGotemplate,
	"handlers/hooks.gotemplate": handlersHooksGotemplate,
	"middlewares/endpoints.gotemplate": middlewaresEndpointsGotemplate,
	"middlewares/service.gotemplate": middlewaresServiceGotemplate,
	"svc/client/cli/handlers/handlers.gotemplate": svcClientCliHandlersHandlersGotemplate,
	"svc/client/grpc/client.gotemplate": svcClientGrpcClientGotemplate,
	"svc/client/http/client.gotemplate": svcClientHttpClientGotemplate,
	"svc/endpoints.gotemplate": svcEndpointsGotemplate,
	"svc/server/cli/cli.gotemplate": svcServerCliCliGotemplate,
	"svc/server/run.gotemplate": svcServerRunGotemplate,
	"svc/transport_grpc.gotemplate": svcTransport_grpcGotemplate,
	"svc/transport_http.gotemplate": svcTransport_httpGotemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"cmd": &bintree{nil, map[string]*bintree{
		"NAME": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameMainGotemplate, map[string]*bintree{}},
		}},
		"NAME-server": &bintree{nil, map[string]*bintree{
			"main.gotemplate": &bintree{cmdNameServerMainGotemplate, map[string]*bintree{}},
		}},
	}},
	"handlers": &bintree{nil, map[string]*bintree{
		"handlers.gotemplate": &bintree{handlersHandlersGotemplate, map[string]*bintree{}},
		"hooks.gotemplate": &bintree{handlersHooksGotemplate, map[string]*bintree{}},
	}},
	"middlewares": &bintree{nil, map[string]*bintree{
		"endpoints.gotemplate": &bintree{middlewaresEndpointsGotemplate, map[string]*bintree{}},
		"service.gotemplate": &bintree{middlewaresServiceGotemplate, map[string]*bintree{}},
	}},
	"svc": &bintree{nil, map[string]*bintree{
		"client": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"handlers": &bintree{nil, map[string]*bintree{
					"handlers.gotemplate": &bintree{svcClientCliHandlersHandlersGotemplate, map[string]*bintree{}},
				}},
			}},
			"grpc": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientGrpcClientGotemplate, map[string]*bintree{}},
			}},
			"http": &bintree{nil, map[string]*bintree{
				"client.gotemplate": &bintree{svcClientHttpClientGotemplate, map[string]*bintree{}},
			}},
		}},
		"endpoints.gotemplate": &bintree{svcEndpointsGotemplate, map[string]*bintree{}},
		"server": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"cli.gotemplate": &bintree{svcServerCliCliGotemplate, map[string]*bintree{}},
			}},
			"run.gotemplate": &bintree{svcServerRunGotemplate, map[string]*bintree{}},
		}},
		"transport_grpc.gotemplate": &bintree{svcTransport_grpcGotemplate, map[string]*bintree{}},
		"transport_http.gotemplate": &bintree{svcTransport_httpGotemplate, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

